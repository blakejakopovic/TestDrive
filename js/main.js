var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2307";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__18850__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__18850 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__18850__delegate.call(this, args);
    };
    G__18850.cljs$lang$maxFixedArity = 0;
    G__18850.cljs$lang$applyTo = function(arglist__18851) {
      var args = cljs.core.seq(arglist__18851);
      return G__18850__delegate(args);
    };
    G__18850.cljs$core$IFn$_invoke$arity$variadic = G__18850__delegate;
    return G__18850;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3539__auto__ = ty;
    if (cljs.core.truth_(and__3539__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3539__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4407__auto___18852 = len;
  var i_18853 = 0;
  while (true) {
    if (i_18853 < n__4407__auto___18852) {
      new_arr[i_18853] = arr[i_18853];
      var G__18854 = i_18853 + 1;
      i_18853 = G__18854;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__18855__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__18855 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18855__delegate.call(this, array, i, idxs);
    };
    G__18855.cljs$lang$maxFixedArity = 2;
    G__18855.cljs$lang$applyTo = function(arglist__18856) {
      var array = cljs.core.first(arglist__18856);
      arglist__18856 = cljs.core.next(arglist__18856);
      var i = cljs.core.first(arglist__18856);
      var idxs = cljs.core.rest(arglist__18856);
      return G__18855__delegate(array, i, idxs);
    };
    G__18855.cljs$core$IFn$_invoke$arity$variadic = G__18855__delegate;
    return G__18855;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__18857__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__18857 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__18857__delegate.call(this, array, idx, idx2, idxv);
    };
    G__18857.cljs$lang$maxFixedArity = 3;
    G__18857.cljs$lang$applyTo = function(arglist__18858) {
      var array = cljs.core.first(arglist__18858);
      arglist__18858 = cljs.core.next(arglist__18858);
      var idx = cljs.core.first(arglist__18858);
      arglist__18858 = cljs.core.next(arglist__18858);
      var idx2 = cljs.core.first(arglist__18858);
      var idxv = cljs.core.rest(arglist__18858);
      return G__18857__delegate(array, idx, idx2, idxv);
    };
    G__18857.cljs$core$IFn$_invoke$arity$variadic = G__18857__delegate;
    return G__18857;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj18860 = {};
  return obj18860;
}();
cljs.core.IFn = function() {
  var obj18862 = {};
  return obj18862;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj18864 = {};
  return obj18864;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3539__auto__ = value;
    if (and__3539__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4178__auto__ = value == null ? null : value;
    return function() {
      var or__3551__auto__ = cljs.core._clone[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._clone["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj18866 = {};
  return obj18866;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._count[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._count["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj18868 = {};
  return obj18868;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._empty[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._empty["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj18870 = {};
  return obj18870;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._conj[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._conj["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj18872 = {};
  return obj18872;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._nth[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._nth["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._nth[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._nth["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj18874 = {};
  return obj18874;
}();
cljs.core.ISeq = function() {
  var obj18876 = {};
  return obj18876;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._rest[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._rest["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj18878 = {};
  return obj18878;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._next[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._next["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj18880 = {};
  return obj18880;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._lookup[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._lookup["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._lookup[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._lookup["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj18882 = {};
  return obj18882;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj18884 = {};
  return obj18884;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._dissoc[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._dissoc["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj18886 = {};
  return obj18886;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._key[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._key["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._val[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._val["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj18888 = {};
  return obj18888;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._disjoin[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._disjoin["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj18890 = {};
  return obj18890;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._peek[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._peek["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._pop[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pop["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj18892 = {};
  return obj18892;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_n[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj18894 = {};
  return obj18894;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._deref[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._deref["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj18896 = {};
  return obj18896;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj18898 = {};
  return obj18898;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._meta[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._meta["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj18900 = {};
  return obj18900;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._with_meta[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._with_meta["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj18902 = {};
  return obj18902;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._reduce[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._reduce["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._reduce[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._reduce["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj18904 = {};
  return obj18904;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj18906 = {};
  return obj18906;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._equiv[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._equiv["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj18908 = {};
  return obj18908;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._hash[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._hash["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj18910 = {};
  return obj18910;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._seq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._seq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj18912 = {};
  return obj18912;
}();
cljs.core.IList = function() {
  var obj18914 = {};
  return obj18914;
}();
cljs.core.IRecord = function() {
  var obj18916 = {};
  return obj18916;
}();
cljs.core.IReversible = function() {
  var obj18918 = {};
  return obj18918;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._rseq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._rseq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj18920 = {};
  return obj18920;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._entry_key[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._entry_key["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._comparator[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._comparator["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj18922 = {};
  return obj18922;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3539__auto__ = writer;
    if (and__3539__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4178__auto__ = writer == null ? null : writer;
    return function() {
      var or__3551__auto__ = cljs.core._write[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._write["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3539__auto__ = writer;
    if (and__3539__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4178__auto__ = writer == null ? null : writer;
    return function() {
      var or__3551__auto__ = cljs.core._flush[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._flush["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj18924 = {};
  return obj18924;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._pr_writer[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj18926 = {};
  return obj18926;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3539__auto__ = d;
    if (and__3539__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4178__auto__ = d == null ? null : d;
    return function() {
      var or__3551__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj18928 = {};
  return obj18928;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._notify_watches[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._add_watch[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._add_watch["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._remove_watch[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj18930 = {};
  return obj18930;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._as_transient[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._as_transient["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj18932 = {};
  return obj18932;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj18934 = {};
  return obj18934;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj18936 = {};
  return obj18936;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj18938 = {};
  return obj18938;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj18940 = {};
  return obj18940;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj18942 = {};
  return obj18942;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._compare[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._compare["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj18944 = {};
  return obj18944;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._drop_first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._drop_first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj18946 = {};
  return obj18946;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj18948 = {};
  return obj18948;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_next[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj18950 = {};
  return obj18950;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._name[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._name["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._namespace[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._namespace["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj18952 = {};
  return obj18952;
}();
cljs.core.IReset = function() {
  var obj18954 = {};
  return obj18954;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj18956 = {};
  return obj18956;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__18957 = i + 2;
        var G__18958 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__18957;
        h1 = G__18958;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj18960 = {};
  return obj18960;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__18961 = i + 1;
          var G__18962 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__18961;
          hash = G__18962;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj18966 = {};
      return obj18966;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__18968 = o;
    if (G__18968) {
      var bit__4194__auto__ = G__18968.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4194__auto__ || G__18968.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3539__auto__) {
        return b.ns;
      } else {
        return and__3539__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3962__auto__ = self__._hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__18970 = null;
  var G__18970__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__18970__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__18970 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18970__2.call(this, self__, coll);
      case 3:
        return G__18970__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18970.cljs$core$IFn$_invoke$arity$2 = G__18970__2;
  G__18970.cljs$core$IFn$_invoke$arity$3 = G__18970__3;
  return G__18970;
}();
cljs.core.Symbol.prototype.apply = function(self__, args18969) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18969)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__18972 = value;
  if (G__18972) {
    var bit__4201__auto__ = G__18972.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4201__auto__ || G__18972.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__18972.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18972);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18972);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18974 = coll;
      if (G__18974) {
        var bit__4194__auto__ = G__18974.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4194__auto__ || G__18974.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18976 = coll;
      if (G__18976) {
        var bit__4194__auto__ = G__18976.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__18976.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__18978 = coll;
      if (G__18978) {
        var bit__4194__auto__ = G__18978.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__18978.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__18980 = coll;
      if (G__18980) {
        var bit__4194__auto__ = G__18980.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4194__auto__ || G__18980.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__18981__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__18982 = y;
            var G__18983 = cljs.core.first.call(null, more);
            var G__18984 = cljs.core.next.call(null, more);
            x = G__18982;
            y = G__18983;
            more = G__18984;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__18981 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__18981__delegate.call(this, x, y, more);
    };
    G__18981.cljs$lang$maxFixedArity = 2;
    G__18981.cljs$lang$applyTo = function(arglist__18985) {
      var x = cljs.core.first(arglist__18985);
      arglist__18985 = cljs.core.next(arglist__18985);
      var y = cljs.core.first(arglist__18985);
      var more = cljs.core.rest(arglist__18985);
      return G__18981__delegate(x, y, more);
    };
    G__18981.cljs$core$IFn$_invoke$arity$variadic = G__18981__delegate;
    return G__18981;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18986 = n + 1;
      var G__18987 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18988 = cljs.core.next.call(null, coll__$1);
      n = G__18986;
      hash_code = G__18987;
      coll__$1 = G__18988;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__18989 = n + 1;
      var G__18990 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__18991 = cljs.core.next.call(null, coll__$1);
      n = G__18989;
      hash_code = G__18990;
      coll__$1 = G__18991;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18992 = nval;
            var G__18993 = n + 1;
            val = G__18992;
            n = G__18993;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18994 = nval;
          var G__18995 = n + 1;
          val__$1 = G__18994;
          n = G__18995;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__18996 = nval;
          var G__18997 = n + 1;
          val__$1 = G__18996;
          n = G__18997;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__18998 = nval;
            var G__18999 = n + 1;
            val = G__18998;
            n = G__18999;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19000 = nval;
          var G__19001 = n + 1;
          val__$1 = G__19000;
          n = G__19001;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19002 = nval;
          var G__19003 = n + 1;
          val__$1 = G__19002;
          n = G__19003;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__19005 = x;
  if (G__19005) {
    var bit__4201__auto__ = G__19005.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4201__auto__ || G__19005.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__19005.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19005);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19005);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__19007 = x;
  if (G__19007) {
    var bit__4201__auto__ = G__19007.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4201__auto__ || G__19007.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__19007.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19007);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19007);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__19008 = sn;
      s = G__19008;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__19009__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__19010 = conj.call(null, coll, x);
          var G__19011 = cljs.core.first.call(null, xs);
          var G__19012 = cljs.core.next.call(null, xs);
          coll = G__19010;
          x = G__19011;
          xs = G__19012;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__19009 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19009__delegate.call(this, coll, x, xs);
    };
    G__19009.cljs$lang$maxFixedArity = 2;
    G__19009.cljs$lang$applyTo = function(arglist__19013) {
      var coll = cljs.core.first(arglist__19013);
      arglist__19013 = cljs.core.next(arglist__19013);
      var x = cljs.core.first(arglist__19013);
      var xs = cljs.core.rest(arglist__19013);
      return G__19009__delegate(coll, x, xs);
    };
    G__19009.cljs$core$IFn$_invoke$arity$variadic = G__19009__delegate;
    return G__19009;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__19014 = cljs.core.next.call(null, s);
      var G__19015 = acc + 1;
      s = G__19014;
      acc = G__19015;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__19017 = coll;
      if (G__19017) {
        var bit__4194__auto__ = G__19017.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4194__auto__ || G__19017.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19018 = cljs.core.next.call(null, coll);
              var G__19019 = n - 1;
              coll = G__19018;
              n = G__19019;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19020 = cljs.core.next.call(null, coll);
              var G__19021 = n - 1;
              var G__19022 = not_found;
              coll = G__19020;
              n = G__19021;
              not_found = G__19022;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__19027 = coll;
          if (G__19027) {
            var bit__4194__auto__ = G__19027.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4194__auto__ || G__19027.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19028 = coll;
                  if (G__19028) {
                    var bit__4201__auto__ = G__19028.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4201__auto__ || G__19028.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19028.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19028);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19028);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__19029 = coll;
          if (G__19029) {
            var bit__4194__auto__ = G__19029.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4194__auto__ || G__19029.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19030 = coll;
                  if (G__19030) {
                    var bit__4201__auto__ = G__19030.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4201__auto__ || G__19030.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19030.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19030);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19030);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__19033 = o;
        if (G__19033) {
          var bit__4194__auto__ = G__19033.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4194__auto__ || G__19033.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__19034 = o;
        if (G__19034) {
          var bit__4194__auto__ = G__19034.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4194__auto__ || G__19034.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__19035__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__19036 = ret;
          var G__19037 = cljs.core.first.call(null, kvs);
          var G__19038 = cljs.core.second.call(null, kvs);
          var G__19039 = cljs.core.nnext.call(null, kvs);
          coll = G__19036;
          k = G__19037;
          v = G__19038;
          kvs = G__19039;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__19035 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19035__delegate.call(this, coll, k, v, kvs);
    };
    G__19035.cljs$lang$maxFixedArity = 3;
    G__19035.cljs$lang$applyTo = function(arglist__19040) {
      var coll = cljs.core.first(arglist__19040);
      arglist__19040 = cljs.core.next(arglist__19040);
      var k = cljs.core.first(arglist__19040);
      arglist__19040 = cljs.core.next(arglist__19040);
      var v = cljs.core.first(arglist__19040);
      var kvs = cljs.core.rest(arglist__19040);
      return G__19035__delegate(coll, k, v, kvs);
    };
    G__19035.cljs$core$IFn$_invoke$arity$variadic = G__19035__delegate;
    return G__19035;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__19041__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19042 = ret;
            var G__19043 = cljs.core.first.call(null, ks);
            var G__19044 = cljs.core.next.call(null, ks);
            coll = G__19042;
            k = G__19043;
            ks = G__19044;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19041 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19041__delegate.call(this, coll, k, ks);
    };
    G__19041.cljs$lang$maxFixedArity = 2;
    G__19041.cljs$lang$applyTo = function(arglist__19045) {
      var coll = cljs.core.first(arglist__19045);
      arglist__19045 = cljs.core.next(arglist__19045);
      var k = cljs.core.first(arglist__19045);
      var ks = cljs.core.rest(arglist__19045);
      return G__19041__delegate(coll, k, ks);
    };
    G__19041.cljs$core$IFn$_invoke$arity$variadic = G__19041__delegate;
    return G__19041;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3551__auto__ = goog.isFunction(f);
  if (or__3551__auto__) {
    return or__3551__auto__;
  } else {
    var G__19049 = f;
    if (G__19049) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto____$1 = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto____$1)) {
          return or__3551__auto____$1;
        } else {
          return G__19049.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__19049.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19049);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19049);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__19051 = null;
  var G__19051__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__19051__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__19051__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__19051__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__19051__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__19051__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__19051__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__19051__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__19051__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__19051__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__19051__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__19051__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__19051__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__19051__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__19051__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__19051__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__19051__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__19051__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__19051__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__19051__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__19051__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__19051__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__19051 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__19051__1.call(this, self__);
      case 2:
        return G__19051__2.call(this, self__, a);
      case 3:
        return G__19051__3.call(this, self__, a, b);
      case 4:
        return G__19051__4.call(this, self__, a, b, c);
      case 5:
        return G__19051__5.call(this, self__, a, b, c, d);
      case 6:
        return G__19051__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__19051__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__19051__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__19051__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__19051__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19051__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19051__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19051__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19051__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19051__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19051__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19051__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19051__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19051__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19051__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19051__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19051__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19051.cljs$core$IFn$_invoke$arity$1 = G__19051__1;
  G__19051.cljs$core$IFn$_invoke$arity$2 = G__19051__2;
  G__19051.cljs$core$IFn$_invoke$arity$3 = G__19051__3;
  G__19051.cljs$core$IFn$_invoke$arity$4 = G__19051__4;
  G__19051.cljs$core$IFn$_invoke$arity$5 = G__19051__5;
  G__19051.cljs$core$IFn$_invoke$arity$6 = G__19051__6;
  G__19051.cljs$core$IFn$_invoke$arity$7 = G__19051__7;
  G__19051.cljs$core$IFn$_invoke$arity$8 = G__19051__8;
  G__19051.cljs$core$IFn$_invoke$arity$9 = G__19051__9;
  G__19051.cljs$core$IFn$_invoke$arity$10 = G__19051__10;
  G__19051.cljs$core$IFn$_invoke$arity$11 = G__19051__11;
  G__19051.cljs$core$IFn$_invoke$arity$12 = G__19051__12;
  G__19051.cljs$core$IFn$_invoke$arity$13 = G__19051__13;
  G__19051.cljs$core$IFn$_invoke$arity$14 = G__19051__14;
  G__19051.cljs$core$IFn$_invoke$arity$15 = G__19051__15;
  G__19051.cljs$core$IFn$_invoke$arity$16 = G__19051__16;
  G__19051.cljs$core$IFn$_invoke$arity$17 = G__19051__17;
  G__19051.cljs$core$IFn$_invoke$arity$18 = G__19051__18;
  G__19051.cljs$core$IFn$_invoke$arity$19 = G__19051__19;
  G__19051.cljs$core$IFn$_invoke$arity$20 = G__19051__20;
  G__19051.cljs$core$IFn$_invoke$arity$21 = G__19051__21;
  G__19051.cljs$core$IFn$_invoke$arity$22 = G__19051__22;
  return G__19051;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args19050) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19050)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__19055 = o;
    if (G__19055) {
      var bit__4201__auto__ = G__19055.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4201__auto__ || G__19055.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__19055.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19055);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19055);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3539__auto__ = !(o == null);
    if (and__3539__auto__) {
      var G__19059 = o;
      if (G__19059) {
        var bit__4201__auto__ = G__19059.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4201__auto__ || G__19059.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__19059.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19059);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19059);
      }
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__19060__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19061 = ret;
            var G__19062 = cljs.core.first.call(null, ks);
            var G__19063 = cljs.core.next.call(null, ks);
            coll = G__19061;
            k = G__19062;
            ks = G__19063;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19060 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19060__delegate.call(this, coll, k, ks);
    };
    G__19060.cljs$lang$maxFixedArity = 2;
    G__19060.cljs$lang$applyTo = function(arglist__19064) {
      var coll = cljs.core.first(arglist__19064);
      arglist__19064 = cljs.core.next(arglist__19064);
      var k = cljs.core.first(arglist__19064);
      var ks = cljs.core.rest(arglist__19064);
      return G__19060__delegate(coll, k, ks);
    };
    G__19060.cljs$core$IFn$_invoke$arity$variadic = G__19060__delegate;
    return G__19060;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19066 = x;
    if (G__19066) {
      var bit__4201__auto__ = G__19066.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4201__auto__ || G__19066.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__19066.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19066);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19066);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19068 = x;
    if (G__19068) {
      var bit__4201__auto__ = G__19068.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4201__auto__ || G__19068.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__19068.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19068);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19068);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__19070 = x;
  if (G__19070) {
    var bit__4201__auto__ = G__19070.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4201__auto__ || G__19070.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__19070.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19070);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19070);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__19072 = x;
  if (G__19072) {
    var bit__4201__auto__ = G__19072.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4201__auto__ || G__19072.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__19072.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19072);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19072);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__19074 = x;
  if (G__19074) {
    var bit__4201__auto__ = G__19074.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4201__auto__ || G__19074.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__19074.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19074);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19074);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__19076 = x;
  if (G__19076) {
    var bit__4201__auto__ = G__19076.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4201__auto__ || G__19076.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__19076.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19076);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19076);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19078 = x;
    if (G__19078) {
      var bit__4201__auto__ = G__19078.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4201__auto__ || G__19078.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__19078.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19078);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19078);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__19080 = x;
  if (G__19080) {
    var bit__4201__auto__ = G__19080.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4201__auto__ || G__19080.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__19080.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19080);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19080);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__19082 = x;
  if (G__19082) {
    var bit__4194__auto__ = G__19082.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4194__auto__ || G__19082.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj19086 = {};
    return obj19086;
  };
  var js_obj__1 = function() {
    var G__19087__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__19087 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19087__delegate.call(this, keyvals);
    };
    G__19087.cljs$lang$maxFixedArity = 0;
    G__19087.cljs$lang$applyTo = function(arglist__19088) {
      var keyvals = cljs.core.seq(arglist__19088);
      return G__19087__delegate(keyvals);
    };
    G__19087.cljs$core$IFn$_invoke$arity$variadic = G__19087__delegate;
    return G__19087;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19089 = i__$1 + 1;
      var G__19090 = j__$1 + 1;
      var G__19091 = len__$1 - 1;
      i__$1 = G__19089;
      j__$1 = G__19090;
      len__$1 = G__19091;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19092 = i__$1 - 1;
      var G__19093 = j__$1 - 1;
      var G__19094 = len__$1 - 1;
      i__$1 = G__19092;
      j__$1 = G__19093;
      len__$1 = G__19094;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj19096 = {};
  return obj19096;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__19098 = s;
    if (G__19098) {
      var bit__4201__auto__ = G__19098.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4201__auto__ || G__19098.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__19098.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19098);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19098);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__19100 = s;
  if (G__19100) {
    var bit__4201__auto__ = G__19100.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4201__auto__ || G__19100.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__19100.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19100);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19100);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3551__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3551__auto__) {
    return or__3551__auto__;
  } else {
    var G__19104 = f;
    if (G__19104) {
      var bit__4201__auto__ = G__19104.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4201__auto__ || G__19104.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__19104.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19104);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19104);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__19105__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__19106 = cljs.core.conj.call(null, s, x__$1);
              var G__19107 = etc;
              s = G__19106;
              xs = G__19107;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__19105 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19105__delegate.call(this, x, y, more);
    };
    G__19105.cljs$lang$maxFixedArity = 2;
    G__19105.cljs$lang$applyTo = function(arglist__19108) {
      var x = cljs.core.first(arglist__19108);
      arglist__19108 = cljs.core.next(arglist__19108);
      var y = cljs.core.first(arglist__19108);
      var more = cljs.core.rest(arglist__19108);
      return G__19105__delegate(x, y, more);
    };
    G__19105.cljs$core$IFn$_invoke$arity$variadic = G__19105__delegate;
    return G__19105;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3551__auto__ = cljs.core.seq.call(null, coll);
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__19110 = x;
            if (G__19110) {
              var bit__4194__auto__ = G__19110.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4194__auto__ || G__19110.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__19111 = xs;
        var G__19112 = ys;
        var G__19113 = len;
        var G__19114 = n + 1;
        xs = G__19111;
        ys = G__19112;
        len = G__19113;
        n = G__19114;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19115 = nval;
          var G__19116 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__19115;
          coll__$1 = G__19116;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__19119 = coll;
      if (G__19119) {
        var bit__4194__auto__ = G__19119.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4194__auto__ || G__19119.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__19120 = coll;
      if (G__19120) {
        var bit__4194__auto__ = G__19120.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4194__auto__ || G__19120.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__19121 = null;
    var G__19121__0 = function() {
      return f.call(null);
    };
    var G__19121__1 = function(x) {
      return x;
    };
    var G__19121__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__19121 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__19121__0.call(this);
        case 1:
          return G__19121__1.call(this, x);
        case 2:
          return G__19121__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19121.cljs$core$IFn$_invoke$arity$0 = G__19121__0;
    G__19121.cljs$core$IFn$_invoke$arity$1 = G__19121__1;
    G__19121.cljs$core$IFn$_invoke$arity$2 = G__19121__2;
    return G__19121;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__19122__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__19122 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19122__delegate.call(this, x, y, more);
    };
    G__19122.cljs$lang$maxFixedArity = 2;
    G__19122.cljs$lang$applyTo = function(arglist__19123) {
      var x = cljs.core.first(arglist__19123);
      arglist__19123 = cljs.core.next(arglist__19123);
      var y = cljs.core.first(arglist__19123);
      var more = cljs.core.rest(arglist__19123);
      return G__19122__delegate(x, y, more);
    };
    G__19122.cljs$core$IFn$_invoke$arity$variadic = G__19122__delegate;
    return G__19122;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__19124__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__19124 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19124__delegate.call(this, x, y, more);
    };
    G__19124.cljs$lang$maxFixedArity = 2;
    G__19124.cljs$lang$applyTo = function(arglist__19125) {
      var x = cljs.core.first(arglist__19125);
      arglist__19125 = cljs.core.next(arglist__19125);
      var y = cljs.core.first(arglist__19125);
      var more = cljs.core.rest(arglist__19125);
      return G__19124__delegate(x, y, more);
    };
    G__19124.cljs$core$IFn$_invoke$arity$variadic = G__19124__delegate;
    return G__19124;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__19126__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__19126 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19126__delegate.call(this, x, y, more);
    };
    G__19126.cljs$lang$maxFixedArity = 2;
    G__19126.cljs$lang$applyTo = function(arglist__19127) {
      var x = cljs.core.first(arglist__19127);
      arglist__19127 = cljs.core.next(arglist__19127);
      var y = cljs.core.first(arglist__19127);
      var more = cljs.core.rest(arglist__19127);
      return G__19126__delegate(x, y, more);
    };
    G__19126.cljs$core$IFn$_invoke$arity$variadic = G__19126__delegate;
    return G__19126;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__19128__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__19128 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19128__delegate.call(this, x, y, more);
    };
    G__19128.cljs$lang$maxFixedArity = 2;
    G__19128.cljs$lang$applyTo = function(arglist__19129) {
      var x = cljs.core.first(arglist__19129);
      arglist__19129 = cljs.core.next(arglist__19129);
      var y = cljs.core.first(arglist__19129);
      var more = cljs.core.rest(arglist__19129);
      return G__19128__delegate(x, y, more);
    };
    G__19128.cljs$core$IFn$_invoke$arity$variadic = G__19128__delegate;
    return G__19128;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__19130__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__19131 = y;
            var G__19132 = cljs.core.first.call(null, more);
            var G__19133 = cljs.core.next.call(null, more);
            x = G__19131;
            y = G__19132;
            more = G__19133;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19130 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19130__delegate.call(this, x, y, more);
    };
    G__19130.cljs$lang$maxFixedArity = 2;
    G__19130.cljs$lang$applyTo = function(arglist__19134) {
      var x = cljs.core.first(arglist__19134);
      arglist__19134 = cljs.core.next(arglist__19134);
      var y = cljs.core.first(arglist__19134);
      var more = cljs.core.rest(arglist__19134);
      return G__19130__delegate(x, y, more);
    };
    G__19130.cljs$core$IFn$_invoke$arity$variadic = G__19130__delegate;
    return G__19130;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__19135__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19136 = y;
            var G__19137 = cljs.core.first.call(null, more);
            var G__19138 = cljs.core.next.call(null, more);
            x = G__19136;
            y = G__19137;
            more = G__19138;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19135 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19135__delegate.call(this, x, y, more);
    };
    G__19135.cljs$lang$maxFixedArity = 2;
    G__19135.cljs$lang$applyTo = function(arglist__19139) {
      var x = cljs.core.first(arglist__19139);
      arglist__19139 = cljs.core.next(arglist__19139);
      var y = cljs.core.first(arglist__19139);
      var more = cljs.core.rest(arglist__19139);
      return G__19135__delegate(x, y, more);
    };
    G__19135.cljs$core$IFn$_invoke$arity$variadic = G__19135__delegate;
    return G__19135;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__19140__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__19141 = y;
            var G__19142 = cljs.core.first.call(null, more);
            var G__19143 = cljs.core.next.call(null, more);
            x = G__19141;
            y = G__19142;
            more = G__19143;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19140 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19140__delegate.call(this, x, y, more);
    };
    G__19140.cljs$lang$maxFixedArity = 2;
    G__19140.cljs$lang$applyTo = function(arglist__19144) {
      var x = cljs.core.first(arglist__19144);
      arglist__19144 = cljs.core.next(arglist__19144);
      var y = cljs.core.first(arglist__19144);
      var more = cljs.core.rest(arglist__19144);
      return G__19140__delegate(x, y, more);
    };
    G__19140.cljs$core$IFn$_invoke$arity$variadic = G__19140__delegate;
    return G__19140;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__19145__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19146 = y;
            var G__19147 = cljs.core.first.call(null, more);
            var G__19148 = cljs.core.next.call(null, more);
            x = G__19146;
            y = G__19147;
            more = G__19148;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19145 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19145__delegate.call(this, x, y, more);
    };
    G__19145.cljs$lang$maxFixedArity = 2;
    G__19145.cljs$lang$applyTo = function(arglist__19149) {
      var x = cljs.core.first(arglist__19149);
      arglist__19149 = cljs.core.next(arglist__19149);
      var y = cljs.core.first(arglist__19149);
      var more = cljs.core.rest(arglist__19149);
      return G__19145__delegate(x, y, more);
    };
    G__19145.cljs$core$IFn$_invoke$arity$variadic = G__19145__delegate;
    return G__19145;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3858__auto__ = x;
    var y__3859__auto__ = y;
    return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
  };
  var max__3 = function() {
    var G__19150__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3858__auto__ = x;
        var y__3859__auto__ = y;
        return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
      }(), more);
    };
    var G__19150 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19150__delegate.call(this, x, y, more);
    };
    G__19150.cljs$lang$maxFixedArity = 2;
    G__19150.cljs$lang$applyTo = function(arglist__19151) {
      var x = cljs.core.first(arglist__19151);
      arglist__19151 = cljs.core.next(arglist__19151);
      var y = cljs.core.first(arglist__19151);
      var more = cljs.core.rest(arglist__19151);
      return G__19150__delegate(x, y, more);
    };
    G__19150.cljs$core$IFn$_invoke$arity$variadic = G__19150__delegate;
    return G__19150;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3865__auto__ = x;
    var y__3866__auto__ = y;
    return x__3865__auto__ < y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  };
  var min__3 = function() {
    var G__19152__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3865__auto__ = x;
        var y__3866__auto__ = y;
        return x__3865__auto__ < y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
      }(), more);
    };
    var G__19152 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19152__delegate.call(this, x, y, more);
    };
    G__19152.cljs$lang$maxFixedArity = 2;
    G__19152.cljs$lang$applyTo = function(arglist__19153) {
      var x = cljs.core.first(arglist__19153);
      arglist__19153 = cljs.core.next(arglist__19153);
      var y = cljs.core.first(arglist__19153);
      var more = cljs.core.rest(arglist__19153);
      return G__19152__delegate(x, y, more);
    };
    G__19152.cljs$core$IFn$_invoke$arity$variadic = G__19152__delegate;
    return G__19152;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__19154__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__19154 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19154__delegate.call(this, x, y, more);
    };
    G__19154.cljs$lang$maxFixedArity = 2;
    G__19154.cljs$lang$applyTo = function(arglist__19155) {
      var x = cljs.core.first(arglist__19155);
      arglist__19155 = cljs.core.next(arglist__19155);
      var y = cljs.core.first(arglist__19155);
      var more = cljs.core.rest(arglist__19155);
      return G__19154__delegate(x, y, more);
    };
    G__19154.cljs$core$IFn$_invoke$arity$variadic = G__19154__delegate;
    return G__19154;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__19156__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__19156 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19156__delegate.call(this, x, y, more);
    };
    G__19156.cljs$lang$maxFixedArity = 2;
    G__19156.cljs$lang$applyTo = function(arglist__19157) {
      var x = cljs.core.first(arglist__19157);
      arglist__19157 = cljs.core.next(arglist__19157);
      var y = cljs.core.first(arglist__19157);
      var more = cljs.core.rest(arglist__19157);
      return G__19156__delegate(x, y, more);
    };
    G__19156.cljs$core$IFn$_invoke$arity$variadic = G__19156__delegate;
    return G__19156;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__19158__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__19158 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19158__delegate.call(this, x, y, more);
    };
    G__19158.cljs$lang$maxFixedArity = 2;
    G__19158.cljs$lang$applyTo = function(arglist__19159) {
      var x = cljs.core.first(arglist__19159);
      arglist__19159 = cljs.core.next(arglist__19159);
      var y = cljs.core.first(arglist__19159);
      var more = cljs.core.rest(arglist__19159);
      return G__19158__delegate(x, y, more);
    };
    G__19158.cljs$core$IFn$_invoke$arity$variadic = G__19158__delegate;
    return G__19158;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__19160__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__19160 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19160__delegate.call(this, x, y, more);
    };
    G__19160.cljs$lang$maxFixedArity = 2;
    G__19160.cljs$lang$applyTo = function(arglist__19161) {
      var x = cljs.core.first(arglist__19161);
      arglist__19161 = cljs.core.next(arglist__19161);
      var y = cljs.core.first(arglist__19161);
      var more = cljs.core.rest(arglist__19161);
      return G__19160__delegate(x, y, more);
    };
    G__19160.cljs$core$IFn$_invoke$arity$variadic = G__19160__delegate;
    return G__19160;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__19162__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__19162 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19162__delegate.call(this, x, y, more);
    };
    G__19162.cljs$lang$maxFixedArity = 2;
    G__19162.cljs$lang$applyTo = function(arglist__19163) {
      var x = cljs.core.first(arglist__19163);
      arglist__19163 = cljs.core.next(arglist__19163);
      var y = cljs.core.first(arglist__19163);
      var more = cljs.core.rest(arglist__19163);
      return G__19162__delegate(x, y, more);
    };
    G__19162.cljs$core$IFn$_invoke$arity$variadic = G__19162__delegate;
    return G__19162;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__19164__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__19164 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19164__delegate.call(this, x, y, more);
    };
    G__19164.cljs$lang$maxFixedArity = 2;
    G__19164.cljs$lang$applyTo = function(arglist__19165) {
      var x = cljs.core.first(arglist__19165);
      arglist__19165 = cljs.core.next(arglist__19165);
      var y = cljs.core.first(arglist__19165);
      var more = cljs.core.rest(arglist__19165);
      return G__19164__delegate(x, y, more);
    };
    G__19164.cljs$core$IFn$_invoke$arity$variadic = G__19164__delegate;
    return G__19164;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__19166__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__19166 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19166__delegate.call(this, x, y, more);
    };
    G__19166.cljs$lang$maxFixedArity = 2;
    G__19166.cljs$lang$applyTo = function(arglist__19167) {
      var x = cljs.core.first(arglist__19167);
      arglist__19167 = cljs.core.next(arglist__19167);
      var y = cljs.core.first(arglist__19167);
      var more = cljs.core.rest(arglist__19167);
      return G__19166__delegate(x, y, more);
    };
    G__19166.cljs$core$IFn$_invoke$arity$variadic = G__19166__delegate;
    return G__19166;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__19168__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__19169 = y;
            var G__19170 = cljs.core.first.call(null, more);
            var G__19171 = cljs.core.next.call(null, more);
            x = G__19169;
            y = G__19170;
            more = G__19171;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19168 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19168__delegate.call(this, x, y, more);
    };
    G__19168.cljs$lang$maxFixedArity = 2;
    G__19168.cljs$lang$applyTo = function(arglist__19172) {
      var x = cljs.core.first(arglist__19172);
      arglist__19172 = cljs.core.next(arglist__19172);
      var y = cljs.core.first(arglist__19172);
      var more = cljs.core.rest(arglist__19172);
      return G__19168__delegate(x, y, more);
    };
    G__19168.cljs$core$IFn$_invoke$arity$variadic = G__19168__delegate;
    return G__19168;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__19173 = n__$1 - 1;
      var G__19174 = cljs.core.next.call(null, xs);
      n__$1 = G__19173;
      xs = G__19174;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__19175__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__19176 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__19177 = cljs.core.next.call(null, more);
          sb = G__19176;
          more = G__19177;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__19175 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19175__delegate.call(this, x, ys);
    };
    G__19175.cljs$lang$maxFixedArity = 1;
    G__19175.cljs$lang$applyTo = function(arglist__19178) {
      var x = cljs.core.first(arglist__19178);
      var ys = cljs.core.rest(arglist__19178);
      return G__19175__delegate(x, ys);
    };
    G__19175.cljs$core$IFn$_invoke$arity$variadic = G__19175__delegate;
    return G__19175;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__19179 = cljs.core.next.call(null, xs);
            var G__19180 = cljs.core.next.call(null, ys);
            xs = G__19179;
            ys = G__19180;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__19181 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__19182 = cljs.core.next.call(null, s);
        res = G__19181;
        s = G__19182;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__19183 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__19184 = cljs.core.next.call(null, s);
      h = G__19183;
      s = G__19184;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__19185 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__19186 = cljs.core.next.call(null, s__$1);
      h = G__19185;
      s__$1 = G__19186;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__19193_19199 = cljs.core.seq.call(null, fn_map);
  var chunk__19194_19200 = null;
  var count__19195_19201 = 0;
  var i__19196_19202 = 0;
  while (true) {
    if (i__19196_19202 < count__19195_19201) {
      var vec__19197_19203 = cljs.core._nth.call(null, chunk__19194_19200, i__19196_19202);
      var key_name_19204 = cljs.core.nth.call(null, vec__19197_19203, 0, null);
      var f_19205 = cljs.core.nth.call(null, vec__19197_19203, 1, null);
      var str_name_19206 = cljs.core.name.call(null, key_name_19204);
      obj[str_name_19206] = f_19205;
      var G__19207 = seq__19193_19199;
      var G__19208 = chunk__19194_19200;
      var G__19209 = count__19195_19201;
      var G__19210 = i__19196_19202 + 1;
      seq__19193_19199 = G__19207;
      chunk__19194_19200 = G__19208;
      count__19195_19201 = G__19209;
      i__19196_19202 = G__19210;
      continue;
    } else {
      var temp__4126__auto___19211 = cljs.core.seq.call(null, seq__19193_19199);
      if (temp__4126__auto___19211) {
        var seq__19193_19212__$1 = temp__4126__auto___19211;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19193_19212__$1)) {
          var c__4307__auto___19213 = cljs.core.chunk_first.call(null, seq__19193_19212__$1);
          var G__19214 = cljs.core.chunk_rest.call(null, seq__19193_19212__$1);
          var G__19215 = c__4307__auto___19213;
          var G__19216 = cljs.core.count.call(null, c__4307__auto___19213);
          var G__19217 = 0;
          seq__19193_19199 = G__19214;
          chunk__19194_19200 = G__19215;
          count__19195_19201 = G__19216;
          i__19196_19202 = G__19217;
          continue;
        } else {
          var vec__19198_19218 = cljs.core.first.call(null, seq__19193_19212__$1);
          var key_name_19219 = cljs.core.nth.call(null, vec__19198_19218, 0, null);
          var f_19220 = cljs.core.nth.call(null, vec__19198_19218, 1, null);
          var str_name_19221 = cljs.core.name.call(null, key_name_19219);
          obj[str_name_19221] = f_19220;
          var G__19222 = cljs.core.next.call(null, seq__19193_19212__$1);
          var G__19223 = null;
          var G__19224 = 0;
          var G__19225 = 0;
          seq__19193_19199 = G__19222;
          chunk__19194_19200 = G__19223;
          count__19195_19201 = G__19224;
          i__19196_19202 = G__19225;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__19227 = coll;
  if (G__19227) {
    var bit__4201__auto__ = G__19227.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4201__auto__ || G__19227.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__19227.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19227);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19227);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__19228 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__19228;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__19229 = i - 1;
        var G__19230 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__19229;
        r = G__19230;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__19231) {
    var xs = cljs.core.seq(arglist__19231);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3551__auto__ = coll == null;
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var G__19235 = coll;
      if (G__19235) {
        var bit__4194__auto__ = G__19235.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__19235.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__19237 = x;
  if (G__19237) {
    var bit__4201__auto__ = G__19237.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4201__auto__ || G__19237.cljs$core$IList$) {
      return true;
    } else {
      if (!G__19237.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19237);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19237);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3962__auto__ = self__._hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__19239 = null;
  var G__19239__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__19239__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__19239 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19239__2.call(this, self__, coll);
      case 3:
        return G__19239__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19239.cljs$core$IFn$_invoke$arity$2 = G__19239__2;
  G__19239.cljs$core$IFn$_invoke$arity$3 = G__19239__3;
  return G__19239;
}();
cljs.core.Keyword.prototype.apply = function(self__, args19238) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19238)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__19241 = x;
    if (G__19241) {
      var bit__4194__auto__ = G__19241.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4194__auto__ || G__19241.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__19242 = ls.sval();
        ls = G__19242;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__19244 = s;
    if (G__19244) {
      var bit__4194__auto__ = G__19244.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4194__auto__ || G__19244.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__19245 = cljs.core.next.call(null, s__$1);
      s__$1 = G__19245;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_19246 = 0;
  var xs_19247 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_19247) {
      ret[i_19246] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_19247));
      var G__19248 = i_19246 + 1;
      var G__19249 = cljs.core.next.call(null, xs_19247);
      i_19246 = G__19248;
      xs_19247 = G__19249;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19250 = i + 1;
          var G__19251 = cljs.core.next.call(null, s__$1);
          i = G__19250;
          s__$1 = G__19251;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___19252 = size;
      var i_19253 = 0;
      while (true) {
        if (i_19253 < n__4407__auto___19252) {
          a[i_19253] = init_val_or_seq;
          var G__19254 = i_19253 + 1;
          i_19253 = G__19254;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19255 = i + 1;
          var G__19256 = cljs.core.next.call(null, s__$1);
          i = G__19255;
          s__$1 = G__19256;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___19257 = size;
      var i_19258 = 0;
      while (true) {
        if (i_19258 < n__4407__auto___19257) {
          a[i_19258] = init_val_or_seq;
          var G__19259 = i_19258 + 1;
          i_19258 = G__19259;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19260 = i + 1;
          var G__19261 = cljs.core.next.call(null, s__$1);
          i = G__19260;
          s__$1 = G__19261;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___19262 = size;
      var i_19263 = 0;
      while (true) {
        if (i_19263 < n__4407__auto___19262) {
          a[i_19263] = init_val_or_seq;
          var G__19264 = i_19263 + 1;
          i_19263 = G__19264;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19265 = i + 1;
          var G__19266 = cljs.core.next.call(null, s__$1);
          i = G__19265;
          s__$1 = G__19266;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___19267 = size;
      var i_19268 = 0;
      while (true) {
        if (i_19268 < n__4407__auto___19267) {
          a[i_19268] = init_val_or_seq;
          var G__19269 = i_19268 + 1;
          i_19268 = G__19269;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__19270 = cljs.core.next.call(null, s__$1);
        var G__19271 = i - 1;
        var G__19272 = sum + 1;
        s__$1 = G__19270;
        i = G__19271;
        sum = G__19272;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__19273__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__19273 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19273__delegate.call(this, x, y, zs);
    };
    G__19273.cljs$lang$maxFixedArity = 2;
    G__19273.cljs$lang$applyTo = function(arglist__19274) {
      var x = cljs.core.first(arglist__19274);
      arglist__19274 = cljs.core.next(arglist__19274);
      var y = cljs.core.first(arglist__19274);
      var zs = cljs.core.rest(arglist__19274);
      return G__19273__delegate(x, y, zs);
    };
    G__19273.cljs$core$IFn$_invoke$arity$variadic = G__19273__delegate;
    return G__19273;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__19275__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__19275 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19275__delegate.call(this, a, b, c, d, more);
    };
    G__19275.cljs$lang$maxFixedArity = 4;
    G__19275.cljs$lang$applyTo = function(arglist__19276) {
      var a = cljs.core.first(arglist__19276);
      arglist__19276 = cljs.core.next(arglist__19276);
      var b = cljs.core.first(arglist__19276);
      arglist__19276 = cljs.core.next(arglist__19276);
      var c = cljs.core.first(arglist__19276);
      arglist__19276 = cljs.core.next(arglist__19276);
      var d = cljs.core.first(arglist__19276);
      var more = cljs.core.rest(arglist__19276);
      return G__19275__delegate(a, b, c, d, more);
    };
    G__19275.cljs$core$IFn$_invoke$arity$variadic = G__19275__delegate;
    return G__19275;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__19277__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19278 = ntcoll;
          var G__19279 = cljs.core.first.call(null, vals);
          var G__19280 = cljs.core.next.call(null, vals);
          tcoll = G__19278;
          val = G__19279;
          vals = G__19280;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19277 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19277__delegate.call(this, tcoll, val, vals);
    };
    G__19277.cljs$lang$maxFixedArity = 2;
    G__19277.cljs$lang$applyTo = function(arglist__19281) {
      var tcoll = cljs.core.first(arglist__19281);
      arglist__19281 = cljs.core.next(arglist__19281);
      var val = cljs.core.first(arglist__19281);
      var vals = cljs.core.rest(arglist__19281);
      return G__19277__delegate(tcoll, val, vals);
    };
    G__19277.cljs$core$IFn$_invoke$arity$variadic = G__19277__delegate;
    return G__19277;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__19282__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__19283 = ntcoll;
          var G__19284 = cljs.core.first.call(null, kvs);
          var G__19285 = cljs.core.second.call(null, kvs);
          var G__19286 = cljs.core.nnext.call(null, kvs);
          tcoll = G__19283;
          key = G__19284;
          val = G__19285;
          kvs = G__19286;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19282 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19282__delegate.call(this, tcoll, key, val, kvs);
    };
    G__19282.cljs$lang$maxFixedArity = 3;
    G__19282.cljs$lang$applyTo = function(arglist__19287) {
      var tcoll = cljs.core.first(arglist__19287);
      arglist__19287 = cljs.core.next(arglist__19287);
      var key = cljs.core.first(arglist__19287);
      arglist__19287 = cljs.core.next(arglist__19287);
      var val = cljs.core.first(arglist__19287);
      var kvs = cljs.core.rest(arglist__19287);
      return G__19282__delegate(tcoll, key, val, kvs);
    };
    G__19282.cljs$core$IFn$_invoke$arity$variadic = G__19282__delegate;
    return G__19282;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__19288__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__19289 = ntcoll;
          var G__19290 = cljs.core.first.call(null, ks);
          var G__19291 = cljs.core.next.call(null, ks);
          tcoll = G__19289;
          key = G__19290;
          ks = G__19291;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19288 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19288__delegate.call(this, tcoll, key, ks);
    };
    G__19288.cljs$lang$maxFixedArity = 2;
    G__19288.cljs$lang$applyTo = function(arglist__19292) {
      var tcoll = cljs.core.first(arglist__19292);
      arglist__19292 = cljs.core.next(arglist__19292);
      var key = cljs.core.first(arglist__19292);
      var ks = cljs.core.rest(arglist__19292);
      return G__19288__delegate(tcoll, key, ks);
    };
    G__19288.cljs$core$IFn$_invoke$arity$variadic = G__19288__delegate;
    return G__19288;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__19293__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19294 = ntcoll;
          var G__19295 = cljs.core.first.call(null, vals);
          var G__19296 = cljs.core.next.call(null, vals);
          tcoll = G__19294;
          val = G__19295;
          vals = G__19296;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19293 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19293__delegate.call(this, tcoll, val, vals);
    };
    G__19293.cljs$lang$maxFixedArity = 2;
    G__19293.cljs$lang$applyTo = function(arglist__19297) {
      var tcoll = cljs.core.first(arglist__19297);
      arglist__19297 = cljs.core.next(arglist__19297);
      var val = cljs.core.first(arglist__19297);
      var vals = cljs.core.rest(arglist__19297);
      return G__19293__delegate(tcoll, val, vals);
    };
    G__19293.cljs$core$IFn$_invoke$arity$variadic = G__19293__delegate;
    return G__19293;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4451 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4451);
      } else {
        return f.call(null, a4451);
      }
    } else {
      var b4452 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4451, b4452);
        } else {
          return f.call(null, a4451, b4452);
        }
      } else {
        var c4453 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4451, b4452, c4453);
          } else {
            return f.call(null, a4451, b4452, c4453);
          }
        } else {
          var d4454 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4451, b4452, c4453, d4454);
            } else {
              return f.call(null, a4451, b4452, c4453, d4454);
            }
          } else {
            var e4455 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4451, b4452, c4453, d4454, e4455);
              } else {
                return f.call(null, a4451, b4452, c4453, d4454, e4455);
              }
            } else {
              var f4456 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4451, b4452, c4453, d4454, e4455, f4456);
                } else {
                  return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456);
                }
              } else {
                var g4457 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4451, b4452, c4453, d4454, e4455, f4456, g4457);
                  } else {
                    return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457);
                  }
                } else {
                  var h4458 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458);
                    } else {
                      return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458);
                    }
                  } else {
                    var i4459 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459);
                      } else {
                        return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459);
                      }
                    } else {
                      var j4460 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460);
                        } else {
                          return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460);
                        }
                      } else {
                        var k4461 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461);
                          } else {
                            return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461);
                          }
                        } else {
                          var l4462 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462);
                            } else {
                              return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462);
                            }
                          } else {
                            var m4463 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463);
                              } else {
                                return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463);
                              }
                            } else {
                              var n4464 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464);
                                } else {
                                  return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464);
                                }
                              } else {
                                var o4465 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465);
                                  } else {
                                    return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465);
                                  }
                                } else {
                                  var p4466 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466);
                                    } else {
                                      return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466);
                                    }
                                  } else {
                                    var q4467 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467);
                                      } else {
                                        return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467);
                                      }
                                    } else {
                                      var r4468 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468);
                                        } else {
                                          return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468);
                                        }
                                      } else {
                                        var s4469 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469);
                                          } else {
                                            return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469);
                                          }
                                        } else {
                                          var t4470 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469, t4470);
                                            } else {
                                              return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469, t4470);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__19298__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__19298 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__19298__delegate.call(this, f, a, b, c, d, args);
    };
    G__19298.cljs$lang$maxFixedArity = 5;
    G__19298.cljs$lang$applyTo = function(arglist__19299) {
      var f = cljs.core.first(arglist__19299);
      arglist__19299 = cljs.core.next(arglist__19299);
      var a = cljs.core.first(arglist__19299);
      arglist__19299 = cljs.core.next(arglist__19299);
      var b = cljs.core.first(arglist__19299);
      arglist__19299 = cljs.core.next(arglist__19299);
      var c = cljs.core.first(arglist__19299);
      arglist__19299 = cljs.core.next(arglist__19299);
      var d = cljs.core.first(arglist__19299);
      var args = cljs.core.rest(arglist__19299);
      return G__19298__delegate(f, a, b, c, d, args);
    };
    G__19298.cljs$core$IFn$_invoke$arity$variadic = G__19298__delegate;
    return G__19298;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__19300__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__19300 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19300__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__19300.cljs$lang$maxFixedArity = 6;
    G__19300.cljs$lang$applyTo = function(arglist__19301) {
      var obj = cljs.core.first(arglist__19301);
      arglist__19301 = cljs.core.next(arglist__19301);
      var f = cljs.core.first(arglist__19301);
      arglist__19301 = cljs.core.next(arglist__19301);
      var a = cljs.core.first(arglist__19301);
      arglist__19301 = cljs.core.next(arglist__19301);
      var b = cljs.core.first(arglist__19301);
      arglist__19301 = cljs.core.next(arglist__19301);
      var c = cljs.core.first(arglist__19301);
      arglist__19301 = cljs.core.next(arglist__19301);
      var d = cljs.core.first(arglist__19301);
      var args = cljs.core.rest(arglist__19301);
      return G__19300__delegate(obj, f, a, b, c, d, args);
    };
    G__19300.cljs$core$IFn$_invoke$arity$variadic = G__19300__delegate;
    return G__19300;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__19302__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__19302 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19302__delegate.call(this, x, y, more);
    };
    G__19302.cljs$lang$maxFixedArity = 2;
    G__19302.cljs$lang$applyTo = function(arglist__19303) {
      var x = cljs.core.first(arglist__19303);
      arglist__19303 = cljs.core.next(arglist__19303);
      var y = cljs.core.first(arglist__19303);
      var more = cljs.core.rest(arglist__19303);
      return G__19302__delegate(x, y, more);
    };
    G__19302.cljs$core$IFn$_invoke$arity$variadic = G__19302__delegate;
    return G__19302;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t19307 !== "undefined") {
  } else {
    cljs.core.t19307 = function(nil_iter, meta19308) {
      this.nil_iter = nil_iter;
      this.meta19308 = meta19308;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t19307.cljs$lang$type = true;
    cljs.core.t19307.cljs$lang$ctorStr = "cljs.core/t19307";
    cljs.core.t19307.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/t19307");
    };
    cljs.core.t19307.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19307.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19307.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19307.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19309) {
      var self__ = this;
      var _19309__$1 = this;
      return self__.meta19308;
    };
    cljs.core.t19307.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19309, meta19308__$1) {
      var self__ = this;
      var _19309__$1 = this;
      return new cljs.core.t19307(self__.nil_iter, meta19308__$1);
    };
    cljs.core.__GT_t19307 = function __GT_t19307(nil_iter__$1, meta19308) {
      return new cljs.core.t19307(nil_iter__$1, meta19308);
    };
  }
  return new cljs.core.t19307(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.SeqIter = function(seq) {
  this.seq = seq;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return!(self__.seq == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var first = cljs.core.first.call(null, self__.seq);
  self__.seq = cljs.core.next.call(null, self__.seq);
  return first;
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(seq) {
  return new cljs.core.SeqIter(seq);
};
cljs.core.seq_iter = function seq_iter(seq) {
  return new cljs.core.SeqIter(seq);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, cljs.core.seq.call(null, coll));
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = !(lt.stepper == null);
      if (and__3539__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3539__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__19310 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__19310;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4407__auto___19311 = self__.iters.length;
  var i_19312 = 0;
  while (true) {
    if (i_19312 < n__4407__auto___19311) {
      cljs.core.next[i_19312] = self__.iters[i_19312].next();
      var G__19313 = i_19312 + 1;
      i_19312 = G__19313;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var _ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = !(lt.stepper == null);
      if (and__3539__auto__) {
        return cljs.core.iter.hasNext();
      } else {
        return and__3539__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, cljs.core.iter.next()))) {
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform, iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19314_19318 = cljs.core.seq.call(null, colls);
  var chunk__19315_19319 = null;
  var count__19316_19320 = 0;
  var i__19317_19321 = 0;
  while (true) {
    if (i__19317_19321 < count__19316_19320) {
      var coll_19322 = cljs.core._nth.call(null, chunk__19315_19319, i__19317_19321);
      iters.push(cljs.core.iter.call(null, coll_19322));
      var G__19323 = seq__19314_19318;
      var G__19324 = chunk__19315_19319;
      var G__19325 = count__19316_19320;
      var G__19326 = i__19317_19321 + 1;
      seq__19314_19318 = G__19323;
      chunk__19315_19319 = G__19324;
      count__19316_19320 = G__19325;
      i__19317_19321 = G__19326;
      continue;
    } else {
      var temp__4126__auto___19327 = cljs.core.seq.call(null, seq__19314_19318);
      if (temp__4126__auto___19327) {
        var seq__19314_19328__$1 = temp__4126__auto___19327;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19314_19328__$1)) {
          var c__4307__auto___19329 = cljs.core.chunk_first.call(null, seq__19314_19328__$1);
          var G__19330 = cljs.core.chunk_rest.call(null, seq__19314_19328__$1);
          var G__19331 = c__4307__auto___19329;
          var G__19332 = cljs.core.count.call(null, c__4307__auto___19329);
          var G__19333 = 0;
          seq__19314_19318 = G__19330;
          chunk__19315_19319 = G__19331;
          count__19316_19320 = G__19332;
          i__19317_19321 = G__19333;
          continue;
        } else {
          var coll_19334 = cljs.core.first.call(null, seq__19314_19328__$1);
          iters.push(cljs.core.iter.call(null, coll_19334));
          var G__19335 = cljs.core.next.call(null, seq__19314_19328__$1);
          var G__19336 = null;
          var G__19337 = 0;
          var G__19338 = 0;
          seq__19314_19318 = G__19335;
          chunk__19315_19319 = G__19336;
          count__19316_19320 = G__19337;
          i__19317_19321 = G__19338;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3551__auto__ = cljs.core.seq.call(null, coll);
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__19339__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__19339 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19339__delegate.call(this, xform, coll, colls);
    };
    G__19339.cljs$lang$maxFixedArity = 2;
    G__19339.cljs$lang$applyTo = function(arglist__19340) {
      var xform = cljs.core.first(arglist__19340);
      arglist__19340 = cljs.core.next(arglist__19340);
      var coll = cljs.core.first(arglist__19340);
      var colls = cljs.core.rest(arglist__19340);
      return G__19339__delegate(xform, coll, colls);
    };
    G__19339.cljs$core$IFn$_invoke$arity$variadic = G__19339__delegate;
    return G__19339;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__19341 = pred;
        var G__19342 = cljs.core.next.call(null, coll);
        pred = G__19341;
        coll = G__19342;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3551__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        var G__19343 = pred;
        var G__19344 = cljs.core.next.call(null, coll);
        pred = G__19343;
        coll = G__19344;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__19345 = null;
    var G__19345__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__19345__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__19345__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__19345__3 = function() {
      var G__19346__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__19346 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__19346__delegate.call(this, x, y, zs);
      };
      G__19346.cljs$lang$maxFixedArity = 2;
      G__19346.cljs$lang$applyTo = function(arglist__19347) {
        var x = cljs.core.first(arglist__19347);
        arglist__19347 = cljs.core.next(arglist__19347);
        var y = cljs.core.first(arglist__19347);
        var zs = cljs.core.rest(arglist__19347);
        return G__19346__delegate(x, y, zs);
      };
      G__19346.cljs$core$IFn$_invoke$arity$variadic = G__19346__delegate;
      return G__19346;
    }();
    G__19345 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19345__0.call(this);
        case 1:
          return G__19345__1.call(this, x);
        case 2:
          return G__19345__2.call(this, x, y);
        default:
          return G__19345__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19345.cljs$lang$maxFixedArity = 2;
    G__19345.cljs$lang$applyTo = G__19345__3.cljs$lang$applyTo;
    G__19345.cljs$core$IFn$_invoke$arity$0 = G__19345__0;
    G__19345.cljs$core$IFn$_invoke$arity$1 = G__19345__1;
    G__19345.cljs$core$IFn$_invoke$arity$2 = G__19345__2;
    G__19345.cljs$core$IFn$_invoke$arity$variadic = G__19345__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19345;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__19348__delegate = function(args) {
      return x;
    };
    var G__19348 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19348__delegate.call(this, args);
    };
    G__19348.cljs$lang$maxFixedArity = 0;
    G__19348.cljs$lang$applyTo = function(arglist__19349) {
      var args = cljs.core.seq(arglist__19349);
      return G__19348__delegate(args);
    };
    G__19348.cljs$core$IFn$_invoke$arity$variadic = G__19348__delegate;
    return G__19348;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__19350 = null;
      var G__19350__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__19350__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__19350__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__19350__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__19350__4 = function() {
        var G__19351__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__19351 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19351__delegate.call(this, x, y, z, args);
        };
        G__19351.cljs$lang$maxFixedArity = 3;
        G__19351.cljs$lang$applyTo = function(arglist__19352) {
          var x = cljs.core.first(arglist__19352);
          arglist__19352 = cljs.core.next(arglist__19352);
          var y = cljs.core.first(arglist__19352);
          arglist__19352 = cljs.core.next(arglist__19352);
          var z = cljs.core.first(arglist__19352);
          var args = cljs.core.rest(arglist__19352);
          return G__19351__delegate(x, y, z, args);
        };
        G__19351.cljs$core$IFn$_invoke$arity$variadic = G__19351__delegate;
        return G__19351;
      }();
      G__19350 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19350__0.call(this);
          case 1:
            return G__19350__1.call(this, x);
          case 2:
            return G__19350__2.call(this, x, y);
          case 3:
            return G__19350__3.call(this, x, y, z);
          default:
            return G__19350__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19350.cljs$lang$maxFixedArity = 3;
      G__19350.cljs$lang$applyTo = G__19350__4.cljs$lang$applyTo;
      G__19350.cljs$core$IFn$_invoke$arity$0 = G__19350__0;
      G__19350.cljs$core$IFn$_invoke$arity$1 = G__19350__1;
      G__19350.cljs$core$IFn$_invoke$arity$2 = G__19350__2;
      G__19350.cljs$core$IFn$_invoke$arity$3 = G__19350__3;
      G__19350.cljs$core$IFn$_invoke$arity$variadic = G__19350__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19350;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__19353 = null;
      var G__19353__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__19353__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__19353__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__19353__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__19353__4 = function() {
        var G__19354__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__19354 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19354__delegate.call(this, x, y, z, args);
        };
        G__19354.cljs$lang$maxFixedArity = 3;
        G__19354.cljs$lang$applyTo = function(arglist__19355) {
          var x = cljs.core.first(arglist__19355);
          arglist__19355 = cljs.core.next(arglist__19355);
          var y = cljs.core.first(arglist__19355);
          arglist__19355 = cljs.core.next(arglist__19355);
          var z = cljs.core.first(arglist__19355);
          var args = cljs.core.rest(arglist__19355);
          return G__19354__delegate(x, y, z, args);
        };
        G__19354.cljs$core$IFn$_invoke$arity$variadic = G__19354__delegate;
        return G__19354;
      }();
      G__19353 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19353__0.call(this);
          case 1:
            return G__19353__1.call(this, x);
          case 2:
            return G__19353__2.call(this, x, y);
          case 3:
            return G__19353__3.call(this, x, y, z);
          default:
            return G__19353__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19353.cljs$lang$maxFixedArity = 3;
      G__19353.cljs$lang$applyTo = G__19353__4.cljs$lang$applyTo;
      G__19353.cljs$core$IFn$_invoke$arity$0 = G__19353__0;
      G__19353.cljs$core$IFn$_invoke$arity$1 = G__19353__1;
      G__19353.cljs$core$IFn$_invoke$arity$2 = G__19353__2;
      G__19353.cljs$core$IFn$_invoke$arity$3 = G__19353__3;
      G__19353.cljs$core$IFn$_invoke$arity$variadic = G__19353__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19353;
    }();
  };
  var comp__4 = function() {
    var G__19356__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__19357__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__19358 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__19359 = cljs.core.next.call(null, fs__$2);
                ret = G__19358;
                fs__$2 = G__19359;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__19357 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__19357__delegate.call(this, args);
          };
          G__19357.cljs$lang$maxFixedArity = 0;
          G__19357.cljs$lang$applyTo = function(arglist__19360) {
            var args = cljs.core.seq(arglist__19360);
            return G__19357__delegate(args);
          };
          G__19357.cljs$core$IFn$_invoke$arity$variadic = G__19357__delegate;
          return G__19357;
        }();
      }(fs__$1);
    };
    var G__19356 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19356__delegate.call(this, f1, f2, f3, fs);
    };
    G__19356.cljs$lang$maxFixedArity = 3;
    G__19356.cljs$lang$applyTo = function(arglist__19361) {
      var f1 = cljs.core.first(arglist__19361);
      arglist__19361 = cljs.core.next(arglist__19361);
      var f2 = cljs.core.first(arglist__19361);
      arglist__19361 = cljs.core.next(arglist__19361);
      var f3 = cljs.core.first(arglist__19361);
      var fs = cljs.core.rest(arglist__19361);
      return G__19356__delegate(f1, f2, f3, fs);
    };
    G__19356.cljs$core$IFn$_invoke$arity$variadic = G__19356__delegate;
    return G__19356;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__19362__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__19362 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19362__delegate.call(this, args);
      };
      G__19362.cljs$lang$maxFixedArity = 0;
      G__19362.cljs$lang$applyTo = function(arglist__19363) {
        var args = cljs.core.seq(arglist__19363);
        return G__19362__delegate(args);
      };
      G__19362.cljs$core$IFn$_invoke$arity$variadic = G__19362__delegate;
      return G__19362;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__19364__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__19364 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19364__delegate.call(this, args);
      };
      G__19364.cljs$lang$maxFixedArity = 0;
      G__19364.cljs$lang$applyTo = function(arglist__19365) {
        var args = cljs.core.seq(arglist__19365);
        return G__19364__delegate(args);
      };
      G__19364.cljs$core$IFn$_invoke$arity$variadic = G__19364__delegate;
      return G__19364;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__19366__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__19366 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19366__delegate.call(this, args);
      };
      G__19366.cljs$lang$maxFixedArity = 0;
      G__19366.cljs$lang$applyTo = function(arglist__19367) {
        var args = cljs.core.seq(arglist__19367);
        return G__19366__delegate(args);
      };
      G__19366.cljs$core$IFn$_invoke$arity$variadic = G__19366__delegate;
      return G__19366;
    }();
  };
  var partial__5 = function() {
    var G__19368__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__19369__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__19369 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__19369__delegate.call(this, args);
        };
        G__19369.cljs$lang$maxFixedArity = 0;
        G__19369.cljs$lang$applyTo = function(arglist__19370) {
          var args = cljs.core.seq(arglist__19370);
          return G__19369__delegate(args);
        };
        G__19369.cljs$core$IFn$_invoke$arity$variadic = G__19369__delegate;
        return G__19369;
      }();
    };
    var G__19368 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19368__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__19368.cljs$lang$maxFixedArity = 4;
    G__19368.cljs$lang$applyTo = function(arglist__19371) {
      var f = cljs.core.first(arglist__19371);
      arglist__19371 = cljs.core.next(arglist__19371);
      var arg1 = cljs.core.first(arglist__19371);
      arglist__19371 = cljs.core.next(arglist__19371);
      var arg2 = cljs.core.first(arglist__19371);
      arglist__19371 = cljs.core.next(arglist__19371);
      var arg3 = cljs.core.first(arglist__19371);
      var more = cljs.core.rest(arglist__19371);
      return G__19368__delegate(f, arg1, arg2, arg3, more);
    };
    G__19368.cljs$core$IFn$_invoke$arity$variadic = G__19368__delegate;
    return G__19368;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__19372 = null;
      var G__19372__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__19372__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__19372__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__19372__4 = function() {
        var G__19373__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__19373 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19373__delegate.call(this, a, b, c, ds);
        };
        G__19373.cljs$lang$maxFixedArity = 3;
        G__19373.cljs$lang$applyTo = function(arglist__19374) {
          var a = cljs.core.first(arglist__19374);
          arglist__19374 = cljs.core.next(arglist__19374);
          var b = cljs.core.first(arglist__19374);
          arglist__19374 = cljs.core.next(arglist__19374);
          var c = cljs.core.first(arglist__19374);
          var ds = cljs.core.rest(arglist__19374);
          return G__19373__delegate(a, b, c, ds);
        };
        G__19373.cljs$core$IFn$_invoke$arity$variadic = G__19373__delegate;
        return G__19373;
      }();
      G__19372 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__19372__1.call(this, a);
          case 2:
            return G__19372__2.call(this, a, b);
          case 3:
            return G__19372__3.call(this, a, b, c);
          default:
            return G__19372__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19372.cljs$lang$maxFixedArity = 3;
      G__19372.cljs$lang$applyTo = G__19372__4.cljs$lang$applyTo;
      G__19372.cljs$core$IFn$_invoke$arity$1 = G__19372__1;
      G__19372.cljs$core$IFn$_invoke$arity$2 = G__19372__2;
      G__19372.cljs$core$IFn$_invoke$arity$3 = G__19372__3;
      G__19372.cljs$core$IFn$_invoke$arity$variadic = G__19372__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19372;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__19375 = null;
      var G__19375__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19375__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__19375__4 = function() {
        var G__19376__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__19376 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19376__delegate.call(this, a, b, c, ds);
        };
        G__19376.cljs$lang$maxFixedArity = 3;
        G__19376.cljs$lang$applyTo = function(arglist__19377) {
          var a = cljs.core.first(arglist__19377);
          arglist__19377 = cljs.core.next(arglist__19377);
          var b = cljs.core.first(arglist__19377);
          arglist__19377 = cljs.core.next(arglist__19377);
          var c = cljs.core.first(arglist__19377);
          var ds = cljs.core.rest(arglist__19377);
          return G__19376__delegate(a, b, c, ds);
        };
        G__19376.cljs$core$IFn$_invoke$arity$variadic = G__19376__delegate;
        return G__19376;
      }();
      G__19375 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19375__2.call(this, a, b);
          case 3:
            return G__19375__3.call(this, a, b, c);
          default:
            return G__19375__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19375.cljs$lang$maxFixedArity = 3;
      G__19375.cljs$lang$applyTo = G__19375__4.cljs$lang$applyTo;
      G__19375.cljs$core$IFn$_invoke$arity$2 = G__19375__2;
      G__19375.cljs$core$IFn$_invoke$arity$3 = G__19375__3;
      G__19375.cljs$core$IFn$_invoke$arity$variadic = G__19375__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19375;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__19378 = null;
      var G__19378__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19378__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__19378__4 = function() {
        var G__19379__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__19379 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19379__delegate.call(this, a, b, c, ds);
        };
        G__19379.cljs$lang$maxFixedArity = 3;
        G__19379.cljs$lang$applyTo = function(arglist__19380) {
          var a = cljs.core.first(arglist__19380);
          arglist__19380 = cljs.core.next(arglist__19380);
          var b = cljs.core.first(arglist__19380);
          arglist__19380 = cljs.core.next(arglist__19380);
          var c = cljs.core.first(arglist__19380);
          var ds = cljs.core.rest(arglist__19380);
          return G__19379__delegate(a, b, c, ds);
        };
        G__19379.cljs$core$IFn$_invoke$arity$variadic = G__19379__delegate;
        return G__19379;
      }();
      G__19378 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19378__2.call(this, a, b);
          case 3:
            return G__19378__3.call(this, a, b, c);
          default:
            return G__19378__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19378.cljs$lang$maxFixedArity = 3;
      G__19378.cljs$lang$applyTo = G__19378__4.cljs$lang$applyTo;
      G__19378.cljs$core$IFn$_invoke$arity$2 = G__19378__2;
      G__19378.cljs$core$IFn$_invoke$arity$3 = G__19378__3;
      G__19378.cljs$core$IFn$_invoke$arity$variadic = G__19378__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19378;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___19381 = size;
          var i_19382 = 0;
          while (true) {
            if (i_19382 < n__4407__auto___19381) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_19382, cljs.core._nth.call(null, c, i_19382)));
              var G__19383 = i_19382 + 1;
              i_19382 = G__19383;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19384 = null;
        var G__19384__0 = function() {
          return f1.call(null);
        };
        var G__19384__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19384__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__19384 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19384__0.call(this);
            case 1:
              return G__19384__1.call(this, result);
            case 2:
              return G__19384__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19384.cljs$core$IFn$_invoke$arity$0 = G__19384__0;
        G__19384.cljs$core$IFn$_invoke$arity$1 = G__19384__1;
        G__19384.cljs$core$IFn$_invoke$arity$2 = G__19384__2;
        return G__19384;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___19385 = size;
          var i_19386 = 0;
          while (true) {
            if (i_19386 < n__4407__auto___19385) {
              var x_19387 = f.call(null, cljs.core._nth.call(null, c, i_19386));
              if (x_19387 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_19387);
              }
              var G__19388 = i_19386 + 1;
              i_19386 = G__19388;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19389 = cljs.core.seq.call(null, self__.watches);
  var chunk__19390 = null;
  var count__19391 = 0;
  var i__19392 = 0;
  while (true) {
    if (i__19392 < count__19391) {
      var vec__19393 = cljs.core._nth.call(null, chunk__19390, i__19392);
      var key = cljs.core.nth.call(null, vec__19393, 0, null);
      var f = cljs.core.nth.call(null, vec__19393, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__19395 = seq__19389;
      var G__19396 = chunk__19390;
      var G__19397 = count__19391;
      var G__19398 = i__19392 + 1;
      seq__19389 = G__19395;
      chunk__19390 = G__19396;
      count__19391 = G__19397;
      i__19392 = G__19398;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19389);
      if (temp__4126__auto__) {
        var seq__19389__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19389__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19389__$1);
          var G__19399 = cljs.core.chunk_rest.call(null, seq__19389__$1);
          var G__19400 = c__4307__auto__;
          var G__19401 = cljs.core.count.call(null, c__4307__auto__);
          var G__19402 = 0;
          seq__19389 = G__19399;
          chunk__19390 = G__19400;
          count__19391 = G__19401;
          i__19392 = G__19402;
          continue;
        } else {
          var vec__19394 = cljs.core.first.call(null, seq__19389__$1);
          var key = cljs.core.nth.call(null, vec__19394, 0, null);
          var f = cljs.core.nth.call(null, vec__19394, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__19403 = cljs.core.next.call(null, seq__19389__$1);
          var G__19404 = null;
          var G__19405 = 0;
          var G__19406 = 0;
          seq__19389 = G__19403;
          chunk__19390 = G__19404;
          count__19391 = G__19405;
          i__19392 = G__19406;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__19410__delegate = function(x, p__19407) {
      var map__19409 = p__19407;
      var map__19409__$1 = cljs.core.seq_QMARK_.call(null, map__19409) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19409) : map__19409;
      var validator = cljs.core.get.call(null, map__19409__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__19409__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__19410 = function(x, var_args) {
      var p__19407 = null;
      if (arguments.length > 1) {
        p__19407 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19410__delegate.call(this, x, p__19407);
    };
    G__19410.cljs$lang$maxFixedArity = 1;
    G__19410.cljs$lang$applyTo = function(arglist__19411) {
      var x = cljs.core.first(arglist__19411);
      var p__19407 = cljs.core.rest(arglist__19411);
      return G__19410__delegate(x, p__19407);
    };
    G__19410.cljs$core$IFn$_invoke$arity$variadic = G__19410__delegate;
    return G__19410;
  }();
  atom = function(x, var_args) {
    var p__19407 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__19412__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__19412 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19412__delegate.call(this, a, f, x, y, more);
    };
    G__19412.cljs$lang$maxFixedArity = 4;
    G__19412.cljs$lang$applyTo = function(arglist__19413) {
      var a = cljs.core.first(arglist__19413);
      arglist__19413 = cljs.core.next(arglist__19413);
      var f = cljs.core.first(arglist__19413);
      arglist__19413 = cljs.core.next(arglist__19413);
      var x = cljs.core.first(arglist__19413);
      arglist__19413 = cljs.core.next(arglist__19413);
      var y = cljs.core.first(arglist__19413);
      var more = cljs.core.rest(arglist__19413);
      return G__19412__delegate(a, f, x, y, more);
    };
    G__19412.cljs$core$IFn$_invoke$arity$variadic = G__19412__delegate;
    return G__19412;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__19414 = null;
          var G__19414__0 = function() {
            return f1.call(null);
          };
          var G__19414__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19414__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__19414 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19414__0.call(this);
              case 1:
                return G__19414__1.call(this, result);
              case 2:
                return G__19414__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19414.cljs$core$IFn$_invoke$arity$0 = G__19414__0;
          G__19414.cljs$core$IFn$_invoke$arity$1 = G__19414__1;
          G__19414.cljs$core$IFn$_invoke$arity$2 = G__19414__2;
          return G__19414;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4407__auto___19415 = size;
            var i_19416 = 0;
            while (true) {
              if (i_19416 < n__4407__auto___19415) {
                var x_19417 = f.call(null, idx + i_19416, cljs.core._nth.call(null, c, i_19416));
                if (x_19417 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_19417);
                }
                var G__19418 = i_19416 + 1;
                i_19416 = G__19418;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            return p.call(null, y);
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__19425__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__19425 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19425__delegate.call(this, x, y, z, args);
        };
        G__19425.cljs$lang$maxFixedArity = 3;
        G__19425.cljs$lang$applyTo = function(arglist__19426) {
          var x = cljs.core.first(arglist__19426);
          arglist__19426 = cljs.core.next(arglist__19426);
          var y = cljs.core.first(arglist__19426);
          arglist__19426 = cljs.core.next(arglist__19426);
          var z = cljs.core.first(arglist__19426);
          var args = cljs.core.rest(arglist__19426);
          return G__19425__delegate(x, y, z, args);
        };
        G__19425.cljs$core$IFn$_invoke$arity$variadic = G__19425__delegate;
        return G__19425;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__19427__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19419_SHARP_) {
            var and__3539__auto__ = p1.call(null, p1__19419_SHARP_);
            if (cljs.core.truth_(and__3539__auto__)) {
              return p2.call(null, p1__19419_SHARP_);
            } else {
              return and__3539__auto__;
            }
          }, args));
        };
        var G__19427 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19427__delegate.call(this, x, y, z, args);
        };
        G__19427.cljs$lang$maxFixedArity = 3;
        G__19427.cljs$lang$applyTo = function(arglist__19428) {
          var x = cljs.core.first(arglist__19428);
          arglist__19428 = cljs.core.next(arglist__19428);
          var y = cljs.core.first(arglist__19428);
          arglist__19428 = cljs.core.next(arglist__19428);
          var z = cljs.core.first(arglist__19428);
          var args = cljs.core.rest(arglist__19428);
          return G__19427__delegate(x, y, z, args);
        };
        G__19427.cljs$core$IFn$_invoke$arity$variadic = G__19427__delegate;
        return G__19427;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    var and__3539__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3539__auto____$5)) {
                      var and__3539__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3539__auto____$6)) {
                        var and__3539__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3539__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3539__auto____$7;
                        }
                      } else {
                        return and__3539__auto____$6;
                      }
                    } else {
                      return and__3539__auto____$5;
                    }
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__19429__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19420_SHARP_) {
            var and__3539__auto__ = p1.call(null, p1__19420_SHARP_);
            if (cljs.core.truth_(and__3539__auto__)) {
              var and__3539__auto____$1 = p2.call(null, p1__19420_SHARP_);
              if (cljs.core.truth_(and__3539__auto____$1)) {
                return p3.call(null, p1__19420_SHARP_);
              } else {
                return and__3539__auto____$1;
              }
            } else {
              return and__3539__auto__;
            }
          }, args));
        };
        var G__19429 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19429__delegate.call(this, x, y, z, args);
        };
        G__19429.cljs$lang$maxFixedArity = 3;
        G__19429.cljs$lang$applyTo = function(arglist__19430) {
          var x = cljs.core.first(arglist__19430);
          arglist__19430 = cljs.core.next(arglist__19430);
          var y = cljs.core.first(arglist__19430);
          arglist__19430 = cljs.core.next(arglist__19430);
          var z = cljs.core.first(arglist__19430);
          var args = cljs.core.rest(arglist__19430);
          return G__19429__delegate(x, y, z, args);
        };
        G__19429.cljs$core$IFn$_invoke$arity$variadic = G__19429__delegate;
        return G__19429;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__19431__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19421_SHARP_) {
                return p1__19421_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19422_SHARP_) {
                var and__3539__auto__ = p1__19422_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3539__auto__)) {
                  return p1__19422_SHARP_.call(null, y);
                } else {
                  return and__3539__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19423_SHARP_) {
                var and__3539__auto__ = p1__19423_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3539__auto__)) {
                  var and__3539__auto____$1 = p1__19423_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$1)) {
                    return p1__19423_SHARP_.call(null, z);
                  } else {
                    return and__3539__auto____$1;
                  }
                } else {
                  return and__3539__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__19432__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__19424_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__19424_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__19432 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19432__delegate.call(this, x, y, z, args);
            };
            G__19432.cljs$lang$maxFixedArity = 3;
            G__19432.cljs$lang$applyTo = function(arglist__19433) {
              var x = cljs.core.first(arglist__19433);
              arglist__19433 = cljs.core.next(arglist__19433);
              var y = cljs.core.first(arglist__19433);
              arglist__19433 = cljs.core.next(arglist__19433);
              var z = cljs.core.first(arglist__19433);
              var args = cljs.core.rest(arglist__19433);
              return G__19432__delegate(x, y, z, args);
            };
            G__19432.cljs$core$IFn$_invoke$arity$variadic = G__19432__delegate;
            return G__19432;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__19431 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19431__delegate.call(this, p1, p2, p3, ps);
    };
    G__19431.cljs$lang$maxFixedArity = 3;
    G__19431.cljs$lang$applyTo = function(arglist__19434) {
      var p1 = cljs.core.first(arglist__19434);
      arglist__19434 = cljs.core.next(arglist__19434);
      var p2 = cljs.core.first(arglist__19434);
      arglist__19434 = cljs.core.next(arglist__19434);
      var p3 = cljs.core.first(arglist__19434);
      var ps = cljs.core.rest(arglist__19434);
      return G__19431__delegate(p1, p2, p3, ps);
    };
    G__19431.cljs$core$IFn$_invoke$arity$variadic = G__19431__delegate;
    return G__19431;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3551__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3551__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__19441__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__19441 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19441__delegate.call(this, x, y, z, args);
        };
        G__19441.cljs$lang$maxFixedArity = 3;
        G__19441.cljs$lang$applyTo = function(arglist__19442) {
          var x = cljs.core.first(arglist__19442);
          arglist__19442 = cljs.core.next(arglist__19442);
          var y = cljs.core.first(arglist__19442);
          arglist__19442 = cljs.core.next(arglist__19442);
          var z = cljs.core.first(arglist__19442);
          var args = cljs.core.rest(arglist__19442);
          return G__19441__delegate(x, y, z, args);
        };
        G__19441.cljs$core$IFn$_invoke$arity$variadic = G__19441__delegate;
        return G__19441;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__19443__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3551__auto__) {
              return function(p1__19435_SHARP_) {
                var or__3551__auto____$1 = p1.call(null, p1__19435_SHARP_);
                if (cljs.core.truth_(or__3551__auto____$1)) {
                  return or__3551__auto____$1;
                } else {
                  return p2.call(null, p1__19435_SHARP_);
                }
              };
            }(or__3551__auto__), args);
          }
        };
        var G__19443 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19443__delegate.call(this, x, y, z, args);
        };
        G__19443.cljs$lang$maxFixedArity = 3;
        G__19443.cljs$lang$applyTo = function(arglist__19444) {
          var x = cljs.core.first(arglist__19444);
          arglist__19444 = cljs.core.next(arglist__19444);
          var y = cljs.core.first(arglist__19444);
          arglist__19444 = cljs.core.next(arglist__19444);
          var z = cljs.core.first(arglist__19444);
          var args = cljs.core.rest(arglist__19444);
          return G__19443__delegate(x, y, z, args);
        };
        G__19443.cljs$core$IFn$_invoke$arity$variadic = G__19443__delegate;
        return G__19443;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  var or__3551__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3551__auto____$5)) {
                    return or__3551__auto____$5;
                  } else {
                    var or__3551__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3551__auto____$6)) {
                      return or__3551__auto____$6;
                    } else {
                      var or__3551__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3551__auto____$7)) {
                        return or__3551__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__19445__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3551__auto__) {
              return function(p1__19436_SHARP_) {
                var or__3551__auto____$1 = p1.call(null, p1__19436_SHARP_);
                if (cljs.core.truth_(or__3551__auto____$1)) {
                  return or__3551__auto____$1;
                } else {
                  var or__3551__auto____$2 = p2.call(null, p1__19436_SHARP_);
                  if (cljs.core.truth_(or__3551__auto____$2)) {
                    return or__3551__auto____$2;
                  } else {
                    return p3.call(null, p1__19436_SHARP_);
                  }
                }
              };
            }(or__3551__auto__), args);
          }
        };
        var G__19445 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19445__delegate.call(this, x, y, z, args);
        };
        G__19445.cljs$lang$maxFixedArity = 3;
        G__19445.cljs$lang$applyTo = function(arglist__19446) {
          var x = cljs.core.first(arglist__19446);
          arglist__19446 = cljs.core.next(arglist__19446);
          var y = cljs.core.first(arglist__19446);
          arglist__19446 = cljs.core.next(arglist__19446);
          var z = cljs.core.first(arglist__19446);
          var args = cljs.core.rest(arglist__19446);
          return G__19445__delegate(x, y, z, args);
        };
        G__19445.cljs$core$IFn$_invoke$arity$variadic = G__19445__delegate;
        return G__19445;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__19447__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19437_SHARP_) {
                return p1__19437_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19438_SHARP_) {
                var or__3551__auto__ = p1__19438_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3551__auto__)) {
                  return or__3551__auto__;
                } else {
                  return p1__19438_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19439_SHARP_) {
                var or__3551__auto__ = p1__19439_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3551__auto__)) {
                  return or__3551__auto__;
                } else {
                  var or__3551__auto____$1 = p1__19439_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3551__auto____$1)) {
                    return or__3551__auto____$1;
                  } else {
                    return p1__19439_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__19448__delegate = function(x, y, z, args) {
              var or__3551__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3551__auto__)) {
                return or__3551__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3551__auto__, ps__$1) {
                  return function(p1__19440_SHARP_) {
                    return cljs.core.some.call(null, p1__19440_SHARP_, args);
                  };
                }(or__3551__auto__, ps__$1), ps__$1);
              }
            };
            var G__19448 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19448__delegate.call(this, x, y, z, args);
            };
            G__19448.cljs$lang$maxFixedArity = 3;
            G__19448.cljs$lang$applyTo = function(arglist__19449) {
              var x = cljs.core.first(arglist__19449);
              arglist__19449 = cljs.core.next(arglist__19449);
              var y = cljs.core.first(arglist__19449);
              arglist__19449 = cljs.core.next(arglist__19449);
              var z = cljs.core.first(arglist__19449);
              var args = cljs.core.rest(arglist__19449);
              return G__19448__delegate(x, y, z, args);
            };
            G__19448.cljs$core$IFn$_invoke$arity$variadic = G__19448__delegate;
            return G__19448;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__19447 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19447__delegate.call(this, p1, p2, p3, ps);
    };
    G__19447.cljs$lang$maxFixedArity = 3;
    G__19447.cljs$lang$applyTo = function(arglist__19450) {
      var p1 = cljs.core.first(arglist__19450);
      arglist__19450 = cljs.core.next(arglist__19450);
      var p2 = cljs.core.first(arglist__19450);
      arglist__19450 = cljs.core.next(arglist__19450);
      var p3 = cljs.core.first(arglist__19450);
      var ps = cljs.core.rest(arglist__19450);
      return G__19447__delegate(p1, p2, p3, ps);
    };
    G__19447.cljs$core$IFn$_invoke$arity$variadic = G__19447__delegate;
    return G__19447;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19452 = null;
        var G__19452__0 = function() {
          return f1.call(null);
        };
        var G__19452__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19452__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__19452__3 = function() {
          var G__19453__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__19453 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__19453__delegate.call(this, result, input, inputs);
          };
          G__19453.cljs$lang$maxFixedArity = 2;
          G__19453.cljs$lang$applyTo = function(arglist__19454) {
            var result = cljs.core.first(arglist__19454);
            arglist__19454 = cljs.core.next(arglist__19454);
            var input = cljs.core.first(arglist__19454);
            var inputs = cljs.core.rest(arglist__19454);
            return G__19453__delegate(result, input, inputs);
          };
          G__19453.cljs$core$IFn$_invoke$arity$variadic = G__19453__delegate;
          return G__19453;
        }();
        G__19452 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19452__0.call(this);
            case 1:
              return G__19452__1.call(this, result);
            case 2:
              return G__19452__2.call(this, result, input);
            default:
              return G__19452__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19452.cljs$lang$maxFixedArity = 2;
        G__19452.cljs$lang$applyTo = G__19452__3.cljs$lang$applyTo;
        G__19452.cljs$core$IFn$_invoke$arity$0 = G__19452__0;
        G__19452.cljs$core$IFn$_invoke$arity$1 = G__19452__1;
        G__19452.cljs$core$IFn$_invoke$arity$2 = G__19452__2;
        G__19452.cljs$core$IFn$_invoke$arity$variadic = G__19452__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19452;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___19455 = size;
          var i_19456 = 0;
          while (true) {
            if (i_19456 < n__4407__auto___19455) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_19456)));
              var G__19457 = i_19456 + 1;
              i_19456 = G__19457;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__19458__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__19451_SHARP_) {
          return cljs.core.apply.call(null, f, p1__19451_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__19458 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19458__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19458.cljs$lang$maxFixedArity = 4;
    G__19458.cljs$lang$applyTo = function(arglist__19459) {
      var f = cljs.core.first(arglist__19459);
      arglist__19459 = cljs.core.next(arglist__19459);
      var c1 = cljs.core.first(arglist__19459);
      arglist__19459 = cljs.core.next(arglist__19459);
      var c2 = cljs.core.first(arglist__19459);
      arglist__19459 = cljs.core.next(arglist__19459);
      var c3 = cljs.core.first(arglist__19459);
      var colls = cljs.core.rest(arglist__19459);
      return G__19458__delegate(f, c1, c2, c3, colls);
    };
    G__19458.cljs$core$IFn$_invoke$arity$variadic = G__19458__delegate;
    return G__19458;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19460 = null;
          var G__19460__0 = function() {
            return f1.call(null);
          };
          var G__19460__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19460__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__19460 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19460__0.call(this);
              case 1:
                return G__19460__1.call(this, result);
              case 2:
                return G__19460__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19460.cljs$core$IFn$_invoke$arity$0 = G__19460__0;
          G__19460.cljs$core$IFn$_invoke$arity$1 = G__19460__1;
          G__19460.cljs$core$IFn$_invoke$arity$2 = G__19460__2;
          return G__19460;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19461 = null;
          var G__19461__0 = function() {
            return f1.call(null);
          };
          var G__19461__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19461__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__19461 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19461__0.call(this);
              case 1:
                return G__19461__1.call(this, result);
              case 2:
                return G__19461__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19461.cljs$core$IFn$_invoke$arity$0 = G__19461__0;
          G__19461.cljs$core$IFn$_invoke$arity$1 = G__19461__1;
          G__19461.cljs$core$IFn$_invoke$arity$2 = G__19461__2;
          return G__19461;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__19462 = n__$1 - 1;
          var G__19463 = cljs.core.rest.call(null, s);
          n__$1 = G__19462;
          coll__$1 = G__19463;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__19464 = cljs.core.next.call(null, s);
      var G__19465 = cljs.core.next.call(null, lead);
      s = G__19464;
      lead = G__19465;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__19466 = null;
          var G__19466__0 = function() {
            return f1.call(null);
          };
          var G__19466__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19466__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3539__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3539__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3539__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__19466 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19466__0.call(this);
              case 1:
                return G__19466__1.call(this, result);
              case 2:
                return G__19466__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19466.cljs$core$IFn$_invoke$arity$0 = G__19466__0;
          G__19466.cljs$core$IFn$_invoke$arity$1 = G__19466__1;
          G__19466.cljs$core$IFn$_invoke$arity$2 = G__19466__2;
          return G__19466;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = s;
          if (and__3539__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3539__auto__;
          }
        }())) {
          var G__19467 = pred__$1;
          var G__19468 = cljs.core.rest.call(null, s);
          pred__$1 = G__19467;
          coll__$1 = G__19468;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__19469__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19469 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19469__delegate.call(this, c1, c2, colls);
    };
    G__19469.cljs$lang$maxFixedArity = 2;
    G__19469.cljs$lang$applyTo = function(arglist__19470) {
      var c1 = cljs.core.first(arglist__19470);
      arglist__19470 = cljs.core.next(arglist__19470);
      var c2 = cljs.core.first(arglist__19470);
      var colls = cljs.core.rest(arglist__19470);
      return G__19469__delegate(c1, c2, colls);
    };
    G__19469.cljs$core$IFn$_invoke$arity$variadic = G__19469__delegate;
    return G__19469;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__19471__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__19471 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19471__delegate.call(this, f, coll, colls);
    };
    G__19471.cljs$lang$maxFixedArity = 2;
    G__19471.cljs$lang$applyTo = function(arglist__19472) {
      var f = cljs.core.first(arglist__19472);
      arglist__19472 = cljs.core.next(arglist__19472);
      var coll = cljs.core.first(arglist__19472);
      var colls = cljs.core.rest(arglist__19472);
      return G__19471__delegate(f, coll, colls);
    };
    G__19471.cljs$core$IFn$_invoke$arity$variadic = G__19471__delegate;
    return G__19471;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__19473 = null;
        var G__19473__0 = function() {
          return f1.call(null);
        };
        var G__19473__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19473__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__19473 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19473__0.call(this);
            case 1:
              return G__19473__1.call(this, result);
            case 2:
              return G__19473__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19473.cljs$core$IFn$_invoke$arity$0 = G__19473__0;
        G__19473.cljs$core$IFn$_invoke$arity$1 = G__19473__1;
        G__19473.cljs$core$IFn$_invoke$arity$2 = G__19473__2;
        return G__19473;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___19474 = size;
          var i_19475 = 0;
          while (true) {
            if (i_19475 < n__4407__auto___19474) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_19475)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_19475));
              } else {
              }
              var G__19476 = i_19475 + 1;
              i_19475 = G__19476;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__19477_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__19477_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19480 = to;
        if (G__19480) {
          var bit__4194__auto__ = G__19480.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4194__auto__ || G__19480.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__19481 = to;
      if (G__19481) {
        var bit__4194__auto__ = G__19481.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4194__auto__ || G__19481.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__19482__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__19482 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19482__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19482.cljs$lang$maxFixedArity = 4;
    G__19482.cljs$lang$applyTo = function(arglist__19483) {
      var f = cljs.core.first(arglist__19483);
      arglist__19483 = cljs.core.next(arglist__19483);
      var c1 = cljs.core.first(arglist__19483);
      arglist__19483 = cljs.core.next(arglist__19483);
      var c2 = cljs.core.first(arglist__19483);
      arglist__19483 = cljs.core.next(arglist__19483);
      var c3 = cljs.core.first(arglist__19483);
      var colls = cljs.core.rest(arglist__19483);
      return G__19482__delegate(f, c1, c2, c3, colls);
    };
    G__19482.cljs$core$IFn$_invoke$arity$variadic = G__19482__delegate;
    return G__19482;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19485 = m__$1;
          if (G__19485) {
            var bit__4201__auto__ = G__19485.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4201__auto__ || G__19485.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19485.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19485);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19485);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19486 = sentinel;
            var G__19487 = m__$2;
            var G__19488 = cljs.core.next.call(null, ks__$1);
            sentinel = G__19486;
            m__$1 = G__19487;
            ks__$1 = G__19488;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__19489, v) {
  var vec__19491 = p__19489;
  var k = cljs.core.nth.call(null, vec__19491, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__19491, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__19492, f) {
    var vec__19502 = p__19492;
    var k = cljs.core.nth.call(null, vec__19502, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19502, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__19493, f, a) {
    var vec__19503 = p__19493;
    var k = cljs.core.nth.call(null, vec__19503, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19503, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__19494, f, a, b) {
    var vec__19504 = p__19494;
    var k = cljs.core.nth.call(null, vec__19504, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19504, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__19495, f, a, b, c) {
    var vec__19505 = p__19495;
    var k = cljs.core.nth.call(null, vec__19505, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19505, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__19507__delegate = function(m, p__19496, f, a, b, c, args) {
      var vec__19506 = p__19496;
      var k = cljs.core.nth.call(null, vec__19506, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__19506, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__19507 = function(m, p__19496, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19507__delegate.call(this, m, p__19496, f, a, b, c, args);
    };
    G__19507.cljs$lang$maxFixedArity = 6;
    G__19507.cljs$lang$applyTo = function(arglist__19508) {
      var m = cljs.core.first(arglist__19508);
      arglist__19508 = cljs.core.next(arglist__19508);
      var p__19496 = cljs.core.first(arglist__19508);
      arglist__19508 = cljs.core.next(arglist__19508);
      var f = cljs.core.first(arglist__19508);
      arglist__19508 = cljs.core.next(arglist__19508);
      var a = cljs.core.first(arglist__19508);
      arglist__19508 = cljs.core.next(arglist__19508);
      var b = cljs.core.first(arglist__19508);
      arglist__19508 = cljs.core.next(arglist__19508);
      var c = cljs.core.first(arglist__19508);
      var args = cljs.core.rest(arglist__19508);
      return G__19507__delegate(m, p__19496, f, a, b, c, args);
    };
    G__19507.cljs$core$IFn$_invoke$arity$variadic = G__19507__delegate;
    return G__19507;
  }();
  update_in = function(m, p__19496, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__19496, f);
      case 4:
        return update_in__4.call(this, m, p__19496, f, a);
      case 5:
        return update_in__5.call(this, m, p__19496, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__19496, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19496, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__19509 = ll - 5;
      var G__19510 = r;
      ll = G__19509;
      ret = G__19510;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19511 = cljs.core.pv_aget.call(null, node, 0);
      var G__19512 = level - 5;
      node = G__19511;
      level = G__19512;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19513 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__19514 = level - 5;
        node = G__19513;
        level = G__19514;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__19516 = j + 1;
              var G__19517 = init__$2;
              j = G__19516;
              init__$1 = G__19517;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__19518 = i + step_init[0];
        i = G__19518;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4407__auto___19519 = len;
    var i_19520 = 0;
    while (true) {
      if (i_19520 < n__4407__auto___19519) {
        new_tail[i_19520] = self__.tail[i_19520];
        var G__19521 = i_19520 + 1;
        i_19520 = G__19521;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19522 = null;
  var G__19522__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19522__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19522 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19522__2.call(this, self__, k);
      case 3:
        return G__19522__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19522.cljs$core$IFn$_invoke$arity$2 = G__19522__2;
  G__19522.cljs$core$IFn$_invoke$arity$3 = G__19522__3;
  return G__19522;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19515) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19515)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__19523 = i + 1;
        var G__19524 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__19523;
        out = G__19524;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__19525) {
    var args = cljs.core.seq(arglist__19525);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3858__auto__ = self__.end;
    var y__3859__auto__ = v_pos + 1;
    return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19527 = null;
  var G__19527__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19527__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19527 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19527__2.call(this, self__, k);
      case 3:
        return G__19527__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19527.cljs$core$IFn$_invoke$arity$2 = G__19527__2;
  G__19527.cljs$core$IFn$_invoke$arity$3 = G__19527__3;
  return G__19527;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19526) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19526)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19528 = meta;
      var G__19529 = v.v;
      var G__19530 = v.start + start;
      var G__19531 = v.start + end;
      var G__19532 = __hash;
      meta = G__19528;
      v = G__19529;
      start = G__19530;
      end = G__19531;
      __hash = G__19532;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19536 = {};
    return obj19536;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19537 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__19538 = level - 5;
        node = G__19537;
        level = G__19538;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__19540 = null;
  var G__19540__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19540__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19540 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19540__2.call(this, self__, k);
      case 3:
        return G__19540__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19540.cljs$core$IFn$_invoke$arity$2 = G__19540__2;
  G__19540.cljs$core$IFn$_invoke$arity$3 = G__19540__3;
  return G__19540;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args19539) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19539)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3551__auto__ = self__.front;
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3551__auto__ = self__.rear;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__19541 = i + incr;
        i = G__19541;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__19542 = i + 1;
      var G__19543 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__19542;
      out = G__19543;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj19547 = {};
    return obj19547;
  }();
  var l = ks.length;
  var i_19548 = 0;
  while (true) {
    if (i_19548 < l) {
      var k_19549 = ks[i_19548];
      new_obj[k_19549] = obj[k_19549];
      var G__19550 = i_19548 + 1;
      i_19548 = G__19550;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19553 = cljs.core.rest.call(null, keys__$1);
        var G__19554 = init__$2;
        keys__$1 = G__19553;
        init__$1 = G__19554;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__19551_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19551_SHARP_, self__.strobj[p1__19551_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__19555 = null;
  var G__19555__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19555__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19555 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19555__2.call(this, self__, k);
      case 3:
        return G__19555__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19555.cljs$core$IFn$_invoke$arity$2 = G__19555__2;
  G__19555.cljs$core$IFn$_invoke$arity$3 = G__19555__3;
  return G__19555;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args19552) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19552)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj19557 = {};
  return obj19557;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__19558 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__19558, 0, null);
    var v = cljs.core.nth.call(null, vec__19558, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__19559 = i + 2;
        i = G__19559;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__19560 = i + 2;
        i = G__19560;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__19561 = i + 2;
        i = G__19561;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__19562 = i + 2;
        i = G__19562;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__19563 = i + 2;
        i = G__19563;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_19564 = 0;
  while (true) {
    if (i_19564 < l) {
      narr[i_19564] = arr[i_19564];
      var G__19565 = i_19564 + 1;
      i_19564 = G__19565;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19567 = cljs.core.seq.call(null, coll);
  var chunk__19568 = null;
  var count__19569 = 0;
  var i__19570 = 0;
  while (true) {
    if (i__19570 < count__19569) {
      var vec__19571 = cljs.core._nth.call(null, chunk__19568, i__19570);
      var k = cljs.core.nth.call(null, vec__19571, 0, null);
      var v = cljs.core.nth.call(null, vec__19571, 1, null);
      f.call(null, v, k);
      var G__19576 = seq__19567;
      var G__19577 = chunk__19568;
      var G__19578 = count__19569;
      var G__19579 = i__19570 + 1;
      seq__19567 = G__19576;
      chunk__19568 = G__19577;
      count__19569 = G__19578;
      i__19570 = G__19579;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19567);
      if (temp__4126__auto__) {
        var seq__19567__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19567__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19567__$1);
          var G__19580 = cljs.core.chunk_rest.call(null, seq__19567__$1);
          var G__19581 = c__4307__auto__;
          var G__19582 = cljs.core.count.call(null, c__4307__auto__);
          var G__19583 = 0;
          seq__19567 = G__19580;
          chunk__19568 = G__19581;
          count__19569 = G__19582;
          i__19570 = G__19583;
          continue;
        } else {
          var vec__19572 = cljs.core.first.call(null, seq__19567__$1);
          var k = cljs.core.nth.call(null, vec__19572, 0, null);
          var v = cljs.core.nth.call(null, vec__19572, 1, null);
          f.call(null, v, k);
          var G__19584 = cljs.core.next.call(null, seq__19567__$1);
          var G__19585 = null;
          var G__19586 = 0;
          var G__19587 = 0;
          seq__19567 = G__19584;
          chunk__19568 = G__19585;
          count__19569 = G__19586;
          i__19570 = G__19587;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19588 = i + 2;
        var G__19589 = init__$2;
        i = G__19588;
        init__$1 = G__19589;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj19574 = {};
    return obj19574;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__19590 = s + 2;
            var G__19591 = d;
            s = G__19590;
            d = G__19591;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__19592 = s + 2;
            var G__19593 = d + 2;
            s = G__19592;
            d = G__19593;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__19575 = cljs.core.aclone.call(null, self__.arr);
        G__19575[idx + 1] = v;
        return G__19575;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19594 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19595 = cljs.core.next.call(null, es);
          ret = G__19594;
          es = G__19595;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__19596 = null;
  var G__19596__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19596__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19596 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19596__2.call(this, self__, k);
      case 3:
        return G__19596__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19596.cljs$core$IFn$_invoke$arity$2 = G__19596__2;
  G__19596.cljs$core$IFn$_invoke$arity$3 = G__19596__3;
  return G__19596;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args19566) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19566)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__19597 = i + 2;
        var G__19598 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__19597;
        ret = G__19598;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__19599_19601 = self__.arr;
      G__19599_19601.pop();
      G__19599_19601.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__19600 = o;
      if (G__19600) {
        var bit__4201__auto__ = G__19600.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4201__auto__ || G__19600.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19600.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19600);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19600);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19602 = cljs.core.next.call(null, es);
          var G__19603 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__19602;
          tcoll__$2 = G__19603;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__19604 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__19605 = i + 2;
      out = G__19604;
      i = G__19605;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__19608 = cljs.core.aclone.call(null, arr);
    G__19608[i] = a;
    return G__19608;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__19609 = cljs.core.aclone.call(null, arr);
    G__19609[i] = a;
    G__19609[j] = b;
    return G__19609;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19610 = i + 2;
        var G__19611 = init__$2;
        i = G__19610;
        init__$1 = G__19611;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_19612 = 0;
        var j_19613 = 0;
        while (true) {
          if (i_19612 < 32) {
            if ((self__.bitmap >>> i_19612 & 1) === 0) {
              var G__19614 = i_19612 + 1;
              var G__19615 = j_19613;
              i_19612 = G__19614;
              j_19613 = G__19615;
              continue;
            } else {
              nodes[i_19612] = !(self__.arr[j_19613] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_19613]), self__.arr[j_19613], self__.arr[j_19613 + 1], added_leaf_QMARK_) : self__.arr[j_19613 + 1];
              var G__19616 = i_19612 + 1;
              var G__19617 = j_19613 + 2;
              i_19612 = G__19616;
              j_19613 = G__19617;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_19618 = 0;
      var j_19619 = 0;
      while (true) {
        if (i_19618 < 32) {
          if ((self__.bitmap >>> i_19618 & 1) === 0) {
            var G__19620 = i_19618 + 1;
            var G__19621 = j_19619;
            i_19618 = G__19620;
            j_19619 = G__19621;
            continue;
          } else {
            nodes[i_19618] = !(self__.arr[j_19619] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_19619]), self__.arr[j_19619], self__.arr[j_19619 + 1], added_leaf_QMARK_) : self__.arr[j_19619 + 1];
            var G__19622 = i_19618 + 1;
            var G__19623 = j_19619 + 2;
            i_19618 = G__19622;
            j_19619 = G__19623;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__19624 = i + 1;
        var G__19625 = j + 2;
        var G__19626 = bitmap | 1 << i;
        i = G__19624;
        j = G__19625;
        bitmap = G__19626;
        continue;
      } else {
        var G__19627 = i + 1;
        var G__19628 = j;
        var G__19629 = bitmap;
        i = G__19627;
        j = G__19628;
        bitmap = G__19629;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__19630 = i + 1;
          var G__19631 = init__$2;
          i = G__19630;
          init__$1 = G__19631;
          continue;
        }
      } else {
        var G__19632 = i + 1;
        var G__19633 = init__$1;
        i = G__19632;
        init__$1 = G__19633;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__19634 = i + 2;
        i = G__19634;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__19635 = j + 2;
                j = G__19635;
                continue;
              }
            } else {
              var G__19636 = j + 2;
              j = G__19636;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__19637 = j + 1;
              j = G__19637;
              continue;
            }
          } else {
            var G__19638 = j + 1;
            j = G__19638;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19640 = cljs.core.seq.call(null, coll);
  var chunk__19641 = null;
  var count__19642 = 0;
  var i__19643 = 0;
  while (true) {
    if (i__19643 < count__19642) {
      var vec__19644 = cljs.core._nth.call(null, chunk__19641, i__19643);
      var k = cljs.core.nth.call(null, vec__19644, 0, null);
      var v = cljs.core.nth.call(null, vec__19644, 1, null);
      f.call(null, v, k);
      var G__19648 = seq__19640;
      var G__19649 = chunk__19641;
      var G__19650 = count__19642;
      var G__19651 = i__19643 + 1;
      seq__19640 = G__19648;
      chunk__19641 = G__19649;
      count__19642 = G__19650;
      i__19643 = G__19651;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19640);
      if (temp__4126__auto__) {
        var seq__19640__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19640__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19640__$1);
          var G__19652 = cljs.core.chunk_rest.call(null, seq__19640__$1);
          var G__19653 = c__4307__auto__;
          var G__19654 = cljs.core.count.call(null, c__4307__auto__);
          var G__19655 = 0;
          seq__19640 = G__19652;
          chunk__19641 = G__19653;
          count__19642 = G__19654;
          i__19643 = G__19655;
          continue;
        } else {
          var vec__19645 = cljs.core.first.call(null, seq__19640__$1);
          var k = cljs.core.nth.call(null, vec__19645, 0, null);
          var v = cljs.core.nth.call(null, vec__19645, 1, null);
          f.call(null, v, k);
          var G__19656 = cljs.core.next.call(null, seq__19640__$1);
          var G__19657 = null;
          var G__19658 = 0;
          var G__19659 = 0;
          seq__19640 = G__19656;
          chunk__19641 = G__19657;
          count__19642 = G__19658;
          i__19643 = G__19659;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj19647 = {};
    return obj19647;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19660 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19661 = cljs.core.next.call(null, es);
          ret = G__19660;
          es = G__19661;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__19662 = null;
  var G__19662__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19662__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19662 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19662__2.call(this, self__, k);
      case 3:
        return G__19662__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19662.cljs$core$IFn$_invoke$arity$2 = G__19662__2;
  G__19662.cljs$core$IFn$_invoke$arity$3 = G__19662__3;
  return G__19662;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args19639) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19639)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__19663 = i + 1;
      var G__19664 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__19663;
      out = G__19664;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__19665 = o;
      if (G__19665) {
        var bit__4201__auto__ = G__19665.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4201__auto__ || G__19665.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19665.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19665);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__19665);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19666 = cljs.core.next.call(null, es);
          var G__19667 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__19666;
          tcoll__$1 = G__19667;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__19668 = ascending_QMARK_ ? t.left : t.right;
      var G__19669 = cljs.core.conj.call(null, stack__$1, t);
      t = G__19668;
      stack__$1 = G__19669;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__19671 = null;
  var G__19671__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19671__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19671 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19671__2.call(this, self__, k);
      case 3:
        return G__19671__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19671.cljs$core$IFn$_invoke$arity$2 = G__19671__2;
  G__19671.cljs$core$IFn$_invoke$arity$3 = G__19671__3;
  return G__19671;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args19670) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19670)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__19673 = null;
  var G__19673__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19673__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19673 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19673__2.call(this, self__, k);
      case 3:
        return G__19673__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19673.cljs$core$IFn$_invoke$arity$2 = G__19673__2;
  G__19673.cljs$core$IFn$_invoke$arity$3 = G__19673__3;
  return G__19673;
}();
cljs.core.RedNode.prototype.apply = function(self__, args19672) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19672)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19675 = cljs.core.seq.call(null, coll);
  var chunk__19676 = null;
  var count__19677 = 0;
  var i__19678 = 0;
  while (true) {
    if (i__19678 < count__19677) {
      var vec__19679 = cljs.core._nth.call(null, chunk__19676, i__19678);
      var k = cljs.core.nth.call(null, vec__19679, 0, null);
      var v = cljs.core.nth.call(null, vec__19679, 1, null);
      f.call(null, v, k);
      var G__19681 = seq__19675;
      var G__19682 = chunk__19676;
      var G__19683 = count__19677;
      var G__19684 = i__19678 + 1;
      seq__19675 = G__19681;
      chunk__19676 = G__19682;
      count__19677 = G__19683;
      i__19678 = G__19684;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19675);
      if (temp__4126__auto__) {
        var seq__19675__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19675__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19675__$1);
          var G__19685 = cljs.core.chunk_rest.call(null, seq__19675__$1);
          var G__19686 = c__4307__auto__;
          var G__19687 = cljs.core.count.call(null, c__4307__auto__);
          var G__19688 = 0;
          seq__19675 = G__19685;
          chunk__19676 = G__19686;
          count__19677 = G__19687;
          i__19678 = G__19688;
          continue;
        } else {
          var vec__19680 = cljs.core.first.call(null, seq__19675__$1);
          var k = cljs.core.nth.call(null, vec__19680, 0, null);
          var v = cljs.core.nth.call(null, vec__19680, 1, null);
          f.call(null, v, k);
          var G__19689 = cljs.core.next.call(null, seq__19675__$1);
          var G__19690 = null;
          var G__19691 = 0;
          var G__19692 = 0;
          seq__19675 = G__19689;
          chunk__19676 = G__19690;
          count__19677 = G__19691;
          i__19678 = G__19692;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__19693 = t.left;
          t = G__19693;
          continue;
        } else {
          var G__19694 = t.right;
          t = G__19694;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__19695 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__19696 = cljs.core.next.call(null, es);
          ret = G__19695;
          es = G__19696;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__19697 = null;
  var G__19697__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19697__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19697 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19697__2.call(this, self__, k);
      case 3:
        return G__19697__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19697.cljs$core$IFn$_invoke$arity$2 = G__19697__2;
  G__19697.cljs$core$IFn$_invoke$arity$3 = G__19697__3;
  return G__19697;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args19674) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19674)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__19698 = cljs.core.conj.call(null, stack, t);
              var G__19699 = t.left;
              stack = G__19698;
              t = G__19699;
              continue;
            } else {
              var G__19700 = stack;
              var G__19701 = t.right;
              stack = G__19700;
              t = G__19701;
              continue;
            }
          } else {
            if (c > 0) {
              var G__19702 = cljs.core.conj.call(null, stack, t);
              var G__19703 = t.right;
              stack = G__19702;
              t = G__19703;
              continue;
            } else {
              var G__19704 = stack;
              var G__19705 = t.left;
              stack = G__19704;
              t = G__19705;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__19706 = cljs.core.nnext.call(null, in$);
        var G__19707 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19706;
        out = G__19707;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__19708) {
    var keyvals = cljs.core.seq(arglist__19708);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__19709) {
    var keyvals = cljs.core.seq(arglist__19709);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj19713 = {};
      return obj19713;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__19714 = cljs.core.nnext.call(null, kvs);
        kvs = G__19714;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__19715) {
    var keyvals = cljs.core.seq(arglist__19715);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__19716 = cljs.core.nnext.call(null, in$);
        var G__19717 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19716;
        out = G__19717;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__19718) {
    var keyvals = cljs.core.seq(arglist__19718);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__19719 = cljs.core.nnext.call(null, in$);
        var G__19720 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__19719;
        out = G__19720;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__19721) {
    var comparator = cljs.core.first(arglist__19721);
    var keyvals = cljs.core.rest(arglist__19721);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19722 = self__.mseq;
    if (G__19722) {
      var bit__4201__auto__ = G__19722.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__19722.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19722.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19722);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19722);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19723 = self__.mseq;
    if (G__19723) {
      var bit__4201__auto__ = G__19723.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__19723.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19723.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19723);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19723);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19724 = self__.mseq;
    if (G__19724) {
      var bit__4201__auto__ = G__19724.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__19724.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19724.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19724);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19724);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__19725 = self__.mseq;
    if (G__19725) {
      var bit__4201__auto__ = G__19725.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__19725.cljs$core$INext$) {
        return true;
      } else {
        if (!G__19725.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19725);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__19725);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__19726_SHARP_, p2__19727_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3551__auto__ = p1__19726_SHARP_;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__19727_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__19728) {
    var maps = cljs.core.seq(arglist__19728);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3551__auto__ = m1;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__19729) {
    var f = cljs.core.first(arglist__19729);
    var maps = cljs.core.rest(arglist__19729);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__19730 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__19731 = cljs.core.next.call(null, keys);
      ret = G__19730;
      keys = G__19731;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19734 = cljs.core.seq.call(null, coll);
  var chunk__19735 = null;
  var count__19736 = 0;
  var i__19737 = 0;
  while (true) {
    if (i__19737 < count__19736) {
      var vec__19738 = cljs.core._nth.call(null, chunk__19735, i__19737);
      var k = cljs.core.nth.call(null, vec__19738, 0, null);
      var v = cljs.core.nth.call(null, vec__19738, 1, null);
      f.call(null, v, k);
      var G__19740 = seq__19734;
      var G__19741 = chunk__19735;
      var G__19742 = count__19736;
      var G__19743 = i__19737 + 1;
      seq__19734 = G__19740;
      chunk__19735 = G__19741;
      count__19736 = G__19742;
      i__19737 = G__19743;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19734);
      if (temp__4126__auto__) {
        var seq__19734__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19734__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19734__$1);
          var G__19744 = cljs.core.chunk_rest.call(null, seq__19734__$1);
          var G__19745 = c__4307__auto__;
          var G__19746 = cljs.core.count.call(null, c__4307__auto__);
          var G__19747 = 0;
          seq__19734 = G__19744;
          chunk__19735 = G__19745;
          count__19736 = G__19746;
          i__19737 = G__19747;
          continue;
        } else {
          var vec__19739 = cljs.core.first.call(null, seq__19734__$1);
          var k = cljs.core.nth.call(null, vec__19739, 0, null);
          var v = cljs.core.nth.call(null, vec__19739, 1, null);
          f.call(null, v, k);
          var G__19748 = cljs.core.next.call(null, seq__19734__$1);
          var G__19749 = null;
          var G__19750 = 0;
          var G__19751 = 0;
          seq__19734 = G__19748;
          chunk__19735 = G__19749;
          count__19736 = G__19750;
          i__19737 = G__19751;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__19732_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__19732_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__19752 = null;
  var G__19752__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19752__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19752 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19752__2.call(this, self__, k);
      case 3:
        return G__19752__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19752.cljs$core$IFn$_invoke$arity$2 = G__19752__2;
  G__19752.cljs$core$IFn$_invoke$arity$3 = G__19752__3;
  return G__19752;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args19733) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19733)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__19753 = i + 1;
        var G__19754 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__19753;
        out = G__19754;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__19755 = i + 1;
        var G__19756 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__19755;
        out = G__19756;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__19758 = null;
  var G__19758__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__19758__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__19758 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19758__2.call(this, self__, k);
      case 3:
        return G__19758__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19758.cljs$core$IFn$_invoke$arity$2 = G__19758__2;
  G__19758.cljs$core$IFn$_invoke$arity$3 = G__19758__3;
  return G__19758;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args19757) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19757)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19761 = cljs.core.seq.call(null, coll);
  var chunk__19762 = null;
  var count__19763 = 0;
  var i__19764 = 0;
  while (true) {
    if (i__19764 < count__19763) {
      var vec__19765 = cljs.core._nth.call(null, chunk__19762, i__19764);
      var k = cljs.core.nth.call(null, vec__19765, 0, null);
      var v = cljs.core.nth.call(null, vec__19765, 1, null);
      f.call(null, v, k);
      var G__19767 = seq__19761;
      var G__19768 = chunk__19762;
      var G__19769 = count__19763;
      var G__19770 = i__19764 + 1;
      seq__19761 = G__19767;
      chunk__19762 = G__19768;
      count__19763 = G__19769;
      i__19764 = G__19770;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19761);
      if (temp__4126__auto__) {
        var seq__19761__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19761__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19761__$1);
          var G__19771 = cljs.core.chunk_rest.call(null, seq__19761__$1);
          var G__19772 = c__4307__auto__;
          var G__19773 = cljs.core.count.call(null, c__4307__auto__);
          var G__19774 = 0;
          seq__19761 = G__19771;
          chunk__19762 = G__19772;
          count__19763 = G__19773;
          i__19764 = G__19774;
          continue;
        } else {
          var vec__19766 = cljs.core.first.call(null, seq__19761__$1);
          var k = cljs.core.nth.call(null, vec__19766, 0, null);
          var v = cljs.core.nth.call(null, vec__19766, 1, null);
          f.call(null, v, k);
          var G__19775 = cljs.core.next.call(null, seq__19761__$1);
          var G__19776 = null;
          var G__19777 = 0;
          var G__19778 = 0;
          seq__19761 = G__19775;
          chunk__19762 = G__19776;
          count__19763 = G__19777;
          i__19764 = G__19778;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__19759_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__19759_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__19779 = null;
  var G__19779__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19779__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19779 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19779__2.call(this, self__, k);
      case 3:
        return G__19779__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19779.cljs$core$IFn$_invoke$arity$2 = G__19779__2;
  G__19779.cljs$core$IFn$_invoke$arity$3 = G__19779__3;
  return G__19779;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args19760) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19760)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4401__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4401__auto__.length) {
        var G__19780 = i + 1;
        var G__19781 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__19780;
        res = G__19781;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__19782 = cljs.core._next.call(null, in$__$1);
          var G__19783 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__19782;
          out = G__19783;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__19784__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__19784 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19784__delegate.call(this, keys);
    };
    G__19784.cljs$lang$maxFixedArity = 0;
    G__19784.cljs$lang$applyTo = function(arglist__19785) {
      var keys = cljs.core.seq(arglist__19785);
      return G__19784__delegate(keys);
    };
    G__19784.cljs$core$IFn$_invoke$arity$variadic = G__19784__delegate;
    return G__19784;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__19786) {
    var keys = cljs.core.seq(arglist__19786);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__19787) {
    var comparator = cljs.core.first(arglist__19787);
    var keys = cljs.core.rest(arglist__19787);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__19788_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__19788_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__19788_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__19789_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__19789_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__19789_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__19796, seen__$1) {
        while (true) {
          var vec__19797 = p__19796;
          var f = cljs.core.nth.call(null, vec__19797, 0, null);
          var xs__$1 = vec__19797;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__19798 = cljs.core.rest.call(null, s);
              var G__19799 = seen__$1;
              p__19796 = G__19798;
              seen__$1 = G__19799;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__19800 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__19801 = cljs.core.next.call(null, s__$1);
      ret = G__19800;
      s__$1 = G__19801;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__19803 = x;
    if (G__19803) {
      var bit__4194__auto__ = G__19803.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4194__auto__ || G__19803.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__19804 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__19805 = cljs.core.next.call(null, ks);
      var G__19806 = cljs.core.next.call(null, vs);
      map = G__19804;
      ks = G__19805;
      vs = G__19806;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__19809__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__19807_SHARP_, p2__19808_SHARP_) {
        return max_key.call(null, k, p1__19807_SHARP_, p2__19808_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__19809 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19809__delegate.call(this, k, x, y, more);
    };
    G__19809.cljs$lang$maxFixedArity = 3;
    G__19809.cljs$lang$applyTo = function(arglist__19810) {
      var k = cljs.core.first(arglist__19810);
      arglist__19810 = cljs.core.next(arglist__19810);
      var x = cljs.core.first(arglist__19810);
      arglist__19810 = cljs.core.next(arglist__19810);
      var y = cljs.core.first(arglist__19810);
      var more = cljs.core.rest(arglist__19810);
      return G__19809__delegate(k, x, y, more);
    };
    G__19809.cljs$core$IFn$_invoke$arity$variadic = G__19809__delegate;
    return G__19809;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__19813__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__19811_SHARP_, p2__19812_SHARP_) {
        return min_key.call(null, k, p1__19811_SHARP_, p2__19812_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__19813 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19813__delegate.call(this, k, x, y, more);
    };
    G__19813.cljs$lang$maxFixedArity = 3;
    G__19813.cljs$lang$applyTo = function(arglist__19814) {
      var k = cljs.core.first(arglist__19814);
      arglist__19814 = cljs.core.next(arglist__19814);
      var x = cljs.core.first(arglist__19814);
      arglist__19814 = cljs.core.next(arglist__19814);
      var y = cljs.core.first(arglist__19814);
      var more = cljs.core.rest(arglist__19814);
      return G__19813__delegate(k, x, y, more);
    };
    G__19813.cljs$core$IFn$_invoke$arity$variadic = G__19813__delegate;
    return G__19813;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__19815 = null;
          var G__19815__0 = function() {
            return f1.call(null);
          };
          var G__19815__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__19815__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__19815 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19815__0.call(this);
              case 1:
                return G__19815__1.call(this, result);
              case 2:
                return G__19815__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19815.cljs$core$IFn$_invoke$arity$0 = G__19815__0;
          G__19815.cljs$core$IFn$_invoke$arity$1 = G__19815__1;
          G__19815.cljs$core$IFn$_invoke$arity$2 = G__19815__2;
          return G__19815;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__19816 = null;
        var G__19816__0 = function() {
          return f1.call(null);
        };
        var G__19816__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19816__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__19816 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19816__0.call(this);
            case 1:
              return G__19816__1.call(this, result);
            case 2:
              return G__19816__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19816.cljs$core$IFn$_invoke$arity$0 = G__19816__0;
        G__19816.cljs$core$IFn$_invoke$arity$1 = G__19816__1;
        G__19816.cljs$core$IFn$_invoke$arity$2 = G__19816__2;
        return G__19816;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__19819 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__19819, 0, null);
        var s = vec__19819;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__19820 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__19820, 0, null);
      var s = vec__19820;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__19823 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__19823, 0, null);
        var s = vec__19823;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__19824 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__19824, 0, null);
      var s = vec__19824;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__19825 = null;
          var G__19825__0 = function() {
            return f1.call(null);
          };
          var G__19825__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19825__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__19825 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19825__0.call(this);
              case 1:
                return G__19825__1.call(this, result);
              case 2:
                return G__19825__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19825.cljs$core$IFn$_invoke$arity$0 = G__19825__0;
          G__19825.cljs$core$IFn$_invoke$arity$1 = G__19825__1;
          G__19825.cljs$core$IFn$_invoke$arity$2 = G__19825__2;
          return G__19825;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__19827 = null;
          var G__19827__0 = function() {
            return f1.call(null);
          };
          var G__19827__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__19827__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__19827 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19827__0.call(this);
              case 1:
                return G__19827__1.call(this, result);
              case 2:
                return G__19827__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19827.cljs$core$IFn$_invoke$arity$0 = G__19827__0;
          G__19827.cljs$core$IFn$_invoke$arity$1 = G__19827__1;
          G__19827.cljs$core$IFn$_invoke$arity$2 = G__19827__2;
          return G__19827;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__19826_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__19826_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__19838 = null;
      var G__19838__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__19838__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__19838__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__19838__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__19838__4 = function() {
        var G__19839__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__19839 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19839__delegate.call(this, x, y, z, args);
        };
        G__19839.cljs$lang$maxFixedArity = 3;
        G__19839.cljs$lang$applyTo = function(arglist__19840) {
          var x = cljs.core.first(arglist__19840);
          arglist__19840 = cljs.core.next(arglist__19840);
          var y = cljs.core.first(arglist__19840);
          arglist__19840 = cljs.core.next(arglist__19840);
          var z = cljs.core.first(arglist__19840);
          var args = cljs.core.rest(arglist__19840);
          return G__19839__delegate(x, y, z, args);
        };
        G__19839.cljs$core$IFn$_invoke$arity$variadic = G__19839__delegate;
        return G__19839;
      }();
      G__19838 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19838__0.call(this);
          case 1:
            return G__19838__1.call(this, x);
          case 2:
            return G__19838__2.call(this, x, y);
          case 3:
            return G__19838__3.call(this, x, y, z);
          default:
            return G__19838__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19838.cljs$lang$maxFixedArity = 3;
      G__19838.cljs$lang$applyTo = G__19838__4.cljs$lang$applyTo;
      G__19838.cljs$core$IFn$_invoke$arity$0 = G__19838__0;
      G__19838.cljs$core$IFn$_invoke$arity$1 = G__19838__1;
      G__19838.cljs$core$IFn$_invoke$arity$2 = G__19838__2;
      G__19838.cljs$core$IFn$_invoke$arity$3 = G__19838__3;
      G__19838.cljs$core$IFn$_invoke$arity$variadic = G__19838__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19838;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__19841 = null;
      var G__19841__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__19841__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__19841__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__19841__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__19841__4 = function() {
        var G__19842__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__19842 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19842__delegate.call(this, x, y, z, args);
        };
        G__19842.cljs$lang$maxFixedArity = 3;
        G__19842.cljs$lang$applyTo = function(arglist__19843) {
          var x = cljs.core.first(arglist__19843);
          arglist__19843 = cljs.core.next(arglist__19843);
          var y = cljs.core.first(arglist__19843);
          arglist__19843 = cljs.core.next(arglist__19843);
          var z = cljs.core.first(arglist__19843);
          var args = cljs.core.rest(arglist__19843);
          return G__19842__delegate(x, y, z, args);
        };
        G__19842.cljs$core$IFn$_invoke$arity$variadic = G__19842__delegate;
        return G__19842;
      }();
      G__19841 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19841__0.call(this);
          case 1:
            return G__19841__1.call(this, x);
          case 2:
            return G__19841__2.call(this, x, y);
          case 3:
            return G__19841__3.call(this, x, y, z);
          default:
            return G__19841__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19841.cljs$lang$maxFixedArity = 3;
      G__19841.cljs$lang$applyTo = G__19841__4.cljs$lang$applyTo;
      G__19841.cljs$core$IFn$_invoke$arity$0 = G__19841__0;
      G__19841.cljs$core$IFn$_invoke$arity$1 = G__19841__1;
      G__19841.cljs$core$IFn$_invoke$arity$2 = G__19841__2;
      G__19841.cljs$core$IFn$_invoke$arity$3 = G__19841__3;
      G__19841.cljs$core$IFn$_invoke$arity$variadic = G__19841__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19841;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__19844 = null;
      var G__19844__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__19844__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__19844__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__19844__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__19844__4 = function() {
        var G__19845__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__19845 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19845__delegate.call(this, x, y, z, args);
        };
        G__19845.cljs$lang$maxFixedArity = 3;
        G__19845.cljs$lang$applyTo = function(arglist__19846) {
          var x = cljs.core.first(arglist__19846);
          arglist__19846 = cljs.core.next(arglist__19846);
          var y = cljs.core.first(arglist__19846);
          arglist__19846 = cljs.core.next(arglist__19846);
          var z = cljs.core.first(arglist__19846);
          var args = cljs.core.rest(arglist__19846);
          return G__19845__delegate(x, y, z, args);
        };
        G__19845.cljs$core$IFn$_invoke$arity$variadic = G__19845__delegate;
        return G__19845;
      }();
      G__19844 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19844__0.call(this);
          case 1:
            return G__19844__1.call(this, x);
          case 2:
            return G__19844__2.call(this, x, y);
          case 3:
            return G__19844__3.call(this, x, y, z);
          default:
            return G__19844__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19844.cljs$lang$maxFixedArity = 3;
      G__19844.cljs$lang$applyTo = G__19844__4.cljs$lang$applyTo;
      G__19844.cljs$core$IFn$_invoke$arity$0 = G__19844__0;
      G__19844.cljs$core$IFn$_invoke$arity$1 = G__19844__1;
      G__19844.cljs$core$IFn$_invoke$arity$2 = G__19844__2;
      G__19844.cljs$core$IFn$_invoke$arity$3 = G__19844__3;
      G__19844.cljs$core$IFn$_invoke$arity$variadic = G__19844__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19844;
    }();
  };
  var juxt__4 = function() {
    var G__19847__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__19848 = null;
          var G__19848__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19828_SHARP_, p2__19829_SHARP_) {
                return cljs.core.conj.call(null, p1__19828_SHARP_, p2__19829_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19848__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19830_SHARP_, p2__19831_SHARP_) {
                return cljs.core.conj.call(null, p1__19830_SHARP_, p2__19831_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19848__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19832_SHARP_, p2__19833_SHARP_) {
                return cljs.core.conj.call(null, p1__19832_SHARP_, p2__19833_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19848__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__19834_SHARP_, p2__19835_SHARP_) {
                return cljs.core.conj.call(null, p1__19834_SHARP_, p2__19835_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__19848__4 = function() {
            var G__19849__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__19836_SHARP_, p2__19837_SHARP_) {
                  return cljs.core.conj.call(null, p1__19836_SHARP_, cljs.core.apply.call(null, p2__19837_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__19849 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19849__delegate.call(this, x, y, z, args);
            };
            G__19849.cljs$lang$maxFixedArity = 3;
            G__19849.cljs$lang$applyTo = function(arglist__19850) {
              var x = cljs.core.first(arglist__19850);
              arglist__19850 = cljs.core.next(arglist__19850);
              var y = cljs.core.first(arglist__19850);
              arglist__19850 = cljs.core.next(arglist__19850);
              var z = cljs.core.first(arglist__19850);
              var args = cljs.core.rest(arglist__19850);
              return G__19849__delegate(x, y, z, args);
            };
            G__19849.cljs$core$IFn$_invoke$arity$variadic = G__19849__delegate;
            return G__19849;
          }();
          G__19848 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__19848__0.call(this);
              case 1:
                return G__19848__1.call(this, x);
              case 2:
                return G__19848__2.call(this, x, y);
              case 3:
                return G__19848__3.call(this, x, y, z);
              default:
                return G__19848__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19848.cljs$lang$maxFixedArity = 3;
          G__19848.cljs$lang$applyTo = G__19848__4.cljs$lang$applyTo;
          G__19848.cljs$core$IFn$_invoke$arity$0 = G__19848__0;
          G__19848.cljs$core$IFn$_invoke$arity$1 = G__19848__1;
          G__19848.cljs$core$IFn$_invoke$arity$2 = G__19848__2;
          G__19848.cljs$core$IFn$_invoke$arity$3 = G__19848__3;
          G__19848.cljs$core$IFn$_invoke$arity$variadic = G__19848__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__19848;
        }();
      }(fs__$1);
    };
    var G__19847 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19847__delegate.call(this, f, g, h, fs);
    };
    G__19847.cljs$lang$maxFixedArity = 3;
    G__19847.cljs$lang$applyTo = function(arglist__19851) {
      var f = cljs.core.first(arglist__19851);
      arglist__19851 = cljs.core.next(arglist__19851);
      var g = cljs.core.first(arglist__19851);
      arglist__19851 = cljs.core.next(arglist__19851);
      var h = cljs.core.first(arglist__19851);
      var fs = cljs.core.rest(arglist__19851);
      return G__19847__delegate(f, g, h, fs);
    };
    G__19847.cljs$core$IFn$_invoke$arity$variadic = G__19847__delegate;
    return G__19847;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__19852 = cljs.core.next.call(null, coll);
        coll = G__19852;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__19853 = n - 1;
        var G__19854 = cljs.core.next.call(null, coll);
        n = G__19853;
        coll = G__19854;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__19856 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__19856, 0, null);
  var flags = cljs.core.nth.call(null, vec__19856, 1, null);
  var pattern = cljs.core.nth.call(null, vec__19856, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_19858 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_19859__$1 = cljs.core.next.call(null, coll);
      var n_19860 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_19859__$1 && (n_19860 == null || !(n_19860 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_19859__$1), writer, opts);
          var G__19861 = cljs.core.next.call(null, coll_19859__$1);
          var G__19862 = n_19860 - 1;
          coll_19859__$1 = G__19861;
          n_19860 = G__19862;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_19859__$1) && n_19860 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_19858;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__19867 = cljs.core.seq.call(null, ss);
    var chunk__19868 = null;
    var count__19869 = 0;
    var i__19870 = 0;
    while (true) {
      if (i__19870 < count__19869) {
        var s = cljs.core._nth.call(null, chunk__19868, i__19870);
        cljs.core._write.call(null, writer, s);
        var G__19871 = seq__19867;
        var G__19872 = chunk__19868;
        var G__19873 = count__19869;
        var G__19874 = i__19870 + 1;
        seq__19867 = G__19871;
        chunk__19868 = G__19872;
        count__19869 = G__19873;
        i__19870 = G__19874;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__19867);
        if (temp__4126__auto__) {
          var seq__19867__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19867__$1)) {
            var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19867__$1);
            var G__19875 = cljs.core.chunk_rest.call(null, seq__19867__$1);
            var G__19876 = c__4307__auto__;
            var G__19877 = cljs.core.count.call(null, c__4307__auto__);
            var G__19878 = 0;
            seq__19867 = G__19875;
            chunk__19868 = G__19876;
            count__19869 = G__19877;
            i__19870 = G__19878;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__19867__$1);
            cljs.core._write.call(null, writer, s);
            var G__19879 = cljs.core.next.call(null, seq__19867__$1);
            var G__19880 = null;
            var G__19881 = 0;
            var G__19882 = 0;
            seq__19867 = G__19879;
            chunk__19868 = G__19880;
            count__19869 = G__19881;
            i__19870 = G__19882;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__19883) {
    var writer = cljs.core.first(arglist__19883);
    var ss = cljs.core.rest(arglist__19883);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj19885 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj19885;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3539__auto__)) {
          var and__3539__auto____$1 = function() {
            var G__19891 = obj;
            if (G__19891) {
              var bit__4201__auto__ = G__19891.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4201__auto__ || G__19891.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__19891.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19891);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19891);
            }
          }();
          if (and__3539__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__19892 = obj;
            if (G__19892) {
              var bit__4194__auto__ = G__19892.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4194__auto__ || G__19892.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__19894 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__19894;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__19893 = obj;
                            if (G__19893) {
                              var bit__4201__auto__ = G__19893.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4201__auto__ || G__19893.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__19893.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__19893);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__19893);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__19899 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__19900 = null;
  var count__19901 = 0;
  var i__19902 = 0;
  while (true) {
    if (i__19902 < count__19901) {
      var obj = cljs.core._nth.call(null, chunk__19900, i__19902);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__19903 = seq__19899;
      var G__19904 = chunk__19900;
      var G__19905 = count__19901;
      var G__19906 = i__19902 + 1;
      seq__19899 = G__19903;
      chunk__19900 = G__19904;
      count__19901 = G__19905;
      i__19902 = G__19906;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19899);
      if (temp__4126__auto__) {
        var seq__19899__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19899__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__19899__$1);
          var G__19907 = cljs.core.chunk_rest.call(null, seq__19899__$1);
          var G__19908 = c__4307__auto__;
          var G__19909 = cljs.core.count.call(null, c__4307__auto__);
          var G__19910 = 0;
          seq__19899 = G__19907;
          chunk__19900 = G__19908;
          count__19901 = G__19909;
          i__19902 = G__19910;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__19899__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__19911 = cljs.core.next.call(null, seq__19899__$1);
          var G__19912 = null;
          var G__19913 = 0;
          var G__19914 = 0;
          seq__19899 = G__19911;
          chunk__19900 = G__19912;
          count__19901 = G__19913;
          i__19902 = G__19914;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__19915) {
    var objs = cljs.core.seq(arglist__19915);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__19916) {
    var objs = cljs.core.seq(arglist__19916);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__19917) {
    var objs = cljs.core.seq(arglist__19917);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__19918) {
    var objs = cljs.core.seq(arglist__19918);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__19919) {
    var objs = cljs.core.seq(arglist__19919);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__19920) {
    var objs = cljs.core.seq(arglist__19920);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__19921) {
    var objs = cljs.core.seq(arglist__19921);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__19922) {
    var objs = cljs.core.seq(arglist__19922);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__19923) {
    var iref = cljs.core.first(arglist__19923);
    arglist__19923 = cljs.core.next(arglist__19923);
    var f = cljs.core.first(arglist__19923);
    var args = cljs.core.rest(arglist__19923);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__19924_SHARP_, p2__19925_SHARP_) {
    var ret = f1.call(null, p1__19924_SHARP_, p2__19925_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19926 = null;
        var G__19926__0 = function() {
          return f1.call(null);
        };
        var G__19926__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19926__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__19926 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19926__0.call(this);
            case 1:
              return G__19926__1.call(this, result);
            case 2:
              return G__19926__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19926.cljs$core$IFn$_invoke$arity$0 = G__19926__0;
        G__19926.cljs$core$IFn$_invoke$arity$1 = G__19926__1;
        G__19926.cljs$core$IFn$_invoke$arity$2 = G__19926__2;
        return G__19926;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__19927 = null;
          var G__19927__0 = function() {
            return f1.call(null);
          };
          var G__19927__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19927__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__19927 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19927__0.call(this);
              case 1:
                return G__19927__1.call(this, result);
              case 2:
                return G__19927__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19927.cljs$core$IFn$_invoke$arity$0 = G__19927__0;
          G__19927.cljs$core$IFn$_invoke$arity$1 = G__19927__1;
          G__19927.cljs$core$IFn$_invoke$arity$2 = G__19927__2;
          return G__19927;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__19929_SHARP_, p2__19928_SHARP_) {
    return proc.call(null, p2__19928_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj19931 = {};
  return obj19931;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__19933 = k;
    if (G__19933) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__19933.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__19933.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19933);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19933);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__19947 = x;
      if (G__19947) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__19947.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__19947.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19947);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__19947);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj19949 = {};
              return obj19949;
            }();
            var seq__19950_19960 = cljs.core.seq.call(null, x);
            var chunk__19951_19961 = null;
            var count__19952_19962 = 0;
            var i__19953_19963 = 0;
            while (true) {
              if (i__19953_19963 < count__19952_19962) {
                var vec__19954_19964 = cljs.core._nth.call(null, chunk__19951_19961, i__19953_19963);
                var k_19965 = cljs.core.nth.call(null, vec__19954_19964, 0, null);
                var v_19966 = cljs.core.nth.call(null, vec__19954_19964, 1, null);
                m[cljs.core.key__GT_js.call(null, k_19965)] = clj__GT_js.call(null, v_19966);
                var G__19967 = seq__19950_19960;
                var G__19968 = chunk__19951_19961;
                var G__19969 = count__19952_19962;
                var G__19970 = i__19953_19963 + 1;
                seq__19950_19960 = G__19967;
                chunk__19951_19961 = G__19968;
                count__19952_19962 = G__19969;
                i__19953_19963 = G__19970;
                continue;
              } else {
                var temp__4126__auto___19971 = cljs.core.seq.call(null, seq__19950_19960);
                if (temp__4126__auto___19971) {
                  var seq__19950_19972__$1 = temp__4126__auto___19971;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__19950_19972__$1)) {
                    var c__4307__auto___19973 = cljs.core.chunk_first.call(null, seq__19950_19972__$1);
                    var G__19974 = cljs.core.chunk_rest.call(null, seq__19950_19972__$1);
                    var G__19975 = c__4307__auto___19973;
                    var G__19976 = cljs.core.count.call(null, c__4307__auto___19973);
                    var G__19977 = 0;
                    seq__19950_19960 = G__19974;
                    chunk__19951_19961 = G__19975;
                    count__19952_19962 = G__19976;
                    i__19953_19963 = G__19977;
                    continue;
                  } else {
                    var vec__19955_19978 = cljs.core.first.call(null, seq__19950_19972__$1);
                    var k_19979 = cljs.core.nth.call(null, vec__19955_19978, 0, null);
                    var v_19980 = cljs.core.nth.call(null, vec__19955_19978, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_19979)] = clj__GT_js.call(null, v_19980);
                    var G__19981 = cljs.core.next.call(null, seq__19950_19972__$1);
                    var G__19982 = null;
                    var G__19983 = 0;
                    var G__19984 = 0;
                    seq__19950_19960 = G__19981;
                    chunk__19951_19961 = G__19982;
                    count__19952_19962 = G__19983;
                    i__19953_19963 = G__19984;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__19956_19985 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__19957_19986 = null;
              var count__19958_19987 = 0;
              var i__19959_19988 = 0;
              while (true) {
                if (i__19959_19988 < count__19958_19987) {
                  var x_19989__$1 = cljs.core._nth.call(null, chunk__19957_19986, i__19959_19988);
                  arr.push(x_19989__$1);
                  var G__19990 = seq__19956_19985;
                  var G__19991 = chunk__19957_19986;
                  var G__19992 = count__19958_19987;
                  var G__19993 = i__19959_19988 + 1;
                  seq__19956_19985 = G__19990;
                  chunk__19957_19986 = G__19991;
                  count__19958_19987 = G__19992;
                  i__19959_19988 = G__19993;
                  continue;
                } else {
                  var temp__4126__auto___19994 = cljs.core.seq.call(null, seq__19956_19985);
                  if (temp__4126__auto___19994) {
                    var seq__19956_19995__$1 = temp__4126__auto___19994;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__19956_19995__$1)) {
                      var c__4307__auto___19996 = cljs.core.chunk_first.call(null, seq__19956_19995__$1);
                      var G__19997 = cljs.core.chunk_rest.call(null, seq__19956_19995__$1);
                      var G__19998 = c__4307__auto___19996;
                      var G__19999 = cljs.core.count.call(null, c__4307__auto___19996);
                      var G__20000 = 0;
                      seq__19956_19985 = G__19997;
                      chunk__19957_19986 = G__19998;
                      count__19958_19987 = G__19999;
                      i__19959_19988 = G__20000;
                      continue;
                    } else {
                      var x_20001__$1 = cljs.core.first.call(null, seq__19956_19995__$1);
                      arr.push(x_20001__$1);
                      var G__20002 = cljs.core.next.call(null, seq__19956_19995__$1);
                      var G__20003 = null;
                      var G__20004 = 0;
                      var G__20005 = 0;
                      seq__19956_19985 = G__20002;
                      chunk__19957_19986 = G__20003;
                      count__19958_19987 = G__20004;
                      i__19959_19988 = G__20005;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj20007 = {};
  return obj20007;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__20028__delegate = function(x, opts) {
      if (function() {
        var G__20018 = x;
        if (G__20018) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__20018.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__20018.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20018);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20018);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__20019 = opts;
          var map__20019__$1 = cljs.core.seq_QMARK_.call(null, map__20019) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20019) : map__20019;
          var keywordize_keys = cljs.core.get.call(null, map__20019__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__20019, map__20019__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4276__auto__ = function(map__20019, map__20019__$1, keywordize_keys, keyfn) {
                          return function iter__20024(s__20025) {
                            return new cljs.core.LazySeq(null, function(map__20019, map__20019__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__20025__$1 = s__20025;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__20025__$1);
                                  if (temp__4126__auto__) {
                                    var s__20025__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20025__$2)) {
                                      var c__4274__auto__ = cljs.core.chunk_first.call(null, s__20025__$2);
                                      var size__4275__auto__ = cljs.core.count.call(null, c__4274__auto__);
                                      var b__20027 = cljs.core.chunk_buffer.call(null, size__4275__auto__);
                                      if (function() {
                                        var i__20026 = 0;
                                        while (true) {
                                          if (i__20026 < size__4275__auto__) {
                                            var k = cljs.core._nth.call(null, c__4274__auto__, i__20026);
                                            cljs.core.chunk_append.call(null, b__20027, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__20029 = i__20026 + 1;
                                            i__20026 = G__20029;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20027), iter__20024.call(null, cljs.core.chunk_rest.call(null, s__20025__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20027), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__20025__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__20024.call(null, cljs.core.rest.call(null, s__20025__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__20019, map__20019__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__20019, map__20019__$1, keywordize_keys, keyfn);
                        return iter__4276__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__20019, map__20019__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__20028 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20028__delegate.call(this, x, opts);
    };
    G__20028.cljs$lang$maxFixedArity = 1;
    G__20028.cljs$lang$applyTo = function(arglist__20030) {
      var x = cljs.core.first(arglist__20030);
      var opts = cljs.core.rest(arglist__20030);
      return G__20028__delegate(x, opts);
    };
    G__20028.cljs$core$IFn$_invoke$arity$variadic = G__20028__delegate;
    return G__20028;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__20031__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__20031 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__20031__delegate.call(this, args);
      };
      G__20031.cljs$lang$maxFixedArity = 0;
      G__20031.cljs$lang$applyTo = function(arglist__20032) {
        var args = cljs.core.seq(arglist__20032);
        return G__20031__delegate(args);
      };
      G__20031.cljs$core$IFn$_invoke$arity$variadic = G__20031__delegate;
      return G__20031;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__20033 = ret;
        f = G__20033;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__20034__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__20034 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20034__delegate.call(this, f, args);
    };
    G__20034.cljs$lang$maxFixedArity = 1;
    G__20034.cljs$lang$applyTo = function(arglist__20035) {
      var f = cljs.core.first(arglist__20035);
      var args = cljs.core.rest(arglist__20035);
      return G__20034__delegate(f, args);
    };
    G__20034.cljs$core$IFn$_invoke$arity$variadic = G__20034__delegate;
    return G__20034;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__20036) {
    var f = cljs.core.first(arglist__20036);
    var args = cljs.core.rest(arglist__20036);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3551__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var or__3551__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3551__auto____$1) {
        return or__3551__auto____$1;
      } else {
        var and__3539__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3539__auto__) {
          var and__3539__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3539__auto____$1) {
            var and__3539__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3539__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__20037 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__20038 = i + 1;
                  ret = G__20037;
                  i = G__20038;
                  continue;
                }
                break;
              }
            } else {
              return and__3539__auto____$2;
            }
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3551__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__20039_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__20039_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__20039_SHARP_), cljs.core.second.call(null, p1__20039_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__20040_SHARP_, p2__20041_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__20040_SHARP_, p2__20041_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3551__auto__ = cljs.core.truth_(function() {
    var and__3539__auto__ = xprefs;
    if (cljs.core.truth_(and__3539__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3539__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    var or__3551__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__20042 = cljs.core.rest.call(null, ps);
          ps = G__20042;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3551__auto____$1)) {
      return or__3551__auto____$1;
    } else {
      var or__3551__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__20043 = cljs.core.rest.call(null, ps);
            ps = G__20043;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3551__auto____$2)) {
        return or__3551__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3551__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__20046) {
    var vec__20047 = p__20046;
    var k = cljs.core.nth.call(null, vec__20047, 0, null);
    var _ = cljs.core.nth.call(null, vec__20047, 1, null);
    var e = vec__20047;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3551__auto__ = be == null;
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj20049 = {};
  return obj20049;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._reset[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._reset["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._add_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._add_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._remove_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._remove_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._prefer_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._get_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._get_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._methods[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._methods["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._prefers[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._prefers["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__20051 = null;
  var G__20051__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__20051__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__20051__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__20051__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__20051__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__20051__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__20051__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__20051__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__20051__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__20051__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__20051__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__20051__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__20051__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__20051__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__20051__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__20051__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__20051__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__20051__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__20051__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__20051__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__20051__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__20051 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__20051__2.call(this, self__, a);
      case 3:
        return G__20051__3.call(this, self__, a, b);
      case 4:
        return G__20051__4.call(this, self__, a, b, c);
      case 5:
        return G__20051__5.call(this, self__, a, b, c, d);
      case 6:
        return G__20051__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__20051__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__20051__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__20051__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__20051__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__20051__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__20051__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__20051__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__20051__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__20051__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__20051__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__20051__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__20051__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__20051__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__20051__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__20051__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__20051__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20051.cljs$core$IFn$_invoke$arity$2 = G__20051__2;
  G__20051.cljs$core$IFn$_invoke$arity$3 = G__20051__3;
  G__20051.cljs$core$IFn$_invoke$arity$4 = G__20051__4;
  G__20051.cljs$core$IFn$_invoke$arity$5 = G__20051__5;
  G__20051.cljs$core$IFn$_invoke$arity$6 = G__20051__6;
  G__20051.cljs$core$IFn$_invoke$arity$7 = G__20051__7;
  G__20051.cljs$core$IFn$_invoke$arity$8 = G__20051__8;
  G__20051.cljs$core$IFn$_invoke$arity$9 = G__20051__9;
  G__20051.cljs$core$IFn$_invoke$arity$10 = G__20051__10;
  G__20051.cljs$core$IFn$_invoke$arity$11 = G__20051__11;
  G__20051.cljs$core$IFn$_invoke$arity$12 = G__20051__12;
  G__20051.cljs$core$IFn$_invoke$arity$13 = G__20051__13;
  G__20051.cljs$core$IFn$_invoke$arity$14 = G__20051__14;
  G__20051.cljs$core$IFn$_invoke$arity$15 = G__20051__15;
  G__20051.cljs$core$IFn$_invoke$arity$16 = G__20051__16;
  G__20051.cljs$core$IFn$_invoke$arity$17 = G__20051__17;
  G__20051.cljs$core$IFn$_invoke$arity$18 = G__20051__18;
  G__20051.cljs$core$IFn$_invoke$arity$19 = G__20051__19;
  G__20051.cljs$core$IFn$_invoke$arity$20 = G__20051__20;
  G__20051.cljs$core$IFn$_invoke$arity$21 = G__20051__21;
  G__20051.cljs$core$IFn$_invoke$arity$22 = G__20051__22;
  return G__20051;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args20050) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20050)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var a = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__20052) {
    var opts__5111__auto__ = cljs.core.first(arglist__20052);
    var children__5112__auto__ = cljs.core.rest(arglist__20052);
    return a__delegate(opts__5111__auto__, children__5112__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var abbr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__20053) {
    var opts__5111__auto__ = cljs.core.first(arglist__20053);
    var children__5112__auto__ = cljs.core.rest(arglist__20053);
    return abbr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var address = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__20054) {
    var opts__5111__auto__ = cljs.core.first(arglist__20054);
    var children__5112__auto__ = cljs.core.rest(arglist__20054);
    return address__delegate(opts__5111__auto__, children__5112__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var area = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__20055) {
    var opts__5111__auto__ = cljs.core.first(arglist__20055);
    var children__5112__auto__ = cljs.core.rest(arglist__20055);
    return area__delegate(opts__5111__auto__, children__5112__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var article = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__20056) {
    var opts__5111__auto__ = cljs.core.first(arglist__20056);
    var children__5112__auto__ = cljs.core.rest(arglist__20056);
    return article__delegate(opts__5111__auto__, children__5112__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var aside = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__20057) {
    var opts__5111__auto__ = cljs.core.first(arglist__20057);
    var children__5112__auto__ = cljs.core.rest(arglist__20057);
    return aside__delegate(opts__5111__auto__, children__5112__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var audio = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__20058) {
    var opts__5111__auto__ = cljs.core.first(arglist__20058);
    var children__5112__auto__ = cljs.core.rest(arglist__20058);
    return audio__delegate(opts__5111__auto__, children__5112__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var b = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__20059) {
    var opts__5111__auto__ = cljs.core.first(arglist__20059);
    var children__5112__auto__ = cljs.core.rest(arglist__20059);
    return b__delegate(opts__5111__auto__, children__5112__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var base = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__20060) {
    var opts__5111__auto__ = cljs.core.first(arglist__20060);
    var children__5112__auto__ = cljs.core.rest(arglist__20060);
    return base__delegate(opts__5111__auto__, children__5112__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var bdi = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__20061) {
    var opts__5111__auto__ = cljs.core.first(arglist__20061);
    var children__5112__auto__ = cljs.core.rest(arglist__20061);
    return bdi__delegate(opts__5111__auto__, children__5112__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var bdo = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__20062) {
    var opts__5111__auto__ = cljs.core.first(arglist__20062);
    var children__5112__auto__ = cljs.core.rest(arglist__20062);
    return bdo__delegate(opts__5111__auto__, children__5112__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var big = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__20063) {
    var opts__5111__auto__ = cljs.core.first(arglist__20063);
    var children__5112__auto__ = cljs.core.rest(arglist__20063);
    return big__delegate(opts__5111__auto__, children__5112__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var blockquote = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__20064) {
    var opts__5111__auto__ = cljs.core.first(arglist__20064);
    var children__5112__auto__ = cljs.core.rest(arglist__20064);
    return blockquote__delegate(opts__5111__auto__, children__5112__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var body = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__20065) {
    var opts__5111__auto__ = cljs.core.first(arglist__20065);
    var children__5112__auto__ = cljs.core.rest(arglist__20065);
    return body__delegate(opts__5111__auto__, children__5112__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var br = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__20066) {
    var opts__5111__auto__ = cljs.core.first(arglist__20066);
    var children__5112__auto__ = cljs.core.rest(arglist__20066);
    return br__delegate(opts__5111__auto__, children__5112__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var button = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__20067) {
    var opts__5111__auto__ = cljs.core.first(arglist__20067);
    var children__5112__auto__ = cljs.core.rest(arglist__20067);
    return button__delegate(opts__5111__auto__, children__5112__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var canvas = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__20068) {
    var opts__5111__auto__ = cljs.core.first(arglist__20068);
    var children__5112__auto__ = cljs.core.rest(arglist__20068);
    return canvas__delegate(opts__5111__auto__, children__5112__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var caption = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__20069) {
    var opts__5111__auto__ = cljs.core.first(arglist__20069);
    var children__5112__auto__ = cljs.core.rest(arglist__20069);
    return caption__delegate(opts__5111__auto__, children__5112__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var cite = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__20070) {
    var opts__5111__auto__ = cljs.core.first(arglist__20070);
    var children__5112__auto__ = cljs.core.rest(arglist__20070);
    return cite__delegate(opts__5111__auto__, children__5112__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var code = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__20071) {
    var opts__5111__auto__ = cljs.core.first(arglist__20071);
    var children__5112__auto__ = cljs.core.rest(arglist__20071);
    return code__delegate(opts__5111__auto__, children__5112__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var col = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__20072) {
    var opts__5111__auto__ = cljs.core.first(arglist__20072);
    var children__5112__auto__ = cljs.core.rest(arglist__20072);
    return col__delegate(opts__5111__auto__, children__5112__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var colgroup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__20073) {
    var opts__5111__auto__ = cljs.core.first(arglist__20073);
    var children__5112__auto__ = cljs.core.rest(arglist__20073);
    return colgroup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var data = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__20074) {
    var opts__5111__auto__ = cljs.core.first(arglist__20074);
    var children__5112__auto__ = cljs.core.rest(arglist__20074);
    return data__delegate(opts__5111__auto__, children__5112__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var datalist = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__20075) {
    var opts__5111__auto__ = cljs.core.first(arglist__20075);
    var children__5112__auto__ = cljs.core.rest(arglist__20075);
    return datalist__delegate(opts__5111__auto__, children__5112__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dd = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__20076) {
    var opts__5111__auto__ = cljs.core.first(arglist__20076);
    var children__5112__auto__ = cljs.core.rest(arglist__20076);
    return dd__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var del = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__20077) {
    var opts__5111__auto__ = cljs.core.first(arglist__20077);
    var children__5112__auto__ = cljs.core.rest(arglist__20077);
    return del__delegate(opts__5111__auto__, children__5112__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dfn = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__20078) {
    var opts__5111__auto__ = cljs.core.first(arglist__20078);
    var children__5112__auto__ = cljs.core.rest(arglist__20078);
    return dfn__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var div = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__20079) {
    var opts__5111__auto__ = cljs.core.first(arglist__20079);
    var children__5112__auto__ = cljs.core.rest(arglist__20079);
    return div__delegate(opts__5111__auto__, children__5112__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dl = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__20080) {
    var opts__5111__auto__ = cljs.core.first(arglist__20080);
    var children__5112__auto__ = cljs.core.rest(arglist__20080);
    return dl__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dt = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__20081) {
    var opts__5111__auto__ = cljs.core.first(arglist__20081);
    var children__5112__auto__ = cljs.core.rest(arglist__20081);
    return dt__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var em = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__20082) {
    var opts__5111__auto__ = cljs.core.first(arglist__20082);
    var children__5112__auto__ = cljs.core.rest(arglist__20082);
    return em__delegate(opts__5111__auto__, children__5112__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var embed = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__20083) {
    var opts__5111__auto__ = cljs.core.first(arglist__20083);
    var children__5112__auto__ = cljs.core.rest(arglist__20083);
    return embed__delegate(opts__5111__auto__, children__5112__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var fieldset = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__20084) {
    var opts__5111__auto__ = cljs.core.first(arglist__20084);
    var children__5112__auto__ = cljs.core.rest(arglist__20084);
    return fieldset__delegate(opts__5111__auto__, children__5112__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var figcaption = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__20085) {
    var opts__5111__auto__ = cljs.core.first(arglist__20085);
    var children__5112__auto__ = cljs.core.rest(arglist__20085);
    return figcaption__delegate(opts__5111__auto__, children__5112__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var figure = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__20086) {
    var opts__5111__auto__ = cljs.core.first(arglist__20086);
    var children__5112__auto__ = cljs.core.rest(arglist__20086);
    return figure__delegate(opts__5111__auto__, children__5112__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var footer = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__20087) {
    var opts__5111__auto__ = cljs.core.first(arglist__20087);
    var children__5112__auto__ = cljs.core.rest(arglist__20087);
    return footer__delegate(opts__5111__auto__, children__5112__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var form = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__20088) {
    var opts__5111__auto__ = cljs.core.first(arglist__20088);
    var children__5112__auto__ = cljs.core.rest(arglist__20088);
    return form__delegate(opts__5111__auto__, children__5112__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h1 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__20089) {
    var opts__5111__auto__ = cljs.core.first(arglist__20089);
    var children__5112__auto__ = cljs.core.rest(arglist__20089);
    return h1__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h2 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__20090) {
    var opts__5111__auto__ = cljs.core.first(arglist__20090);
    var children__5112__auto__ = cljs.core.rest(arglist__20090);
    return h2__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h3 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__20091) {
    var opts__5111__auto__ = cljs.core.first(arglist__20091);
    var children__5112__auto__ = cljs.core.rest(arglist__20091);
    return h3__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h4 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__20092) {
    var opts__5111__auto__ = cljs.core.first(arglist__20092);
    var children__5112__auto__ = cljs.core.rest(arglist__20092);
    return h4__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h5 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__20093) {
    var opts__5111__auto__ = cljs.core.first(arglist__20093);
    var children__5112__auto__ = cljs.core.rest(arglist__20093);
    return h5__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h6 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__20094) {
    var opts__5111__auto__ = cljs.core.first(arglist__20094);
    var children__5112__auto__ = cljs.core.rest(arglist__20094);
    return h6__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var head = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__20095) {
    var opts__5111__auto__ = cljs.core.first(arglist__20095);
    var children__5112__auto__ = cljs.core.rest(arglist__20095);
    return head__delegate(opts__5111__auto__, children__5112__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var header = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__20096) {
    var opts__5111__auto__ = cljs.core.first(arglist__20096);
    var children__5112__auto__ = cljs.core.rest(arglist__20096);
    return header__delegate(opts__5111__auto__, children__5112__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var hr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__20097) {
    var opts__5111__auto__ = cljs.core.first(arglist__20097);
    var children__5112__auto__ = cljs.core.rest(arglist__20097);
    return hr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var html = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__20098) {
    var opts__5111__auto__ = cljs.core.first(arglist__20098);
    var children__5112__auto__ = cljs.core.rest(arglist__20098);
    return html__delegate(opts__5111__auto__, children__5112__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var i = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__20099) {
    var opts__5111__auto__ = cljs.core.first(arglist__20099);
    var children__5112__auto__ = cljs.core.rest(arglist__20099);
    return i__delegate(opts__5111__auto__, children__5112__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var iframe = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__20100) {
    var opts__5111__auto__ = cljs.core.first(arglist__20100);
    var children__5112__auto__ = cljs.core.rest(arglist__20100);
    return iframe__delegate(opts__5111__auto__, children__5112__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var img = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__20101) {
    var opts__5111__auto__ = cljs.core.first(arglist__20101);
    var children__5112__auto__ = cljs.core.rest(arglist__20101);
    return img__delegate(opts__5111__auto__, children__5112__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ins = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__20102) {
    var opts__5111__auto__ = cljs.core.first(arglist__20102);
    var children__5112__auto__ = cljs.core.rest(arglist__20102);
    return ins__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var kbd = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__20103) {
    var opts__5111__auto__ = cljs.core.first(arglist__20103);
    var children__5112__auto__ = cljs.core.rest(arglist__20103);
    return kbd__delegate(opts__5111__auto__, children__5112__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var keygen = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__20104) {
    var opts__5111__auto__ = cljs.core.first(arglist__20104);
    var children__5112__auto__ = cljs.core.rest(arglist__20104);
    return keygen__delegate(opts__5111__auto__, children__5112__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var label = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__20105) {
    var opts__5111__auto__ = cljs.core.first(arglist__20105);
    var children__5112__auto__ = cljs.core.rest(arglist__20105);
    return label__delegate(opts__5111__auto__, children__5112__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var legend = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__20106) {
    var opts__5111__auto__ = cljs.core.first(arglist__20106);
    var children__5112__auto__ = cljs.core.rest(arglist__20106);
    return legend__delegate(opts__5111__auto__, children__5112__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var li = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__20107) {
    var opts__5111__auto__ = cljs.core.first(arglist__20107);
    var children__5112__auto__ = cljs.core.rest(arglist__20107);
    return li__delegate(opts__5111__auto__, children__5112__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var link = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__20108) {
    var opts__5111__auto__ = cljs.core.first(arglist__20108);
    var children__5112__auto__ = cljs.core.rest(arglist__20108);
    return link__delegate(opts__5111__auto__, children__5112__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var main = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__20109) {
    var opts__5111__auto__ = cljs.core.first(arglist__20109);
    var children__5112__auto__ = cljs.core.rest(arglist__20109);
    return main__delegate(opts__5111__auto__, children__5112__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var map = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__20110) {
    var opts__5111__auto__ = cljs.core.first(arglist__20110);
    var children__5112__auto__ = cljs.core.rest(arglist__20110);
    return map__delegate(opts__5111__auto__, children__5112__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var mark = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__20111) {
    var opts__5111__auto__ = cljs.core.first(arglist__20111);
    var children__5112__auto__ = cljs.core.rest(arglist__20111);
    return mark__delegate(opts__5111__auto__, children__5112__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var menu = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__20112) {
    var opts__5111__auto__ = cljs.core.first(arglist__20112);
    var children__5112__auto__ = cljs.core.rest(arglist__20112);
    return menu__delegate(opts__5111__auto__, children__5112__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var menuitem = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__20113) {
    var opts__5111__auto__ = cljs.core.first(arglist__20113);
    var children__5112__auto__ = cljs.core.rest(arglist__20113);
    return menuitem__delegate(opts__5111__auto__, children__5112__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var meta = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__20114) {
    var opts__5111__auto__ = cljs.core.first(arglist__20114);
    var children__5112__auto__ = cljs.core.rest(arglist__20114);
    return meta__delegate(opts__5111__auto__, children__5112__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var meter = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__20115) {
    var opts__5111__auto__ = cljs.core.first(arglist__20115);
    var children__5112__auto__ = cljs.core.rest(arglist__20115);
    return meter__delegate(opts__5111__auto__, children__5112__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var nav = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__20116) {
    var opts__5111__auto__ = cljs.core.first(arglist__20116);
    var children__5112__auto__ = cljs.core.rest(arglist__20116);
    return nav__delegate(opts__5111__auto__, children__5112__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var noscript = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__20117) {
    var opts__5111__auto__ = cljs.core.first(arglist__20117);
    var children__5112__auto__ = cljs.core.rest(arglist__20117);
    return noscript__delegate(opts__5111__auto__, children__5112__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var object = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__20118) {
    var opts__5111__auto__ = cljs.core.first(arglist__20118);
    var children__5112__auto__ = cljs.core.rest(arglist__20118);
    return object__delegate(opts__5111__auto__, children__5112__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ol = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__20119) {
    var opts__5111__auto__ = cljs.core.first(arglist__20119);
    var children__5112__auto__ = cljs.core.rest(arglist__20119);
    return ol__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var optgroup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__20120) {
    var opts__5111__auto__ = cljs.core.first(arglist__20120);
    var children__5112__auto__ = cljs.core.rest(arglist__20120);
    return optgroup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var output = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__20121) {
    var opts__5111__auto__ = cljs.core.first(arglist__20121);
    var children__5112__auto__ = cljs.core.rest(arglist__20121);
    return output__delegate(opts__5111__auto__, children__5112__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var p = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__20122) {
    var opts__5111__auto__ = cljs.core.first(arglist__20122);
    var children__5112__auto__ = cljs.core.rest(arglist__20122);
    return p__delegate(opts__5111__auto__, children__5112__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var param = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__20123) {
    var opts__5111__auto__ = cljs.core.first(arglist__20123);
    var children__5112__auto__ = cljs.core.rest(arglist__20123);
    return param__delegate(opts__5111__auto__, children__5112__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var pre = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__20124) {
    var opts__5111__auto__ = cljs.core.first(arglist__20124);
    var children__5112__auto__ = cljs.core.rest(arglist__20124);
    return pre__delegate(opts__5111__auto__, children__5112__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var progress = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__20125) {
    var opts__5111__auto__ = cljs.core.first(arglist__20125);
    var children__5112__auto__ = cljs.core.rest(arglist__20125);
    return progress__delegate(opts__5111__auto__, children__5112__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var q = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__20126) {
    var opts__5111__auto__ = cljs.core.first(arglist__20126);
    var children__5112__auto__ = cljs.core.rest(arglist__20126);
    return q__delegate(opts__5111__auto__, children__5112__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rp = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__20127) {
    var opts__5111__auto__ = cljs.core.first(arglist__20127);
    var children__5112__auto__ = cljs.core.rest(arglist__20127);
    return rp__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rt = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__20128) {
    var opts__5111__auto__ = cljs.core.first(arglist__20128);
    var children__5112__auto__ = cljs.core.rest(arglist__20128);
    return rt__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ruby = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__20129) {
    var opts__5111__auto__ = cljs.core.first(arglist__20129);
    var children__5112__auto__ = cljs.core.rest(arglist__20129);
    return ruby__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var s = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__20130) {
    var opts__5111__auto__ = cljs.core.first(arglist__20130);
    var children__5112__auto__ = cljs.core.rest(arglist__20130);
    return s__delegate(opts__5111__auto__, children__5112__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var samp = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__20131) {
    var opts__5111__auto__ = cljs.core.first(arglist__20131);
    var children__5112__auto__ = cljs.core.rest(arglist__20131);
    return samp__delegate(opts__5111__auto__, children__5112__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var script = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__20132) {
    var opts__5111__auto__ = cljs.core.first(arglist__20132);
    var children__5112__auto__ = cljs.core.rest(arglist__20132);
    return script__delegate(opts__5111__auto__, children__5112__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var section = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__20133) {
    var opts__5111__auto__ = cljs.core.first(arglist__20133);
    var children__5112__auto__ = cljs.core.rest(arglist__20133);
    return section__delegate(opts__5111__auto__, children__5112__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var select = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__20134) {
    var opts__5111__auto__ = cljs.core.first(arglist__20134);
    var children__5112__auto__ = cljs.core.rest(arglist__20134);
    return select__delegate(opts__5111__auto__, children__5112__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var small = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__20135) {
    var opts__5111__auto__ = cljs.core.first(arglist__20135);
    var children__5112__auto__ = cljs.core.rest(arglist__20135);
    return small__delegate(opts__5111__auto__, children__5112__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var source = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__20136) {
    var opts__5111__auto__ = cljs.core.first(arglist__20136);
    var children__5112__auto__ = cljs.core.rest(arglist__20136);
    return source__delegate(opts__5111__auto__, children__5112__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var span = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__20137) {
    var opts__5111__auto__ = cljs.core.first(arglist__20137);
    var children__5112__auto__ = cljs.core.rest(arglist__20137);
    return span__delegate(opts__5111__auto__, children__5112__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var strong = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__20138) {
    var opts__5111__auto__ = cljs.core.first(arglist__20138);
    var children__5112__auto__ = cljs.core.rest(arglist__20138);
    return strong__delegate(opts__5111__auto__, children__5112__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var style = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__20139) {
    var opts__5111__auto__ = cljs.core.first(arglist__20139);
    var children__5112__auto__ = cljs.core.rest(arglist__20139);
    return style__delegate(opts__5111__auto__, children__5112__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var sub = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__20140) {
    var opts__5111__auto__ = cljs.core.first(arglist__20140);
    var children__5112__auto__ = cljs.core.rest(arglist__20140);
    return sub__delegate(opts__5111__auto__, children__5112__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var summary = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__20141) {
    var opts__5111__auto__ = cljs.core.first(arglist__20141);
    var children__5112__auto__ = cljs.core.rest(arglist__20141);
    return summary__delegate(opts__5111__auto__, children__5112__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var sup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__20142) {
    var opts__5111__auto__ = cljs.core.first(arglist__20142);
    var children__5112__auto__ = cljs.core.rest(arglist__20142);
    return sup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var table = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__20143) {
    var opts__5111__auto__ = cljs.core.first(arglist__20143);
    var children__5112__auto__ = cljs.core.rest(arglist__20143);
    return table__delegate(opts__5111__auto__, children__5112__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tbody = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__20144) {
    var opts__5111__auto__ = cljs.core.first(arglist__20144);
    var children__5112__auto__ = cljs.core.rest(arglist__20144);
    return tbody__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var td = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__20145) {
    var opts__5111__auto__ = cljs.core.first(arglist__20145);
    var children__5112__auto__ = cljs.core.rest(arglist__20145);
    return td__delegate(opts__5111__auto__, children__5112__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tfoot = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__20146) {
    var opts__5111__auto__ = cljs.core.first(arglist__20146);
    var children__5112__auto__ = cljs.core.rest(arglist__20146);
    return tfoot__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var th = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__20147) {
    var opts__5111__auto__ = cljs.core.first(arglist__20147);
    var children__5112__auto__ = cljs.core.rest(arglist__20147);
    return th__delegate(opts__5111__auto__, children__5112__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var thead = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__20148) {
    var opts__5111__auto__ = cljs.core.first(arglist__20148);
    var children__5112__auto__ = cljs.core.rest(arglist__20148);
    return thead__delegate(opts__5111__auto__, children__5112__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var time = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__20149) {
    var opts__5111__auto__ = cljs.core.first(arglist__20149);
    var children__5112__auto__ = cljs.core.rest(arglist__20149);
    return time__delegate(opts__5111__auto__, children__5112__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var title = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__20150) {
    var opts__5111__auto__ = cljs.core.first(arglist__20150);
    var children__5112__auto__ = cljs.core.rest(arglist__20150);
    return title__delegate(opts__5111__auto__, children__5112__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__20151) {
    var opts__5111__auto__ = cljs.core.first(arglist__20151);
    var children__5112__auto__ = cljs.core.rest(arglist__20151);
    return tr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var track = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__20152) {
    var opts__5111__auto__ = cljs.core.first(arglist__20152);
    var children__5112__auto__ = cljs.core.rest(arglist__20152);
    return track__delegate(opts__5111__auto__, children__5112__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var u = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__20153) {
    var opts__5111__auto__ = cljs.core.first(arglist__20153);
    var children__5112__auto__ = cljs.core.rest(arglist__20153);
    return u__delegate(opts__5111__auto__, children__5112__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ul = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__20154) {
    var opts__5111__auto__ = cljs.core.first(arglist__20154);
    var children__5112__auto__ = cljs.core.rest(arglist__20154);
    return ul__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var var$ = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__20155) {
    var opts__5111__auto__ = cljs.core.first(arglist__20155);
    var children__5112__auto__ = cljs.core.rest(arglist__20155);
    return var$__delegate(opts__5111__auto__, children__5112__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var video = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__20156) {
    var opts__5111__auto__ = cljs.core.first(arglist__20156);
    var children__5112__auto__ = cljs.core.rest(arglist__20156);
    return video__delegate(opts__5111__auto__, children__5112__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var wbr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__20157) {
    var opts__5111__auto__ = cljs.core.first(arglist__20157);
    var children__5112__auto__ = cljs.core.rest(arglist__20157);
    return wbr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var circle = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__20158) {
    var opts__5111__auto__ = cljs.core.first(arglist__20158);
    var children__5112__auto__ = cljs.core.rest(arglist__20158);
    return circle__delegate(opts__5111__auto__, children__5112__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ellipse = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__20159) {
    var opts__5111__auto__ = cljs.core.first(arglist__20159);
    var children__5112__auto__ = cljs.core.rest(arglist__20159);
    return ellipse__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var g = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__20160) {
    var opts__5111__auto__ = cljs.core.first(arglist__20160);
    var children__5112__auto__ = cljs.core.rest(arglist__20160);
    return g__delegate(opts__5111__auto__, children__5112__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var line = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__20161) {
    var opts__5111__auto__ = cljs.core.first(arglist__20161);
    var children__5112__auto__ = cljs.core.rest(arglist__20161);
    return line__delegate(opts__5111__auto__, children__5112__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var path = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__20162) {
    var opts__5111__auto__ = cljs.core.first(arglist__20162);
    var children__5112__auto__ = cljs.core.rest(arglist__20162);
    return path__delegate(opts__5111__auto__, children__5112__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var polyline = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__20163) {
    var opts__5111__auto__ = cljs.core.first(arglist__20163);
    var children__5112__auto__ = cljs.core.rest(arglist__20163);
    return polyline__delegate(opts__5111__auto__, children__5112__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rect = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__20164) {
    var opts__5111__auto__ = cljs.core.first(arglist__20164);
    var children__5112__auto__ = cljs.core.rest(arglist__20164);
    return rect__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var svg = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__20165) {
    var opts__5111__auto__ = cljs.core.first(arglist__20165);
    var children__5112__auto__ = cljs.core.rest(arglist__20165);
    return svg__delegate(opts__5111__auto__, children__5112__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var text = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__20166) {
    var opts__5111__auto__ = cljs.core.first(arglist__20166);
    var children__5112__auto__ = cljs.core.rest(arglist__20166);
    return text__delegate(opts__5111__auto__, children__5112__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var defs = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__20167) {
    var opts__5111__auto__ = cljs.core.first(arglist__20167);
    var children__5112__auto__ = cljs.core.rest(arglist__20167);
    return defs__delegate(opts__5111__auto__, children__5112__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var linearGradient = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__20168) {
    var opts__5111__auto__ = cljs.core.first(arglist__20168);
    var children__5112__auto__ = cljs.core.rest(arglist__20168);
    return linearGradient__delegate(opts__5111__auto__, children__5112__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var polygon = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__20169) {
    var opts__5111__auto__ = cljs.core.first(arglist__20169);
    var children__5112__auto__ = cljs.core.rest(arglist__20169);
    return polygon__delegate(opts__5111__auto__, children__5112__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var radialGradient = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__20170) {
    var opts__5111__auto__ = cljs.core.first(arglist__20170);
    var children__5112__auto__ = cljs.core.rest(arglist__20170);
    return radialGradient__delegate(opts__5111__auto__, children__5112__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var stop = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__20171) {
    var opts__5111__auto__ = cljs.core.first(arglist__20171);
    var children__5112__auto__ = cljs.core.rest(arglist__20171);
    return stop__delegate(opts__5111__auto__, children__5112__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj22904 = {};
  return obj22904;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3539__auto__ = port;
    if (and__3539__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4178__auto__ = port == null ? null : port;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj22906 = {};
  return obj22906;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3539__auto__ = port;
    if (and__3539__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4178__auto__ = port == null ? null : port;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj22908 = {};
  return obj22908;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3539__auto__ = chan;
    if (and__3539__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4178__auto__ = chan == null ? null : chan;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3539__auto__ = chan;
    if (and__3539__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4178__auto__ = chan == null ? null : chan;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj22910 = {};
  return obj22910;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3539__auto__ = h;
    if (and__3539__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4178__auto__ = h == null ? null : h;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3539__auto__ = h;
    if (and__3539__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4178__auto__ = h == null ? null : h;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj22912 = {};
  return obj22912;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj22914 = {};
  return obj22914;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__22915 = cnt + 1;
      cnt = G__22915;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4407__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4407__auto__) {
      var v_22916 = this$.pop();
      if (keep_QMARK_.call(null, v_22916)) {
        this$.unshift(v_22916);
      } else {
      }
      var G__22917 = x + 1;
      x = G__22917;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_22918 = 0;
  while (true) {
    var m_22919 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_22919 == null) {
    } else {
      m_22919.call(null);
      if (count_22918 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__22920 = count_22918 + 1;
        count_22918 = G__22920;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3539__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3539__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t22924 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t22924 = function(val, box, meta22925) {
      this.val = val;
      this.box = box;
      this.meta22925 = meta22925;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t22924.cljs$lang$type = true;
    cljs.core.async.impl.channels.t22924.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t22924";
    cljs.core.async.impl.channels.t22924.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.channels/t22924");
    };
    cljs.core.async.impl.channels.t22924.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t22924.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22926) {
      var self__ = this;
      var _22926__$1 = this;
      return self__.meta22925;
    };
    cljs.core.async.impl.channels.t22924.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22926, meta22925__$1) {
      var self__ = this;
      var _22926__$1 = this;
      return new cljs.core.async.impl.channels.t22924(self__.val, self__.box, meta22925__$1);
    };
    cljs.core.async.impl.channels.__GT_t22924 = function __GT_t22924(val__$1, box__$1, meta22925) {
      return new cljs.core.async.impl.channels.t22924(val__$1, box__$1, meta22925);
    };
  }
  return new cljs.core.async.impl.channels.t22924(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_22927 = self__.takes.pop();
      if (taker_22927 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_22927)) {
          var take_cb_22928 = cljs.core.async.impl.protocols.commit.call(null, taker_22927);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_22928, taker_22927, this$__$1) {
            return function() {
              return take_cb_22928.call(null, null);
            };
          }(take_cb_22928, taker_22927, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_22929 = self__.puts.pop();
        if (!(putter_22929 == null)) {
          var put_handler_22930 = putter_22929.handler;
          var val_22931 = putter_22929.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_22930)) {
            var put_cb_22932 = cljs.core.async.impl.protocols.commit.call(null, put_handler_22930);
            var __22933__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_22932, __22933__$1, put_handler_22930, val_22931, putter_22929, _, retval, this$__$1) {
              return function() {
                return put_cb_22932.call(null, true);
              };
            }(put_cb_22932, __22933__$1, put_handler_22930, val_22931, putter_22929, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_22931);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t22851 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t22851 = function(f, fn_handler, meta22852) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta22852 = meta22852;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t22851.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t22851.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t22851";
    cljs.core.async.impl.ioc_helpers.t22851.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.ioc-helpers/t22851");
    };
    cljs.core.async.impl.ioc_helpers.t22851.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t22851.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t22851.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t22851.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22853) {
      var self__ = this;
      var _22853__$1 = this;
      return self__.meta22852;
    };
    cljs.core.async.impl.ioc_helpers.t22851.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22853, meta22852__$1) {
      var self__ = this;
      var _22853__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t22851(self__.f, self__.fn_handler, meta22852__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t22851 = function __GT_t22851(f__$1, fn_handler__$1, meta22852) {
      return new cljs.core.async.impl.ioc_helpers.t22851(f__$1, fn_handler__$1, meta22852);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t22851(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e22855) {
    if (e22855 instanceof Object) {
      var ex = e22855;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e22855;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_22858_22860 = state;
    statearr_22858_22860[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_22858_22860[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_22859_22861 = state;
    statearr_22859_22861[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_22859_22861[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_22864_22866 = state;
    statearr_22864_22866[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_22864_22866[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_22865_22867 = state;
    statearr_22865_22867[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_22865_22867[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__22868) {
    var map__22873 = p__22868;
    var map__22873__$1 = cljs.core.seq_QMARK_.call(null, map__22873) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22873) : map__22873;
    var opts = map__22873__$1;
    var statearr_22874_22877 = state;
    statearr_22874_22877[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__22873, map__22873__$1, opts) {
      return function(val) {
        var statearr_22875_22878 = state;
        statearr_22875_22878[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__22873, map__22873__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_22876_22879 = state;
      statearr_22876_22879[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__22868 = null;
    if (arguments.length > 3) {
      p__22868 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__22868);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__22880) {
    var state = cljs.core.first(arglist__22880);
    arglist__22880 = cljs.core.next(arglist__22880);
    var cont_block = cljs.core.first(arglist__22880);
    arglist__22880 = cljs.core.next(arglist__22880);
    var ports = cljs.core.first(arglist__22880);
    var p__22868 = cljs.core.rest(arglist__22880);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__22868);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4137__auto__, k__4138__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4137__auto____$1, k__4138__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4139__auto__, k22882, else__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var G__22884 = k22882 instanceof cljs.core.Keyword ? k22882.fqn : null;
  switch(G__22884) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k22882, else__4140__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4151__auto__, writer__4152__auto__, opts__4153__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pr_pair__4154__auto__ = function(this__4151__auto____$1) {
    return function(keyval__4155__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4152__auto__, cljs.core.pr_writer, "", " ", "", opts__4153__auto__, keyval__4155__auto__);
    };
  }(this__4151__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4152__auto__, pr_pair__4154__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4153__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4135__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4131__auto__) {
  var self__ = this;
  var this__4131__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4141__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4132__auto__) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_imap.call(null, this__4132__auto____$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4133__auto__, other__4134__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = other__4134__auto__;
    if (cljs.core.truth_(and__3539__auto__)) {
      return this__4133__auto____$1.constructor === other__4134__auto__.constructor && cljs.core.equiv_map.call(null, this__4133__auto____$1, other__4134__auto__);
    } else {
      return and__3539__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4146__auto__, k__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4147__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4146__auto____$1), self__.__meta), k__4147__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4147__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4144__auto__, k__4145__auto__, G__22881) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  var pred__22885 = cljs.core.keyword_identical_QMARK_;
  var expr__22886 = k__4145__auto__;
  if (cljs.core.truth_(pred__22885.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__22886))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__22881, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__22885.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__22886))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__22881, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__22885.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__22886))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__22881, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__22885.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__22886))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__22881, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__22885.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__22886))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__22881, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4145__auto__, G__22881), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4149__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4136__auto__, G__22881) {
  var self__ = this;
  var this__4136__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__22881, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4142__auto__, entry__4143__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4143__auto__)) {
    return cljs.core._assoc.call(null, this__4142__auto____$1, cljs.core._nth.call(null, entry__4143__auto__, 0), cljs.core._nth.call(null, entry__4143__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4142__auto____$1, entry__4143__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4171__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4171__auto__, writer__4172__auto__) {
  return cljs.core._write.call(null, writer__4172__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__22883) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__22883), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__22883), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__22883), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__22883), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__22883), null, cljs.core.dissoc.call(null, G__22883, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_22890 = state;
  statearr_22890[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_22890;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = exception;
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3539__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = exception;
        if (cljs.core.truth_(and__3539__auto__)) {
          var and__3539__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3539__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        var statearr_22896 = state;
        statearr_22896[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_22896[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_22896[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_22896[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_22896;
      } else {
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = exception;
          if (cljs.core.truth_(and__3539__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3539__auto__;
          }
        }())) {
          var statearr_22897_22901 = state;
          statearr_22897_22901[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__22902 = state;
          state = G__22902;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3539__auto__ = exception;
            if (cljs.core.truth_(and__3539__auto__)) {
              var and__3539__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3539__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3539__auto____$1;
              }
            } else {
              return and__3539__auto__;
            }
          }())) {
            var statearr_22898 = state;
            statearr_22898[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_22898[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_22898;
          } else {
            if (cljs.core.truth_(function() {
              var and__3539__auto__ = cljs.core.not.call(null, exception);
              if (and__3539__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3539__auto__;
              }
            }())) {
              var statearr_22899 = state;
              statearr_22899[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_22899[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_22899;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_22900 = state;
                statearr_22900[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_22900[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_22900;
              } else {
                throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__22824 = level + 1;
        level = G__22824;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_22825 = 0;
    while (true) {
      if (i_22825 < arr.length) {
        arr[i_22825] = null;
        var G__22826 = i_22825 + 1;
        i_22825 = G__22826;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__22827 = x_SINGLEQUOTE_;
                x__$1 = G__22827;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__22828 = x__$1;
        var G__22829 = k;
        var G__22830 = level - 1;
        var G__22831 = update;
        x = G__22828;
        k = G__22829;
        level = G__22830;
        update = G__22831;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_22832 = self__.level + 1;
      while (true) {
        if (i_22832 <= new_level + 1) {
          update[i_22832] = self__.header;
          var G__22833 = i_22832 + 1;
          i_22832 = G__22833;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_22834 = 0;
    while (true) {
      if (i_22834 <= self__.level) {
        var links_22835 = update[i_22834].forward;
        if (links_22835[i_22834] === x__$1) {
          links_22835[i_22834] = x__$1.forward[i_22834];
          var G__22836 = i_22834 + 1;
          i_22834 = G__22836;
          continue;
        } else {
          var G__22837 = i_22834 + 1;
          i_22834 = G__22837;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__22838 = x_SINGLEQUOTE_;
              x__$1 = G__22838;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__22839 = nx;
        var G__22840 = level__$1 - 1;
        x = G__22839;
        level__$1 = G__22840;
        continue;
      } else {
        var G__22841 = x;
        var G__22842 = level__$1 - 1;
        x = G__22841;
        level__$1 = G__22842;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__22843 = x_SINGLEQUOTE_;
              x__$1 = G__22843;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__22844 = nx;
        var G__22845 = level__$1 - 1;
        x = G__22844;
        level__$1 = G__22845;
        continue;
      } else {
        var G__22846 = x;
        var G__22847 = level__$1 - 1;
        x = G__22846;
        level__$1 = G__22847;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3551__auto__ = cljs.core.truth_(function() {
    var and__3539__auto__ = me;
    if (cljs.core.truth_(and__3539__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3539__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3551__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3551__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t20175 !== "undefined") {
  } else {
    cljs.core.async.t20175 = function(f, fn_handler, meta20176) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20176 = meta20176;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20175.cljs$lang$type = true;
    cljs.core.async.t20175.cljs$lang$ctorStr = "cljs.core.async/t20175";
    cljs.core.async.t20175.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20175");
    };
    cljs.core.async.t20175.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20175.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t20175.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t20175.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20177) {
      var self__ = this;
      var _20177__$1 = this;
      return self__.meta20176;
    };
    cljs.core.async.t20175.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20177, meta20176__$1) {
      var self__ = this;
      var _20177__$1 = this;
      return new cljs.core.async.t20175(self__.f, self__.fn_handler, meta20176__$1);
    };
    cljs.core.async.__GT_t20175 = function __GT_t20175(f__$1, fn_handler__$1, meta20176) {
      return new cljs.core.async.t20175(f__$1, fn_handler__$1, meta20176);
    };
  }
  return new cljs.core.async.t20175(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__20179 = buff;
  if (G__20179) {
    var bit__4201__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = bit__4201__auto__;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return G__20179.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__20179.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__20179);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__20179);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_20180 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_20180);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_20180, ret) {
          return function() {
            return fn1.call(null, val_20180);
          };
        }(val_20180, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4407__auto___20181 = n;
  var x_20182 = 0;
  while (true) {
    if (x_20182 < n__4407__auto___20181) {
      a[x_20182] = 0;
      var G__20183 = x_20182 + 1;
      x_20182 = G__20183;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__20184 = i + 1;
      i = G__20184;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t20188 !== "undefined") {
  } else {
    cljs.core.async.t20188 = function(flag, alt_flag, meta20189) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta20189 = meta20189;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20188.cljs$lang$type = true;
    cljs.core.async.t20188.cljs$lang$ctorStr = "cljs.core.async/t20188";
    cljs.core.async.t20188.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20188");
      };
    }(flag);
    cljs.core.async.t20188.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20188.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t20188.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t20188.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_20190) {
        var self__ = this;
        var _20190__$1 = this;
        return self__.meta20189;
      };
    }(flag);
    cljs.core.async.t20188.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_20190, meta20189__$1) {
        var self__ = this;
        var _20190__$1 = this;
        return new cljs.core.async.t20188(self__.flag, self__.alt_flag, meta20189__$1);
      };
    }(flag);
    cljs.core.async.__GT_t20188 = function(flag) {
      return function __GT_t20188(flag__$1, alt_flag__$1, meta20189) {
        return new cljs.core.async.t20188(flag__$1, alt_flag__$1, meta20189);
      };
    }(flag);
  }
  return new cljs.core.async.t20188(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t20194 !== "undefined") {
  } else {
    cljs.core.async.t20194 = function(cb, flag, alt_handler, meta20195) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta20195 = meta20195;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20194.cljs$lang$type = true;
    cljs.core.async.t20194.cljs$lang$ctorStr = "cljs.core.async/t20194";
    cljs.core.async.t20194.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20194");
    };
    cljs.core.async.t20194.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20194.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t20194.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t20194.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20196) {
      var self__ = this;
      var _20196__$1 = this;
      return self__.meta20195;
    };
    cljs.core.async.t20194.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20196, meta20195__$1) {
      var self__ = this;
      var _20196__$1 = this;
      return new cljs.core.async.t20194(self__.cb, self__.flag, self__.alt_handler, meta20195__$1);
    };
    cljs.core.async.__GT_t20194 = function __GT_t20194(cb__$1, flag__$1, alt_handler__$1, meta20195) {
      return new cljs.core.async.t20194(cb__$1, flag__$1, alt_handler__$1, meta20195);
    };
  }
  return new cljs.core.async.t20194(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__20197_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20197_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__20198_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20198_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3551__auto__ = wport;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__20199 = i + 1;
          i = G__20199;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3551__auto__ = ret;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3539__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3539__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3539__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__20200) {
    var map__20202 = p__20200;
    var map__20202__$1 = cljs.core.seq_QMARK_.call(null, map__20202) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20202) : map__20202;
    var opts = map__20202__$1;
    throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__20200 = null;
    if (arguments.length > 1) {
      p__20200 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__20200);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__20203) {
    var ports = cljs.core.first(arglist__20203);
    var p__20200 = cljs.core.rest(arglist__20203);
    return alts_BANG___delegate(ports, p__20200);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t20211 !== "undefined") {
  } else {
    cljs.core.async.t20211 = function(ch, f, map_LT_, meta20212) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta20212 = meta20212;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20211.cljs$lang$type = true;
    cljs.core.async.t20211.cljs$lang$ctorStr = "cljs.core.async/t20211";
    cljs.core.async.t20211.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20211");
    };
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t20214 !== "undefined") {
        } else {
          cljs.core.async.t20214 = function(fn1, _, meta20212, ch, f, map_LT_, meta20215) {
            this.fn1 = fn1;
            this._ = _;
            this.meta20212 = meta20212;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta20215 = meta20215;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t20214.cljs$lang$type = true;
          cljs.core.async.t20214.cljs$lang$ctorStr = "cljs.core.async/t20214";
          cljs.core.async.t20214.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
              return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20214");
            };
          }(___$1);
          cljs.core.async.t20214.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t20214.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t20214.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t20214.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__20204_SHARP_) {
                  return f1.call(null, p1__20204_SHARP_ == null ? null : self__.f.call(null, p1__20204_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t20214.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_20216) {
              var self__ = this;
              var _20216__$1 = this;
              return self__.meta20215;
            };
          }(___$1);
          cljs.core.async.t20214.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_20216, meta20215__$1) {
              var self__ = this;
              var _20216__$1 = this;
              return new cljs.core.async.t20214(self__.fn1, self__._, self__.meta20212, self__.ch, self__.f, self__.map_LT_, meta20215__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t20214 = function(___$1) {
            return function __GT_t20214(fn1__$1, ___$2, meta20212__$1, ch__$2, f__$2, map_LT___$2, meta20215) {
              return new cljs.core.async.t20214(fn1__$1, ___$2, meta20212__$1, ch__$2, f__$2, map_LT___$2, meta20215);
            };
          }(___$1);
        }
        return new cljs.core.async.t20214(fn1, ___$1, self__.meta20212, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = ret;
        if (cljs.core.truth_(and__3539__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3539__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t20211.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t20211.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20213) {
      var self__ = this;
      var _20213__$1 = this;
      return self__.meta20212;
    };
    cljs.core.async.t20211.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20213, meta20212__$1) {
      var self__ = this;
      var _20213__$1 = this;
      return new cljs.core.async.t20211(self__.ch, self__.f, self__.map_LT_, meta20212__$1);
    };
    cljs.core.async.__GT_t20211 = function __GT_t20211(ch__$1, f__$1, map_LT___$1, meta20212) {
      return new cljs.core.async.t20211(ch__$1, f__$1, map_LT___$1, meta20212);
    };
  }
  return new cljs.core.async.t20211(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t20220 !== "undefined") {
  } else {
    cljs.core.async.t20220 = function(ch, f, map_GT_, meta20221) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta20221 = meta20221;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20220.cljs$lang$type = true;
    cljs.core.async.t20220.cljs$lang$ctorStr = "cljs.core.async/t20220";
    cljs.core.async.t20220.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20220");
    };
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t20220.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t20220.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20222) {
      var self__ = this;
      var _20222__$1 = this;
      return self__.meta20221;
    };
    cljs.core.async.t20220.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20222, meta20221__$1) {
      var self__ = this;
      var _20222__$1 = this;
      return new cljs.core.async.t20220(self__.ch, self__.f, self__.map_GT_, meta20221__$1);
    };
    cljs.core.async.__GT_t20220 = function __GT_t20220(ch__$1, f__$1, map_GT___$1, meta20221) {
      return new cljs.core.async.t20220(ch__$1, f__$1, map_GT___$1, meta20221);
    };
  }
  return new cljs.core.async.t20220(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t20226 !== "undefined") {
  } else {
    cljs.core.async.t20226 = function(ch, p, filter_GT_, meta20227) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta20227 = meta20227;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20226.cljs$lang$type = true;
    cljs.core.async.t20226.cljs$lang$ctorStr = "cljs.core.async/t20226";
    cljs.core.async.t20226.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t20226");
    };
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t20226.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t20226.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20228) {
      var self__ = this;
      var _20228__$1 = this;
      return self__.meta20227;
    };
    cljs.core.async.t20226.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20228, meta20227__$1) {
      var self__ = this;
      var _20228__$1 = this;
      return new cljs.core.async.t20226(self__.ch, self__.p, self__.filter_GT_, meta20227__$1);
    };
    cljs.core.async.__GT_t20226 = function __GT_t20226(ch__$1, p__$1, filter_GT___$1, meta20227) {
      return new cljs.core.async.t20226(ch__$1, p__$1, filter_GT___$1, meta20227);
    };
  }
  return new cljs.core.async.t20226(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___20311 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___20311, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___20311, out) {
            return function(state_20290) {
              var state_val_20291 = state_20290[1];
              if (state_val_20291 === 7) {
                var inst_20286 = state_20290[2];
                var state_20290__$1 = state_20290;
                var statearr_20292_20312 = state_20290__$1;
                statearr_20292_20312[2] = inst_20286;
                statearr_20292_20312[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20291 === 1) {
                  var state_20290__$1 = state_20290;
                  var statearr_20293_20313 = state_20290__$1;
                  statearr_20293_20313[2] = null;
                  statearr_20293_20313[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20291 === 4) {
                    var inst_20272 = state_20290[7];
                    var inst_20272__$1 = state_20290[2];
                    var inst_20273 = inst_20272__$1 == null;
                    var state_20290__$1 = function() {
                      var statearr_20294 = state_20290;
                      statearr_20294[7] = inst_20272__$1;
                      return statearr_20294;
                    }();
                    if (cljs.core.truth_(inst_20273)) {
                      var statearr_20295_20314 = state_20290__$1;
                      statearr_20295_20314[1] = 5;
                    } else {
                      var statearr_20296_20315 = state_20290__$1;
                      statearr_20296_20315[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20291 === 6) {
                      var inst_20272 = state_20290[7];
                      var inst_20277 = p.call(null, inst_20272);
                      var state_20290__$1 = state_20290;
                      if (cljs.core.truth_(inst_20277)) {
                        var statearr_20297_20316 = state_20290__$1;
                        statearr_20297_20316[1] = 8;
                      } else {
                        var statearr_20298_20317 = state_20290__$1;
                        statearr_20298_20317[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20291 === 3) {
                        var inst_20288 = state_20290[2];
                        var state_20290__$1 = state_20290;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20290__$1, inst_20288);
                      } else {
                        if (state_val_20291 === 2) {
                          var state_20290__$1 = state_20290;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20290__$1, 4, ch);
                        } else {
                          if (state_val_20291 === 11) {
                            var inst_20280 = state_20290[2];
                            var state_20290__$1 = state_20290;
                            var statearr_20299_20318 = state_20290__$1;
                            statearr_20299_20318[2] = inst_20280;
                            statearr_20299_20318[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20291 === 9) {
                              var state_20290__$1 = state_20290;
                              var statearr_20300_20319 = state_20290__$1;
                              statearr_20300_20319[2] = null;
                              statearr_20300_20319[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20291 === 5) {
                                var inst_20275 = cljs.core.async.close_BANG_.call(null, out);
                                var state_20290__$1 = state_20290;
                                var statearr_20301_20320 = state_20290__$1;
                                statearr_20301_20320[2] = inst_20275;
                                statearr_20301_20320[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20291 === 10) {
                                  var inst_20283 = state_20290[2];
                                  var state_20290__$1 = function() {
                                    var statearr_20302 = state_20290;
                                    statearr_20302[8] = inst_20283;
                                    return statearr_20302;
                                  }();
                                  var statearr_20303_20321 = state_20290__$1;
                                  statearr_20303_20321[2] = null;
                                  statearr_20303_20321[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20291 === 8) {
                                    var inst_20272 = state_20290[7];
                                    var state_20290__$1 = state_20290;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20290__$1, 11, out, inst_20272);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___20311, out);
          return function(switch__6353__auto__, c__6368__auto___20311, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_20307 = [null, null, null, null, null, null, null, null, null];
                statearr_20307[0] = state_machine__6354__auto__;
                statearr_20307[1] = 1;
                return statearr_20307;
              };
              var state_machine__6354__auto____1 = function(state_20290) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_20290);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e20308) {
                      if (e20308 instanceof Object) {
                        var ex__6357__auto__ = e20308;
                        var statearr_20309_20322 = state_20290;
                        statearr_20309_20322[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20290);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20308;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20323 = state_20290;
                    state_20290 = G__20323;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_20290) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_20290);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___20311, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_20310 = f__6369__auto__.call(null);
          statearr_20310[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___20311;
          return statearr_20310;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___20311, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_20489) {
            var state_val_20490 = state_20489[1];
            if (state_val_20490 === 7) {
              var inst_20485 = state_20489[2];
              var state_20489__$1 = state_20489;
              var statearr_20491_20532 = state_20489__$1;
              statearr_20491_20532[2] = inst_20485;
              statearr_20491_20532[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20490 === 20) {
                var inst_20455 = state_20489[7];
                var inst_20466 = state_20489[2];
                var inst_20467 = cljs.core.next.call(null, inst_20455);
                var inst_20441 = inst_20467;
                var inst_20442 = null;
                var inst_20443 = 0;
                var inst_20444 = 0;
                var state_20489__$1 = function() {
                  var statearr_20492 = state_20489;
                  statearr_20492[8] = inst_20443;
                  statearr_20492[9] = inst_20444;
                  statearr_20492[10] = inst_20466;
                  statearr_20492[11] = inst_20441;
                  statearr_20492[12] = inst_20442;
                  return statearr_20492;
                }();
                var statearr_20493_20533 = state_20489__$1;
                statearr_20493_20533[2] = null;
                statearr_20493_20533[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20490 === 1) {
                  var state_20489__$1 = state_20489;
                  var statearr_20494_20534 = state_20489__$1;
                  statearr_20494_20534[2] = null;
                  statearr_20494_20534[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20490 === 4) {
                    var inst_20430 = state_20489[13];
                    var inst_20430__$1 = state_20489[2];
                    var inst_20431 = inst_20430__$1 == null;
                    var state_20489__$1 = function() {
                      var statearr_20495 = state_20489;
                      statearr_20495[13] = inst_20430__$1;
                      return statearr_20495;
                    }();
                    if (cljs.core.truth_(inst_20431)) {
                      var statearr_20496_20535 = state_20489__$1;
                      statearr_20496_20535[1] = 5;
                    } else {
                      var statearr_20497_20536 = state_20489__$1;
                      statearr_20497_20536[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20490 === 15) {
                      var state_20489__$1 = state_20489;
                      var statearr_20501_20537 = state_20489__$1;
                      statearr_20501_20537[2] = null;
                      statearr_20501_20537[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20490 === 21) {
                        var state_20489__$1 = state_20489;
                        var statearr_20502_20538 = state_20489__$1;
                        statearr_20502_20538[2] = null;
                        statearr_20502_20538[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20490 === 13) {
                          var inst_20443 = state_20489[8];
                          var inst_20444 = state_20489[9];
                          var inst_20441 = state_20489[11];
                          var inst_20442 = state_20489[12];
                          var inst_20451 = state_20489[2];
                          var inst_20452 = inst_20444 + 1;
                          var tmp20498 = inst_20443;
                          var tmp20499 = inst_20441;
                          var tmp20500 = inst_20442;
                          var inst_20441__$1 = tmp20499;
                          var inst_20442__$1 = tmp20500;
                          var inst_20443__$1 = tmp20498;
                          var inst_20444__$1 = inst_20452;
                          var state_20489__$1 = function() {
                            var statearr_20503 = state_20489;
                            statearr_20503[14] = inst_20451;
                            statearr_20503[8] = inst_20443__$1;
                            statearr_20503[9] = inst_20444__$1;
                            statearr_20503[11] = inst_20441__$1;
                            statearr_20503[12] = inst_20442__$1;
                            return statearr_20503;
                          }();
                          var statearr_20504_20539 = state_20489__$1;
                          statearr_20504_20539[2] = null;
                          statearr_20504_20539[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20490 === 22) {
                            var state_20489__$1 = state_20489;
                            var statearr_20505_20540 = state_20489__$1;
                            statearr_20505_20540[2] = null;
                            statearr_20505_20540[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20490 === 6) {
                              var inst_20430 = state_20489[13];
                              var inst_20439 = f.call(null, inst_20430);
                              var inst_20440 = cljs.core.seq.call(null, inst_20439);
                              var inst_20441 = inst_20440;
                              var inst_20442 = null;
                              var inst_20443 = 0;
                              var inst_20444 = 0;
                              var state_20489__$1 = function() {
                                var statearr_20506 = state_20489;
                                statearr_20506[8] = inst_20443;
                                statearr_20506[9] = inst_20444;
                                statearr_20506[11] = inst_20441;
                                statearr_20506[12] = inst_20442;
                                return statearr_20506;
                              }();
                              var statearr_20507_20541 = state_20489__$1;
                              statearr_20507_20541[2] = null;
                              statearr_20507_20541[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20490 === 17) {
                                var inst_20455 = state_20489[7];
                                var inst_20459 = cljs.core.chunk_first.call(null, inst_20455);
                                var inst_20460 = cljs.core.chunk_rest.call(null, inst_20455);
                                var inst_20461 = cljs.core.count.call(null, inst_20459);
                                var inst_20441 = inst_20460;
                                var inst_20442 = inst_20459;
                                var inst_20443 = inst_20461;
                                var inst_20444 = 0;
                                var state_20489__$1 = function() {
                                  var statearr_20508 = state_20489;
                                  statearr_20508[8] = inst_20443;
                                  statearr_20508[9] = inst_20444;
                                  statearr_20508[11] = inst_20441;
                                  statearr_20508[12] = inst_20442;
                                  return statearr_20508;
                                }();
                                var statearr_20509_20542 = state_20489__$1;
                                statearr_20509_20542[2] = null;
                                statearr_20509_20542[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20490 === 3) {
                                  var inst_20487 = state_20489[2];
                                  var state_20489__$1 = state_20489;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20489__$1, inst_20487);
                                } else {
                                  if (state_val_20490 === 12) {
                                    var inst_20475 = state_20489[2];
                                    var state_20489__$1 = state_20489;
                                    var statearr_20510_20543 = state_20489__$1;
                                    statearr_20510_20543[2] = inst_20475;
                                    statearr_20510_20543[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20490 === 2) {
                                      var state_20489__$1 = state_20489;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20489__$1, 4, in$);
                                    } else {
                                      if (state_val_20490 === 23) {
                                        var inst_20483 = state_20489[2];
                                        var state_20489__$1 = state_20489;
                                        var statearr_20511_20544 = state_20489__$1;
                                        statearr_20511_20544[2] = inst_20483;
                                        statearr_20511_20544[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20490 === 19) {
                                          var inst_20470 = state_20489[2];
                                          var state_20489__$1 = state_20489;
                                          var statearr_20512_20545 = state_20489__$1;
                                          statearr_20512_20545[2] = inst_20470;
                                          statearr_20512_20545[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_20490 === 11) {
                                            var inst_20455 = state_20489[7];
                                            var inst_20441 = state_20489[11];
                                            var inst_20455__$1 = cljs.core.seq.call(null, inst_20441);
                                            var state_20489__$1 = function() {
                                              var statearr_20513 = state_20489;
                                              statearr_20513[7] = inst_20455__$1;
                                              return statearr_20513;
                                            }();
                                            if (inst_20455__$1) {
                                              var statearr_20514_20546 = state_20489__$1;
                                              statearr_20514_20546[1] = 14;
                                            } else {
                                              var statearr_20515_20547 = state_20489__$1;
                                              statearr_20515_20547[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_20490 === 9) {
                                              var inst_20477 = state_20489[2];
                                              var inst_20478 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_20489__$1 = function() {
                                                var statearr_20516 = state_20489;
                                                statearr_20516[15] = inst_20477;
                                                return statearr_20516;
                                              }();
                                              if (cljs.core.truth_(inst_20478)) {
                                                var statearr_20517_20548 = state_20489__$1;
                                                statearr_20517_20548[1] = 21;
                                              } else {
                                                var statearr_20518_20549 = state_20489__$1;
                                                statearr_20518_20549[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_20490 === 5) {
                                                var inst_20433 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_20489__$1 = state_20489;
                                                var statearr_20519_20550 = state_20489__$1;
                                                statearr_20519_20550[2] = inst_20433;
                                                statearr_20519_20550[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_20490 === 14) {
                                                  var inst_20455 = state_20489[7];
                                                  var inst_20457 = cljs.core.chunked_seq_QMARK_.call(null, inst_20455);
                                                  var state_20489__$1 = state_20489;
                                                  if (inst_20457) {
                                                    var statearr_20520_20551 = state_20489__$1;
                                                    statearr_20520_20551[1] = 17;
                                                  } else {
                                                    var statearr_20521_20552 = state_20489__$1;
                                                    statearr_20521_20552[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_20490 === 16) {
                                                    var inst_20473 = state_20489[2];
                                                    var state_20489__$1 = state_20489;
                                                    var statearr_20522_20553 = state_20489__$1;
                                                    statearr_20522_20553[2] = inst_20473;
                                                    statearr_20522_20553[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_20490 === 10) {
                                                      var inst_20444 = state_20489[9];
                                                      var inst_20442 = state_20489[12];
                                                      var inst_20449 = cljs.core._nth.call(null, inst_20442, inst_20444);
                                                      var state_20489__$1 = state_20489;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20489__$1, 13, out, inst_20449);
                                                    } else {
                                                      if (state_val_20490 === 18) {
                                                        var inst_20455 = state_20489[7];
                                                        var inst_20464 = cljs.core.first.call(null, inst_20455);
                                                        var state_20489__$1 = state_20489;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20489__$1, 20, out, inst_20464);
                                                      } else {
                                                        if (state_val_20490 === 8) {
                                                          var inst_20443 = state_20489[8];
                                                          var inst_20444 = state_20489[9];
                                                          var inst_20446 = inst_20444 < inst_20443;
                                                          var inst_20447 = inst_20446;
                                                          var state_20489__$1 = state_20489;
                                                          if (cljs.core.truth_(inst_20447)) {
                                                            var statearr_20523_20554 = state_20489__$1;
                                                            statearr_20523_20554[1] = 10;
                                                          } else {
                                                            var statearr_20524_20555 = state_20489__$1;
                                                            statearr_20524_20555[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_20528 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_20528[0] = state_machine__6354__auto__;
              statearr_20528[1] = 1;
              return statearr_20528;
            };
            var state_machine__6354__auto____1 = function(state_20489) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_20489);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e20529) {
                    if (e20529 instanceof Object) {
                      var ex__6357__auto__ = e20529;
                      var statearr_20530_20556 = state_20489;
                      statearr_20530_20556[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20489);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20529;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20557 = state_20489;
                  state_20489 = G__20557;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_20489) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_20489);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_20531 = f__6369__auto__.call(null);
        statearr_20531[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_20531;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6368__auto___20652 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___20652) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___20652) {
            return function(state_20628) {
              var state_val_20629 = state_20628[1];
              if (state_val_20629 === 7) {
                var inst_20624 = state_20628[2];
                var state_20628__$1 = state_20628;
                var statearr_20630_20653 = state_20628__$1;
                statearr_20630_20653[2] = inst_20624;
                statearr_20630_20653[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20629 === 1) {
                  var state_20628__$1 = state_20628;
                  var statearr_20631_20654 = state_20628__$1;
                  statearr_20631_20654[2] = null;
                  statearr_20631_20654[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20629 === 4) {
                    var inst_20607 = state_20628[7];
                    var inst_20607__$1 = state_20628[2];
                    var inst_20608 = inst_20607__$1 == null;
                    var state_20628__$1 = function() {
                      var statearr_20632 = state_20628;
                      statearr_20632[7] = inst_20607__$1;
                      return statearr_20632;
                    }();
                    if (cljs.core.truth_(inst_20608)) {
                      var statearr_20633_20655 = state_20628__$1;
                      statearr_20633_20655[1] = 5;
                    } else {
                      var statearr_20634_20656 = state_20628__$1;
                      statearr_20634_20656[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20629 === 13) {
                      var state_20628__$1 = state_20628;
                      var statearr_20635_20657 = state_20628__$1;
                      statearr_20635_20657[2] = null;
                      statearr_20635_20657[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20629 === 6) {
                        var inst_20607 = state_20628[7];
                        var state_20628__$1 = state_20628;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20628__$1, 11, to, inst_20607);
                      } else {
                        if (state_val_20629 === 3) {
                          var inst_20626 = state_20628[2];
                          var state_20628__$1 = state_20628;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20628__$1, inst_20626);
                        } else {
                          if (state_val_20629 === 12) {
                            var state_20628__$1 = state_20628;
                            var statearr_20636_20658 = state_20628__$1;
                            statearr_20636_20658[2] = null;
                            statearr_20636_20658[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20629 === 2) {
                              var state_20628__$1 = state_20628;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20628__$1, 4, from);
                            } else {
                              if (state_val_20629 === 11) {
                                var inst_20617 = state_20628[2];
                                var state_20628__$1 = state_20628;
                                if (cljs.core.truth_(inst_20617)) {
                                  var statearr_20637_20659 = state_20628__$1;
                                  statearr_20637_20659[1] = 12;
                                } else {
                                  var statearr_20638_20660 = state_20628__$1;
                                  statearr_20638_20660[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20629 === 9) {
                                  var state_20628__$1 = state_20628;
                                  var statearr_20639_20661 = state_20628__$1;
                                  statearr_20639_20661[2] = null;
                                  statearr_20639_20661[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20629 === 5) {
                                    var state_20628__$1 = state_20628;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_20640_20662 = state_20628__$1;
                                      statearr_20640_20662[1] = 8;
                                    } else {
                                      var statearr_20641_20663 = state_20628__$1;
                                      statearr_20641_20663[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20629 === 14) {
                                      var inst_20622 = state_20628[2];
                                      var state_20628__$1 = state_20628;
                                      var statearr_20642_20664 = state_20628__$1;
                                      statearr_20642_20664[2] = inst_20622;
                                      statearr_20642_20664[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20629 === 10) {
                                        var inst_20614 = state_20628[2];
                                        var state_20628__$1 = state_20628;
                                        var statearr_20643_20665 = state_20628__$1;
                                        statearr_20643_20665[2] = inst_20614;
                                        statearr_20643_20665[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20629 === 8) {
                                          var inst_20611 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_20628__$1 = state_20628;
                                          var statearr_20644_20666 = state_20628__$1;
                                          statearr_20644_20666[2] = inst_20611;
                                          statearr_20644_20666[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___20652);
          return function(switch__6353__auto__, c__6368__auto___20652) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_20648 = [null, null, null, null, null, null, null, null];
                statearr_20648[0] = state_machine__6354__auto__;
                statearr_20648[1] = 1;
                return statearr_20648;
              };
              var state_machine__6354__auto____1 = function(state_20628) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_20628);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e20649) {
                      if (e20649 instanceof Object) {
                        var ex__6357__auto__ = e20649;
                        var statearr_20650_20667 = state_20628;
                        statearr_20650_20667[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20628);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20649;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20668 = state_20628;
                    state_20628 = G__20668;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_20628) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_20628);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___20652);
        }();
        var state__6370__auto__ = function() {
          var statearr_20651 = f__6369__auto__.call(null);
          statearr_20651[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___20652;
          return statearr_20651;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___20652));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6368__auto___20769 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___20769, tc, fc) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___20769, tc, fc) {
            return function(state_20744) {
              var state_val_20745 = state_20744[1];
              if (state_val_20745 === 7) {
                var inst_20740 = state_20744[2];
                var state_20744__$1 = state_20744;
                var statearr_20746_20770 = state_20744__$1;
                statearr_20746_20770[2] = inst_20740;
                statearr_20746_20770[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20745 === 1) {
                  var state_20744__$1 = state_20744;
                  var statearr_20747_20771 = state_20744__$1;
                  statearr_20747_20771[2] = null;
                  statearr_20747_20771[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20745 === 4) {
                    var inst_20721 = state_20744[7];
                    var inst_20721__$1 = state_20744[2];
                    var inst_20722 = inst_20721__$1 == null;
                    var state_20744__$1 = function() {
                      var statearr_20748 = state_20744;
                      statearr_20748[7] = inst_20721__$1;
                      return statearr_20748;
                    }();
                    if (cljs.core.truth_(inst_20722)) {
                      var statearr_20749_20772 = state_20744__$1;
                      statearr_20749_20772[1] = 5;
                    } else {
                      var statearr_20750_20773 = state_20744__$1;
                      statearr_20750_20773[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20745 === 13) {
                      var state_20744__$1 = state_20744;
                      var statearr_20751_20774 = state_20744__$1;
                      statearr_20751_20774[2] = null;
                      statearr_20751_20774[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20745 === 6) {
                        var inst_20721 = state_20744[7];
                        var inst_20727 = p.call(null, inst_20721);
                        var state_20744__$1 = state_20744;
                        if (cljs.core.truth_(inst_20727)) {
                          var statearr_20752_20775 = state_20744__$1;
                          statearr_20752_20775[1] = 9;
                        } else {
                          var statearr_20753_20776 = state_20744__$1;
                          statearr_20753_20776[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20745 === 3) {
                          var inst_20742 = state_20744[2];
                          var state_20744__$1 = state_20744;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20744__$1, inst_20742);
                        } else {
                          if (state_val_20745 === 12) {
                            var state_20744__$1 = state_20744;
                            var statearr_20754_20777 = state_20744__$1;
                            statearr_20754_20777[2] = null;
                            statearr_20754_20777[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20745 === 2) {
                              var state_20744__$1 = state_20744;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20744__$1, 4, ch);
                            } else {
                              if (state_val_20745 === 11) {
                                var inst_20721 = state_20744[7];
                                var inst_20731 = state_20744[2];
                                var state_20744__$1 = state_20744;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20744__$1, 8, inst_20731, inst_20721);
                              } else {
                                if (state_val_20745 === 9) {
                                  var state_20744__$1 = state_20744;
                                  var statearr_20755_20778 = state_20744__$1;
                                  statearr_20755_20778[2] = tc;
                                  statearr_20755_20778[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20745 === 5) {
                                    var inst_20724 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_20725 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_20744__$1 = function() {
                                      var statearr_20756 = state_20744;
                                      statearr_20756[8] = inst_20724;
                                      return statearr_20756;
                                    }();
                                    var statearr_20757_20779 = state_20744__$1;
                                    statearr_20757_20779[2] = inst_20725;
                                    statearr_20757_20779[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20745 === 14) {
                                      var inst_20738 = state_20744[2];
                                      var state_20744__$1 = state_20744;
                                      var statearr_20758_20780 = state_20744__$1;
                                      statearr_20758_20780[2] = inst_20738;
                                      statearr_20758_20780[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20745 === 10) {
                                        var state_20744__$1 = state_20744;
                                        var statearr_20759_20781 = state_20744__$1;
                                        statearr_20759_20781[2] = fc;
                                        statearr_20759_20781[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20745 === 8) {
                                          var inst_20733 = state_20744[2];
                                          var state_20744__$1 = state_20744;
                                          if (cljs.core.truth_(inst_20733)) {
                                            var statearr_20760_20782 = state_20744__$1;
                                            statearr_20760_20782[1] = 12;
                                          } else {
                                            var statearr_20761_20783 = state_20744__$1;
                                            statearr_20761_20783[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___20769, tc, fc);
          return function(switch__6353__auto__, c__6368__auto___20769, tc, fc) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_20765 = [null, null, null, null, null, null, null, null, null];
                statearr_20765[0] = state_machine__6354__auto__;
                statearr_20765[1] = 1;
                return statearr_20765;
              };
              var state_machine__6354__auto____1 = function(state_20744) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_20744);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e20766) {
                      if (e20766 instanceof Object) {
                        var ex__6357__auto__ = e20766;
                        var statearr_20767_20784 = state_20744;
                        statearr_20767_20784[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20744);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20766;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20785 = state_20744;
                    state_20744 = G__20785;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_20744) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_20744);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___20769, tc, fc);
        }();
        var state__6370__auto__ = function() {
          var statearr_20768 = f__6369__auto__.call(null);
          statearr_20768[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___20769;
          return statearr_20768;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___20769, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_20832) {
            var state_val_20833 = state_20832[1];
            if (state_val_20833 === 7) {
              var inst_20828 = state_20832[2];
              var state_20832__$1 = state_20832;
              var statearr_20834_20850 = state_20832__$1;
              statearr_20834_20850[2] = inst_20828;
              statearr_20834_20850[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_20833 === 6) {
                var inst_20818 = state_20832[7];
                var inst_20821 = state_20832[8];
                var inst_20825 = f.call(null, inst_20818, inst_20821);
                var inst_20818__$1 = inst_20825;
                var state_20832__$1 = function() {
                  var statearr_20835 = state_20832;
                  statearr_20835[7] = inst_20818__$1;
                  return statearr_20835;
                }();
                var statearr_20836_20851 = state_20832__$1;
                statearr_20836_20851[2] = null;
                statearr_20836_20851[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20833 === 5) {
                  var inst_20818 = state_20832[7];
                  var state_20832__$1 = state_20832;
                  var statearr_20837_20852 = state_20832__$1;
                  statearr_20837_20852[2] = inst_20818;
                  statearr_20837_20852[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20833 === 4) {
                    var inst_20821 = state_20832[8];
                    var inst_20821__$1 = state_20832[2];
                    var inst_20822 = inst_20821__$1 == null;
                    var state_20832__$1 = function() {
                      var statearr_20838 = state_20832;
                      statearr_20838[8] = inst_20821__$1;
                      return statearr_20838;
                    }();
                    if (cljs.core.truth_(inst_20822)) {
                      var statearr_20839_20853 = state_20832__$1;
                      statearr_20839_20853[1] = 5;
                    } else {
                      var statearr_20840_20854 = state_20832__$1;
                      statearr_20840_20854[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20833 === 3) {
                      var inst_20830 = state_20832[2];
                      var state_20832__$1 = state_20832;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20832__$1, inst_20830);
                    } else {
                      if (state_val_20833 === 2) {
                        var state_20832__$1 = state_20832;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20832__$1, 4, ch);
                      } else {
                        if (state_val_20833 === 1) {
                          var inst_20818 = init;
                          var state_20832__$1 = function() {
                            var statearr_20841 = state_20832;
                            statearr_20841[7] = inst_20818;
                            return statearr_20841;
                          }();
                          var statearr_20842_20855 = state_20832__$1;
                          statearr_20842_20855[2] = null;
                          statearr_20842_20855[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_20846 = [null, null, null, null, null, null, null, null, null];
              statearr_20846[0] = state_machine__6354__auto__;
              statearr_20846[1] = 1;
              return statearr_20846;
            };
            var state_machine__6354__auto____1 = function(state_20832) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_20832);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e20847) {
                    if (e20847 instanceof Object) {
                      var ex__6357__auto__ = e20847;
                      var statearr_20848_20856 = state_20832;
                      statearr_20848_20856[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20832);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e20847;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__20857 = state_20832;
                  state_20832 = G__20857;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_20832) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_20832);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_20849 = f__6369__auto__.call(null);
        statearr_20849[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_20849;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto__) {
            return function(state_20931) {
              var state_val_20932 = state_20931[1];
              if (state_val_20932 === 7) {
                var inst_20913 = state_20931[2];
                var state_20931__$1 = state_20931;
                var statearr_20933_20956 = state_20931__$1;
                statearr_20933_20956[2] = inst_20913;
                statearr_20933_20956[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20932 === 1) {
                  var inst_20907 = cljs.core.seq.call(null, coll);
                  var inst_20908 = inst_20907;
                  var state_20931__$1 = function() {
                    var statearr_20934 = state_20931;
                    statearr_20934[7] = inst_20908;
                    return statearr_20934;
                  }();
                  var statearr_20935_20957 = state_20931__$1;
                  statearr_20935_20957[2] = null;
                  statearr_20935_20957[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20932 === 4) {
                    var inst_20908 = state_20931[7];
                    var inst_20911 = cljs.core.first.call(null, inst_20908);
                    var state_20931__$1 = state_20931;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20931__$1, 7, ch, inst_20911);
                  } else {
                    if (state_val_20932 === 13) {
                      var inst_20925 = state_20931[2];
                      var state_20931__$1 = state_20931;
                      var statearr_20936_20958 = state_20931__$1;
                      statearr_20936_20958[2] = inst_20925;
                      statearr_20936_20958[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20932 === 6) {
                        var inst_20916 = state_20931[2];
                        var state_20931__$1 = state_20931;
                        if (cljs.core.truth_(inst_20916)) {
                          var statearr_20937_20959 = state_20931__$1;
                          statearr_20937_20959[1] = 8;
                        } else {
                          var statearr_20938_20960 = state_20931__$1;
                          statearr_20938_20960[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20932 === 3) {
                          var inst_20929 = state_20931[2];
                          var state_20931__$1 = state_20931;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20931__$1, inst_20929);
                        } else {
                          if (state_val_20932 === 12) {
                            var state_20931__$1 = state_20931;
                            var statearr_20939_20961 = state_20931__$1;
                            statearr_20939_20961[2] = null;
                            statearr_20939_20961[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20932 === 2) {
                              var inst_20908 = state_20931[7];
                              var state_20931__$1 = state_20931;
                              if (cljs.core.truth_(inst_20908)) {
                                var statearr_20940_20962 = state_20931__$1;
                                statearr_20940_20962[1] = 4;
                              } else {
                                var statearr_20941_20963 = state_20931__$1;
                                statearr_20941_20963[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_20932 === 11) {
                                var inst_20922 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_20931__$1 = state_20931;
                                var statearr_20942_20964 = state_20931__$1;
                                statearr_20942_20964[2] = inst_20922;
                                statearr_20942_20964[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20932 === 9) {
                                  var state_20931__$1 = state_20931;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_20943_20965 = state_20931__$1;
                                    statearr_20943_20965[1] = 11;
                                  } else {
                                    var statearr_20944_20966 = state_20931__$1;
                                    statearr_20944_20966[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20932 === 5) {
                                    var inst_20908 = state_20931[7];
                                    var state_20931__$1 = state_20931;
                                    var statearr_20945_20967 = state_20931__$1;
                                    statearr_20945_20967[2] = inst_20908;
                                    statearr_20945_20967[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20932 === 10) {
                                      var inst_20927 = state_20931[2];
                                      var state_20931__$1 = state_20931;
                                      var statearr_20946_20968 = state_20931__$1;
                                      statearr_20946_20968[2] = inst_20927;
                                      statearr_20946_20968[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20932 === 8) {
                                        var inst_20908 = state_20931[7];
                                        var inst_20918 = cljs.core.next.call(null, inst_20908);
                                        var inst_20908__$1 = inst_20918;
                                        var state_20931__$1 = function() {
                                          var statearr_20947 = state_20931;
                                          statearr_20947[7] = inst_20908__$1;
                                          return statearr_20947;
                                        }();
                                        var statearr_20948_20969 = state_20931__$1;
                                        statearr_20948_20969[2] = null;
                                        statearr_20948_20969[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto__);
          return function(switch__6353__auto__, c__6368__auto__) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_20952 = [null, null, null, null, null, null, null, null];
                statearr_20952[0] = state_machine__6354__auto__;
                statearr_20952[1] = 1;
                return statearr_20952;
              };
              var state_machine__6354__auto____1 = function(state_20931) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_20931);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e20953) {
                      if (e20953 instanceof Object) {
                        var ex__6357__auto__ = e20953;
                        var statearr_20954_20970 = state_20931;
                        statearr_20954_20970[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20931);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20953;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20971 = state_20931;
                    state_20931 = G__20971;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_20931) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_20931);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto__);
        }();
        var state__6370__auto__ = function() {
          var statearr_20955 = f__6369__auto__.call(null);
          statearr_20955[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
          return statearr_20955;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto__));
    return c__6368__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj20973 = {};
  return obj20973;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3539__auto__ = _;
    if (and__3539__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4178__auto__ = _ == null ? null : _;
    return function() {
      var or__3551__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj20975 = {};
  return obj20975;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t21197 !== "undefined") {
    } else {
      cljs.core.async.t21197 = function(cs, ch, mult, meta21198) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta21198 = meta21198;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t21197.cljs$lang$type = true;
      cljs.core.async.t21197.cljs$lang$ctorStr = "cljs.core.async/t21197";
      cljs.core.async.t21197.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
          return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t21197");
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t21197.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t21197.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_21199) {
          var self__ = this;
          var _21199__$1 = this;
          return self__.meta21198;
        };
      }(cs);
      cljs.core.async.t21197.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_21199, meta21198__$1) {
          var self__ = this;
          var _21199__$1 = this;
          return new cljs.core.async.t21197(self__.cs, self__.ch, self__.mult, meta21198__$1);
        };
      }(cs);
      cljs.core.async.__GT_t21197 = function(cs) {
        return function __GT_t21197(cs__$1, ch__$1, mult__$1, meta21198) {
          return new cljs.core.async.t21197(cs__$1, ch__$1, mult__$1, meta21198);
        };
      }(cs);
    }
    return new cljs.core.async.t21197(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6368__auto___21418 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___21418, cs, m, dchan, dctr, done) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto___21418, cs, m, dchan, dctr, done) {
          return function(state_21330) {
            var state_val_21331 = state_21330[1];
            if (state_val_21331 === 7) {
              var inst_21326 = state_21330[2];
              var state_21330__$1 = state_21330;
              var statearr_21332_21419 = state_21330__$1;
              statearr_21332_21419[2] = inst_21326;
              statearr_21332_21419[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21331 === 20) {
                var inst_21231 = state_21330[7];
                var inst_21241 = cljs.core.first.call(null, inst_21231);
                var inst_21242 = cljs.core.nth.call(null, inst_21241, 0, null);
                var inst_21243 = cljs.core.nth.call(null, inst_21241, 1, null);
                var state_21330__$1 = function() {
                  var statearr_21333 = state_21330;
                  statearr_21333[8] = inst_21242;
                  return statearr_21333;
                }();
                if (cljs.core.truth_(inst_21243)) {
                  var statearr_21334_21420 = state_21330__$1;
                  statearr_21334_21420[1] = 22;
                } else {
                  var statearr_21335_21421 = state_21330__$1;
                  statearr_21335_21421[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21331 === 27) {
                  var inst_21273 = state_21330[9];
                  var inst_21202 = state_21330[10];
                  var inst_21278 = state_21330[11];
                  var inst_21271 = state_21330[12];
                  var inst_21278__$1 = cljs.core._nth.call(null, inst_21271, inst_21273);
                  var inst_21279 = cljs.core.async.put_BANG_.call(null, inst_21278__$1, inst_21202, done);
                  var state_21330__$1 = function() {
                    var statearr_21336 = state_21330;
                    statearr_21336[11] = inst_21278__$1;
                    return statearr_21336;
                  }();
                  if (cljs.core.truth_(inst_21279)) {
                    var statearr_21337_21422 = state_21330__$1;
                    statearr_21337_21422[1] = 30;
                  } else {
                    var statearr_21338_21423 = state_21330__$1;
                    statearr_21338_21423[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21331 === 1) {
                    var state_21330__$1 = state_21330;
                    var statearr_21339_21424 = state_21330__$1;
                    statearr_21339_21424[2] = null;
                    statearr_21339_21424[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21331 === 24) {
                      var inst_21231 = state_21330[7];
                      var inst_21248 = state_21330[2];
                      var inst_21249 = cljs.core.next.call(null, inst_21231);
                      var inst_21211 = inst_21249;
                      var inst_21212 = null;
                      var inst_21213 = 0;
                      var inst_21214 = 0;
                      var state_21330__$1 = function() {
                        var statearr_21340 = state_21330;
                        statearr_21340[13] = inst_21213;
                        statearr_21340[14] = inst_21248;
                        statearr_21340[15] = inst_21214;
                        statearr_21340[16] = inst_21211;
                        statearr_21340[17] = inst_21212;
                        return statearr_21340;
                      }();
                      var statearr_21341_21425 = state_21330__$1;
                      statearr_21341_21425[2] = null;
                      statearr_21341_21425[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21331 === 39) {
                        var state_21330__$1 = state_21330;
                        var statearr_21345_21426 = state_21330__$1;
                        statearr_21345_21426[2] = null;
                        statearr_21345_21426[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21331 === 4) {
                          var inst_21202 = state_21330[10];
                          var inst_21202__$1 = state_21330[2];
                          var inst_21203 = inst_21202__$1 == null;
                          var state_21330__$1 = function() {
                            var statearr_21346 = state_21330;
                            statearr_21346[10] = inst_21202__$1;
                            return statearr_21346;
                          }();
                          if (cljs.core.truth_(inst_21203)) {
                            var statearr_21347_21427 = state_21330__$1;
                            statearr_21347_21427[1] = 5;
                          } else {
                            var statearr_21348_21428 = state_21330__$1;
                            statearr_21348_21428[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21331 === 15) {
                            var inst_21213 = state_21330[13];
                            var inst_21214 = state_21330[15];
                            var inst_21211 = state_21330[16];
                            var inst_21212 = state_21330[17];
                            var inst_21227 = state_21330[2];
                            var inst_21228 = inst_21214 + 1;
                            var tmp21342 = inst_21213;
                            var tmp21343 = inst_21211;
                            var tmp21344 = inst_21212;
                            var inst_21211__$1 = tmp21343;
                            var inst_21212__$1 = tmp21344;
                            var inst_21213__$1 = tmp21342;
                            var inst_21214__$1 = inst_21228;
                            var state_21330__$1 = function() {
                              var statearr_21349 = state_21330;
                              statearr_21349[13] = inst_21213__$1;
                              statearr_21349[15] = inst_21214__$1;
                              statearr_21349[16] = inst_21211__$1;
                              statearr_21349[17] = inst_21212__$1;
                              statearr_21349[18] = inst_21227;
                              return statearr_21349;
                            }();
                            var statearr_21350_21429 = state_21330__$1;
                            statearr_21350_21429[2] = null;
                            statearr_21350_21429[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21331 === 21) {
                              var inst_21252 = state_21330[2];
                              var state_21330__$1 = state_21330;
                              var statearr_21354_21430 = state_21330__$1;
                              statearr_21354_21430[2] = inst_21252;
                              statearr_21354_21430[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21331 === 31) {
                                var inst_21278 = state_21330[11];
                                var inst_21282 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_21283 = cljs.core.async.untap_STAR_.call(null, m, inst_21278);
                                var state_21330__$1 = function() {
                                  var statearr_21355 = state_21330;
                                  statearr_21355[19] = inst_21282;
                                  return statearr_21355;
                                }();
                                var statearr_21356_21431 = state_21330__$1;
                                statearr_21356_21431[2] = inst_21283;
                                statearr_21356_21431[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21331 === 32) {
                                  var inst_21273 = state_21330[9];
                                  var inst_21270 = state_21330[20];
                                  var inst_21272 = state_21330[21];
                                  var inst_21271 = state_21330[12];
                                  var inst_21285 = state_21330[2];
                                  var inst_21286 = inst_21273 + 1;
                                  var tmp21351 = inst_21270;
                                  var tmp21352 = inst_21272;
                                  var tmp21353 = inst_21271;
                                  var inst_21270__$1 = tmp21351;
                                  var inst_21271__$1 = tmp21353;
                                  var inst_21272__$1 = tmp21352;
                                  var inst_21273__$1 = inst_21286;
                                  var state_21330__$1 = function() {
                                    var statearr_21357 = state_21330;
                                    statearr_21357[9] = inst_21273__$1;
                                    statearr_21357[20] = inst_21270__$1;
                                    statearr_21357[21] = inst_21272__$1;
                                    statearr_21357[22] = inst_21285;
                                    statearr_21357[12] = inst_21271__$1;
                                    return statearr_21357;
                                  }();
                                  var statearr_21358_21432 = state_21330__$1;
                                  statearr_21358_21432[2] = null;
                                  statearr_21358_21432[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21331 === 40) {
                                    var inst_21298 = state_21330[23];
                                    var inst_21302 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_21303 = cljs.core.async.untap_STAR_.call(null, m, inst_21298);
                                    var state_21330__$1 = function() {
                                      var statearr_21359 = state_21330;
                                      statearr_21359[24] = inst_21302;
                                      return statearr_21359;
                                    }();
                                    var statearr_21360_21433 = state_21330__$1;
                                    statearr_21360_21433[2] = inst_21303;
                                    statearr_21360_21433[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21331 === 33) {
                                      var inst_21289 = state_21330[25];
                                      var inst_21291 = cljs.core.chunked_seq_QMARK_.call(null, inst_21289);
                                      var state_21330__$1 = state_21330;
                                      if (inst_21291) {
                                        var statearr_21361_21434 = state_21330__$1;
                                        statearr_21361_21434[1] = 36;
                                      } else {
                                        var statearr_21362_21435 = state_21330__$1;
                                        statearr_21362_21435[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21331 === 13) {
                                        var inst_21221 = state_21330[26];
                                        var inst_21224 = cljs.core.async.close_BANG_.call(null, inst_21221);
                                        var state_21330__$1 = state_21330;
                                        var statearr_21363_21436 = state_21330__$1;
                                        statearr_21363_21436[2] = inst_21224;
                                        statearr_21363_21436[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21331 === 22) {
                                          var inst_21242 = state_21330[8];
                                          var inst_21245 = cljs.core.async.close_BANG_.call(null, inst_21242);
                                          var state_21330__$1 = state_21330;
                                          var statearr_21364_21437 = state_21330__$1;
                                          statearr_21364_21437[2] = inst_21245;
                                          statearr_21364_21437[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21331 === 36) {
                                            var inst_21289 = state_21330[25];
                                            var inst_21293 = cljs.core.chunk_first.call(null, inst_21289);
                                            var inst_21294 = cljs.core.chunk_rest.call(null, inst_21289);
                                            var inst_21295 = cljs.core.count.call(null, inst_21293);
                                            var inst_21270 = inst_21294;
                                            var inst_21271 = inst_21293;
                                            var inst_21272 = inst_21295;
                                            var inst_21273 = 0;
                                            var state_21330__$1 = function() {
                                              var statearr_21365 = state_21330;
                                              statearr_21365[9] = inst_21273;
                                              statearr_21365[20] = inst_21270;
                                              statearr_21365[21] = inst_21272;
                                              statearr_21365[12] = inst_21271;
                                              return statearr_21365;
                                            }();
                                            var statearr_21366_21438 = state_21330__$1;
                                            statearr_21366_21438[2] = null;
                                            statearr_21366_21438[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21331 === 41) {
                                              var inst_21289 = state_21330[25];
                                              var inst_21305 = state_21330[2];
                                              var inst_21306 = cljs.core.next.call(null, inst_21289);
                                              var inst_21270 = inst_21306;
                                              var inst_21271 = null;
                                              var inst_21272 = 0;
                                              var inst_21273 = 0;
                                              var state_21330__$1 = function() {
                                                var statearr_21367 = state_21330;
                                                statearr_21367[27] = inst_21305;
                                                statearr_21367[9] = inst_21273;
                                                statearr_21367[20] = inst_21270;
                                                statearr_21367[21] = inst_21272;
                                                statearr_21367[12] = inst_21271;
                                                return statearr_21367;
                                              }();
                                              var statearr_21368_21439 = state_21330__$1;
                                              statearr_21368_21439[2] = null;
                                              statearr_21368_21439[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21331 === 43) {
                                                var state_21330__$1 = state_21330;
                                                var statearr_21369_21440 = state_21330__$1;
                                                statearr_21369_21440[2] = null;
                                                statearr_21369_21440[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21331 === 29) {
                                                  var inst_21314 = state_21330[2];
                                                  var state_21330__$1 = state_21330;
                                                  var statearr_21370_21441 = state_21330__$1;
                                                  statearr_21370_21441[2] = inst_21314;
                                                  statearr_21370_21441[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21331 === 44) {
                                                    var inst_21323 = state_21330[2];
                                                    var state_21330__$1 = function() {
                                                      var statearr_21371 = state_21330;
                                                      statearr_21371[28] = inst_21323;
                                                      return statearr_21371;
                                                    }();
                                                    var statearr_21372_21442 = state_21330__$1;
                                                    statearr_21372_21442[2] = null;
                                                    statearr_21372_21442[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21331 === 6) {
                                                      var inst_21262 = state_21330[29];
                                                      var inst_21261 = cljs.core.deref.call(null, cs);
                                                      var inst_21262__$1 = cljs.core.keys.call(null, inst_21261);
                                                      var inst_21263 = cljs.core.count.call(null, inst_21262__$1);
                                                      var inst_21264 = cljs.core.reset_BANG_.call(null, dctr, inst_21263);
                                                      var inst_21269 = cljs.core.seq.call(null, inst_21262__$1);
                                                      var inst_21270 = inst_21269;
                                                      var inst_21271 = null;
                                                      var inst_21272 = 0;
                                                      var inst_21273 = 0;
                                                      var state_21330__$1 = function() {
                                                        var statearr_21373 = state_21330;
                                                        statearr_21373[9] = inst_21273;
                                                        statearr_21373[20] = inst_21270;
                                                        statearr_21373[29] = inst_21262__$1;
                                                        statearr_21373[21] = inst_21272;
                                                        statearr_21373[12] = inst_21271;
                                                        statearr_21373[30] = inst_21264;
                                                        return statearr_21373;
                                                      }();
                                                      var statearr_21374_21443 = state_21330__$1;
                                                      statearr_21374_21443[2] = null;
                                                      statearr_21374_21443[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21331 === 28) {
                                                        var inst_21270 = state_21330[20];
                                                        var inst_21289 = state_21330[25];
                                                        var inst_21289__$1 = cljs.core.seq.call(null, inst_21270);
                                                        var state_21330__$1 = function() {
                                                          var statearr_21375 = state_21330;
                                                          statearr_21375[25] = inst_21289__$1;
                                                          return statearr_21375;
                                                        }();
                                                        if (inst_21289__$1) {
                                                          var statearr_21376_21444 = state_21330__$1;
                                                          statearr_21376_21444[1] = 33;
                                                        } else {
                                                          var statearr_21377_21445 = state_21330__$1;
                                                          statearr_21377_21445[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21331 === 25) {
                                                          var inst_21273 = state_21330[9];
                                                          var inst_21272 = state_21330[21];
                                                          var inst_21275 = inst_21273 < inst_21272;
                                                          var inst_21276 = inst_21275;
                                                          var state_21330__$1 = state_21330;
                                                          if (cljs.core.truth_(inst_21276)) {
                                                            var statearr_21378_21446 = state_21330__$1;
                                                            statearr_21378_21446[1] = 27;
                                                          } else {
                                                            var statearr_21379_21447 = state_21330__$1;
                                                            statearr_21379_21447[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21331 === 34) {
                                                            var state_21330__$1 = state_21330;
                                                            var statearr_21380_21448 = state_21330__$1;
                                                            statearr_21380_21448[2] = null;
                                                            statearr_21380_21448[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21331 === 17) {
                                                              var state_21330__$1 = state_21330;
                                                              var statearr_21381_21449 = state_21330__$1;
                                                              statearr_21381_21449[2] = null;
                                                              statearr_21381_21449[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21331 === 3) {
                                                                var inst_21328 = state_21330[2];
                                                                var state_21330__$1 = state_21330;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21330__$1, inst_21328);
                                                              } else {
                                                                if (state_val_21331 === 12) {
                                                                  var inst_21257 = state_21330[2];
                                                                  var state_21330__$1 = state_21330;
                                                                  var statearr_21382_21450 = state_21330__$1;
                                                                  statearr_21382_21450[2] = inst_21257;
                                                                  statearr_21382_21450[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_21331 === 2) {
                                                                    var state_21330__$1 = state_21330;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21330__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_21331 === 23) {
                                                                      var state_21330__$1 = state_21330;
                                                                      var statearr_21383_21451 = state_21330__$1;
                                                                      statearr_21383_21451[2] = null;
                                                                      statearr_21383_21451[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_21331 === 35) {
                                                                        var inst_21312 = state_21330[2];
                                                                        var state_21330__$1 = state_21330;
                                                                        var statearr_21384_21452 = state_21330__$1;
                                                                        statearr_21384_21452[2] = inst_21312;
                                                                        statearr_21384_21452[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_21331 === 19) {
                                                                          var inst_21231 = state_21330[7];
                                                                          var inst_21235 = cljs.core.chunk_first.call(null, inst_21231);
                                                                          var inst_21236 = cljs.core.chunk_rest.call(null, inst_21231);
                                                                          var inst_21237 = cljs.core.count.call(null, inst_21235);
                                                                          var inst_21211 = inst_21236;
                                                                          var inst_21212 = inst_21235;
                                                                          var inst_21213 = inst_21237;
                                                                          var inst_21214 = 0;
                                                                          var state_21330__$1 = function() {
                                                                            var statearr_21385 = state_21330;
                                                                            statearr_21385[13] = inst_21213;
                                                                            statearr_21385[15] = inst_21214;
                                                                            statearr_21385[16] = inst_21211;
                                                                            statearr_21385[17] = inst_21212;
                                                                            return statearr_21385;
                                                                          }();
                                                                          var statearr_21386_21453 = state_21330__$1;
                                                                          statearr_21386_21453[2] = null;
                                                                          statearr_21386_21453[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_21331 === 11) {
                                                                            var inst_21211 = state_21330[16];
                                                                            var inst_21231 = state_21330[7];
                                                                            var inst_21231__$1 = cljs.core.seq.call(null, inst_21211);
                                                                            var state_21330__$1 = function() {
                                                                              var statearr_21387 = state_21330;
                                                                              statearr_21387[7] = inst_21231__$1;
                                                                              return statearr_21387;
                                                                            }();
                                                                            if (inst_21231__$1) {
                                                                              var statearr_21388_21454 = state_21330__$1;
                                                                              statearr_21388_21454[1] = 16;
                                                                            } else {
                                                                              var statearr_21389_21455 = state_21330__$1;
                                                                              statearr_21389_21455[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_21331 === 9) {
                                                                              var inst_21259 = state_21330[2];
                                                                              var state_21330__$1 = state_21330;
                                                                              var statearr_21390_21456 = state_21330__$1;
                                                                              statearr_21390_21456[2] = inst_21259;
                                                                              statearr_21390_21456[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_21331 === 5) {
                                                                                var inst_21209 = cljs.core.deref.call(null, cs);
                                                                                var inst_21210 = cljs.core.seq.call(null, inst_21209);
                                                                                var inst_21211 = inst_21210;
                                                                                var inst_21212 = null;
                                                                                var inst_21213 = 0;
                                                                                var inst_21214 = 0;
                                                                                var state_21330__$1 = function() {
                                                                                  var statearr_21391 = state_21330;
                                                                                  statearr_21391[13] = inst_21213;
                                                                                  statearr_21391[15] = inst_21214;
                                                                                  statearr_21391[16] = inst_21211;
                                                                                  statearr_21391[17] = inst_21212;
                                                                                  return statearr_21391;
                                                                                }();
                                                                                var statearr_21392_21457 = state_21330__$1;
                                                                                statearr_21392_21457[2] = null;
                                                                                statearr_21392_21457[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_21331 === 14) {
                                                                                  var state_21330__$1 = state_21330;
                                                                                  var statearr_21393_21458 = state_21330__$1;
                                                                                  statearr_21393_21458[2] = null;
                                                                                  statearr_21393_21458[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_21331 === 45) {
                                                                                    var inst_21320 = state_21330[2];
                                                                                    var state_21330__$1 = state_21330;
                                                                                    var statearr_21394_21459 = state_21330__$1;
                                                                                    statearr_21394_21459[2] = inst_21320;
                                                                                    statearr_21394_21459[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_21331 === 26) {
                                                                                      var inst_21262 = state_21330[29];
                                                                                      var inst_21316 = state_21330[2];
                                                                                      var inst_21317 = cljs.core.seq.call(null, inst_21262);
                                                                                      var state_21330__$1 = function() {
                                                                                        var statearr_21395 = state_21330;
                                                                                        statearr_21395[31] = inst_21316;
                                                                                        return statearr_21395;
                                                                                      }();
                                                                                      if (inst_21317) {
                                                                                        var statearr_21396_21460 = state_21330__$1;
                                                                                        statearr_21396_21460[1] = 42;
                                                                                      } else {
                                                                                        var statearr_21397_21461 = state_21330__$1;
                                                                                        statearr_21397_21461[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_21331 === 16) {
                                                                                        var inst_21231 = state_21330[7];
                                                                                        var inst_21233 = cljs.core.chunked_seq_QMARK_.call(null, inst_21231);
                                                                                        var state_21330__$1 = state_21330;
                                                                                        if (inst_21233) {
                                                                                          var statearr_21398_21462 = state_21330__$1;
                                                                                          statearr_21398_21462[1] = 19;
                                                                                        } else {
                                                                                          var statearr_21399_21463 = state_21330__$1;
                                                                                          statearr_21399_21463[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_21331 === 38) {
                                                                                          var inst_21309 = state_21330[2];
                                                                                          var state_21330__$1 = state_21330;
                                                                                          var statearr_21400_21464 = state_21330__$1;
                                                                                          statearr_21400_21464[2] = inst_21309;
                                                                                          statearr_21400_21464[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_21331 === 30) {
                                                                                            var state_21330__$1 = state_21330;
                                                                                            var statearr_21401_21465 = state_21330__$1;
                                                                                            statearr_21401_21465[2] = null;
                                                                                            statearr_21401_21465[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_21331 === 10) {
                                                                                              var inst_21214 = state_21330[15];
                                                                                              var inst_21212 = state_21330[17];
                                                                                              var inst_21220 = cljs.core._nth.call(null, inst_21212, inst_21214);
                                                                                              var inst_21221 = cljs.core.nth.call(null, inst_21220, 0, null);
                                                                                              var inst_21222 = cljs.core.nth.call(null, inst_21220, 1, null);
                                                                                              var state_21330__$1 = function() {
                                                                                                var statearr_21402 = state_21330;
                                                                                                statearr_21402[26] = inst_21221;
                                                                                                return statearr_21402;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_21222)) {
                                                                                                var statearr_21403_21466 = state_21330__$1;
                                                                                                statearr_21403_21466[1] = 13;
                                                                                              } else {
                                                                                                var statearr_21404_21467 = state_21330__$1;
                                                                                                statearr_21404_21467[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_21331 === 18) {
                                                                                                var inst_21255 = state_21330[2];
                                                                                                var state_21330__$1 = state_21330;
                                                                                                var statearr_21405_21468 = state_21330__$1;
                                                                                                statearr_21405_21468[2] = inst_21255;
                                                                                                statearr_21405_21468[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_21331 === 42) {
                                                                                                  var state_21330__$1 = state_21330;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21330__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_21331 === 37) {
                                                                                                    var inst_21289 = state_21330[25];
                                                                                                    var inst_21202 = state_21330[10];
                                                                                                    var inst_21298 = state_21330[23];
                                                                                                    var inst_21298__$1 = cljs.core.first.call(null, inst_21289);
                                                                                                    var inst_21299 = cljs.core.async.put_BANG_.call(null, inst_21298__$1, inst_21202, done);
                                                                                                    var state_21330__$1 = function() {
                                                                                                      var statearr_21406 = state_21330;
                                                                                                      statearr_21406[23] = inst_21298__$1;
                                                                                                      return statearr_21406;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_21299)) {
                                                                                                      var statearr_21407_21469 = state_21330__$1;
                                                                                                      statearr_21407_21469[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_21408_21470 = state_21330__$1;
                                                                                                      statearr_21408_21470[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_21331 === 8) {
                                                                                                      var inst_21213 = state_21330[13];
                                                                                                      var inst_21214 = state_21330[15];
                                                                                                      var inst_21216 = inst_21214 < inst_21213;
                                                                                                      var inst_21217 = inst_21216;
                                                                                                      var state_21330__$1 = state_21330;
                                                                                                      if (cljs.core.truth_(inst_21217)) {
                                                                                                        var statearr_21409_21471 = state_21330__$1;
                                                                                                        statearr_21409_21471[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_21410_21472 = state_21330__$1;
                                                                                                        statearr_21410_21472[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto___21418, cs, m, dchan, dctr, done);
        return function(switch__6353__auto__, c__6368__auto___21418, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_21414 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21414[0] = state_machine__6354__auto__;
              statearr_21414[1] = 1;
              return statearr_21414;
            };
            var state_machine__6354__auto____1 = function(state_21330) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_21330);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e21415) {
                    if (e21415 instanceof Object) {
                      var ex__6357__auto__ = e21415;
                      var statearr_21416_21473 = state_21330;
                      statearr_21416_21473[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21330);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21415;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21474 = state_21330;
                  state_21330 = G__21474;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_21330) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_21330);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto___21418, cs, m, dchan, dctr, done);
      }();
      var state__6370__auto__ = function() {
        var statearr_21417 = f__6369__auto__.call(null);
        statearr_21417[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___21418;
        return statearr_21417;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto___21418, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj21476 = {};
  return obj21476;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t21596 !== "undefined") {
    } else {
      cljs.core.async.t21596 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta21597) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta21597 = meta21597;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t21596.cljs$lang$type = true;
      cljs.core.async.t21596.cljs$lang$ctorStr = "cljs.core.async/t21596";
      cljs.core.async.t21596.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
          return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t21596");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t21596.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_21598) {
          var self__ = this;
          var _21598__$1 = this;
          return self__.meta21597;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t21596.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_21598, meta21597__$1) {
          var self__ = this;
          var _21598__$1 = this;
          return new cljs.core.async.t21596(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta21597__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t21596 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t21596(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta21597) {
          return new cljs.core.async.t21596(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta21597);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t21596(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__6368__auto___21715 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_21668) {
            var state_val_21669 = state_21668[1];
            if (state_val_21669 === 7) {
              var inst_21612 = state_21668[7];
              var inst_21617 = cljs.core.apply.call(null, cljs.core.hash_map, inst_21612);
              var state_21668__$1 = state_21668;
              var statearr_21670_21716 = state_21668__$1;
              statearr_21670_21716[2] = inst_21617;
              statearr_21670_21716[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21669 === 20) {
                var inst_21627 = state_21668[8];
                var state_21668__$1 = state_21668;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21668__$1, 23, out, inst_21627);
              } else {
                if (state_val_21669 === 1) {
                  var inst_21602 = state_21668[9];
                  var inst_21602__$1 = calc_state.call(null);
                  var inst_21603 = cljs.core.seq_QMARK_.call(null, inst_21602__$1);
                  var state_21668__$1 = function() {
                    var statearr_21671 = state_21668;
                    statearr_21671[9] = inst_21602__$1;
                    return statearr_21671;
                  }();
                  if (inst_21603) {
                    var statearr_21672_21717 = state_21668__$1;
                    statearr_21672_21717[1] = 2;
                  } else {
                    var statearr_21673_21718 = state_21668__$1;
                    statearr_21673_21718[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21669 === 24) {
                    var inst_21620 = state_21668[10];
                    var inst_21612 = inst_21620;
                    var state_21668__$1 = function() {
                      var statearr_21674 = state_21668;
                      statearr_21674[7] = inst_21612;
                      return statearr_21674;
                    }();
                    var statearr_21675_21719 = state_21668__$1;
                    statearr_21675_21719[2] = null;
                    statearr_21675_21719[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21669 === 4) {
                      var inst_21602 = state_21668[9];
                      var inst_21608 = state_21668[2];
                      var inst_21609 = cljs.core.get.call(null, inst_21608, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_21610 = cljs.core.get.call(null, inst_21608, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_21611 = cljs.core.get.call(null, inst_21608, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_21612 = inst_21602;
                      var state_21668__$1 = function() {
                        var statearr_21676 = state_21668;
                        statearr_21676[7] = inst_21612;
                        statearr_21676[11] = inst_21609;
                        statearr_21676[12] = inst_21611;
                        statearr_21676[13] = inst_21610;
                        return statearr_21676;
                      }();
                      var statearr_21677_21720 = state_21668__$1;
                      statearr_21677_21720[2] = null;
                      statearr_21677_21720[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21669 === 15) {
                        var state_21668__$1 = state_21668;
                        var statearr_21678_21721 = state_21668__$1;
                        statearr_21678_21721[2] = null;
                        statearr_21678_21721[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21669 === 21) {
                          var inst_21620 = state_21668[10];
                          var inst_21612 = inst_21620;
                          var state_21668__$1 = function() {
                            var statearr_21679 = state_21668;
                            statearr_21679[7] = inst_21612;
                            return statearr_21679;
                          }();
                          var statearr_21680_21722 = state_21668__$1;
                          statearr_21680_21722[2] = null;
                          statearr_21680_21722[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21669 === 13) {
                            var inst_21664 = state_21668[2];
                            var state_21668__$1 = state_21668;
                            var statearr_21681_21723 = state_21668__$1;
                            statearr_21681_21723[2] = inst_21664;
                            statearr_21681_21723[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21669 === 22) {
                              var inst_21662 = state_21668[2];
                              var state_21668__$1 = state_21668;
                              var statearr_21682_21724 = state_21668__$1;
                              statearr_21682_21724[2] = inst_21662;
                              statearr_21682_21724[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21669 === 6) {
                                var inst_21666 = state_21668[2];
                                var state_21668__$1 = state_21668;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21668__$1, inst_21666);
                              } else {
                                if (state_val_21669 === 25) {
                                  var state_21668__$1 = state_21668;
                                  var statearr_21683_21725 = state_21668__$1;
                                  statearr_21683_21725[2] = null;
                                  statearr_21683_21725[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21669 === 17) {
                                    var inst_21642 = state_21668[14];
                                    var state_21668__$1 = state_21668;
                                    var statearr_21684_21726 = state_21668__$1;
                                    statearr_21684_21726[2] = inst_21642;
                                    statearr_21684_21726[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21669 === 3) {
                                      var inst_21602 = state_21668[9];
                                      var state_21668__$1 = state_21668;
                                      var statearr_21685_21727 = state_21668__$1;
                                      statearr_21685_21727[2] = inst_21602;
                                      statearr_21685_21727[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21669 === 12) {
                                        var inst_21642 = state_21668[14];
                                        var inst_21623 = state_21668[15];
                                        var inst_21628 = state_21668[16];
                                        var inst_21642__$1 = inst_21623.call(null, inst_21628);
                                        var state_21668__$1 = function() {
                                          var statearr_21686 = state_21668;
                                          statearr_21686[14] = inst_21642__$1;
                                          return statearr_21686;
                                        }();
                                        if (cljs.core.truth_(inst_21642__$1)) {
                                          var statearr_21687_21728 = state_21668__$1;
                                          statearr_21687_21728[1] = 17;
                                        } else {
                                          var statearr_21688_21729 = state_21668__$1;
                                          statearr_21688_21729[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21669 === 2) {
                                          var inst_21602 = state_21668[9];
                                          var inst_21605 = cljs.core.apply.call(null, cljs.core.hash_map, inst_21602);
                                          var state_21668__$1 = state_21668;
                                          var statearr_21689_21730 = state_21668__$1;
                                          statearr_21689_21730[2] = inst_21605;
                                          statearr_21689_21730[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21669 === 23) {
                                            var inst_21653 = state_21668[2];
                                            var state_21668__$1 = state_21668;
                                            if (cljs.core.truth_(inst_21653)) {
                                              var statearr_21690_21731 = state_21668__$1;
                                              statearr_21690_21731[1] = 24;
                                            } else {
                                              var statearr_21691_21732 = state_21668__$1;
                                              statearr_21691_21732[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21669 === 19) {
                                              var inst_21650 = state_21668[2];
                                              var state_21668__$1 = state_21668;
                                              if (cljs.core.truth_(inst_21650)) {
                                                var statearr_21692_21733 = state_21668__$1;
                                                statearr_21692_21733[1] = 20;
                                              } else {
                                                var statearr_21693_21734 = state_21668__$1;
                                                statearr_21693_21734[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21669 === 11) {
                                                var inst_21627 = state_21668[8];
                                                var inst_21633 = inst_21627 == null;
                                                var state_21668__$1 = state_21668;
                                                if (cljs.core.truth_(inst_21633)) {
                                                  var statearr_21694_21735 = state_21668__$1;
                                                  statearr_21694_21735[1] = 14;
                                                } else {
                                                  var statearr_21695_21736 = state_21668__$1;
                                                  statearr_21695_21736[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21669 === 9) {
                                                  var inst_21620 = state_21668[10];
                                                  var inst_21620__$1 = state_21668[2];
                                                  var inst_21621 = cljs.core.get.call(null, inst_21620__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_21622 = cljs.core.get.call(null, inst_21620__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_21623 = cljs.core.get.call(null, inst_21620__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_21668__$1 = function() {
                                                    var statearr_21696 = state_21668;
                                                    statearr_21696[10] = inst_21620__$1;
                                                    statearr_21696[15] = inst_21623;
                                                    statearr_21696[17] = inst_21622;
                                                    return statearr_21696;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_21668__$1, 10, inst_21621);
                                                } else {
                                                  if (state_val_21669 === 5) {
                                                    var inst_21612 = state_21668[7];
                                                    var inst_21615 = cljs.core.seq_QMARK_.call(null, inst_21612);
                                                    var state_21668__$1 = state_21668;
                                                    if (inst_21615) {
                                                      var statearr_21697_21737 = state_21668__$1;
                                                      statearr_21697_21737[1] = 7;
                                                    } else {
                                                      var statearr_21698_21738 = state_21668__$1;
                                                      statearr_21698_21738[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21669 === 14) {
                                                      var inst_21628 = state_21668[16];
                                                      var inst_21635 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_21628);
                                                      var state_21668__$1 = state_21668;
                                                      var statearr_21699_21739 = state_21668__$1;
                                                      statearr_21699_21739[2] = inst_21635;
                                                      statearr_21699_21739[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21669 === 26) {
                                                        var inst_21658 = state_21668[2];
                                                        var state_21668__$1 = state_21668;
                                                        var statearr_21700_21740 = state_21668__$1;
                                                        statearr_21700_21740[2] = inst_21658;
                                                        statearr_21700_21740[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21669 === 16) {
                                                          var inst_21638 = state_21668[2];
                                                          var inst_21639 = calc_state.call(null);
                                                          var inst_21612 = inst_21639;
                                                          var state_21668__$1 = function() {
                                                            var statearr_21701 = state_21668;
                                                            statearr_21701[7] = inst_21612;
                                                            statearr_21701[18] = inst_21638;
                                                            return statearr_21701;
                                                          }();
                                                          var statearr_21702_21741 = state_21668__$1;
                                                          statearr_21702_21741[2] = null;
                                                          statearr_21702_21741[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21669 === 10) {
                                                            var inst_21627 = state_21668[8];
                                                            var inst_21628 = state_21668[16];
                                                            var inst_21626 = state_21668[2];
                                                            var inst_21627__$1 = cljs.core.nth.call(null, inst_21626, 0, null);
                                                            var inst_21628__$1 = cljs.core.nth.call(null, inst_21626, 1, null);
                                                            var inst_21629 = inst_21627__$1 == null;
                                                            var inst_21630 = cljs.core._EQ_.call(null, inst_21628__$1, change);
                                                            var inst_21631 = inst_21629 || inst_21630;
                                                            var state_21668__$1 = function() {
                                                              var statearr_21703 = state_21668;
                                                              statearr_21703[8] = inst_21627__$1;
                                                              statearr_21703[16] = inst_21628__$1;
                                                              return statearr_21703;
                                                            }();
                                                            if (cljs.core.truth_(inst_21631)) {
                                                              var statearr_21704_21742 = state_21668__$1;
                                                              statearr_21704_21742[1] = 11;
                                                            } else {
                                                              var statearr_21705_21743 = state_21668__$1;
                                                              statearr_21705_21743[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21669 === 18) {
                                                              var inst_21623 = state_21668[15];
                                                              var inst_21628 = state_21668[16];
                                                              var inst_21622 = state_21668[17];
                                                              var inst_21645 = cljs.core.empty_QMARK_.call(null, inst_21623);
                                                              var inst_21646 = inst_21622.call(null, inst_21628);
                                                              var inst_21647 = cljs.core.not.call(null, inst_21646);
                                                              var inst_21648 = inst_21645 && inst_21647;
                                                              var state_21668__$1 = state_21668;
                                                              var statearr_21706_21744 = state_21668__$1;
                                                              statearr_21706_21744[2] = inst_21648;
                                                              statearr_21706_21744[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21669 === 8) {
                                                                var inst_21612 = state_21668[7];
                                                                var state_21668__$1 = state_21668;
                                                                var statearr_21707_21745 = state_21668__$1;
                                                                statearr_21707_21745[2] = inst_21612;
                                                                statearr_21707_21745[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6353__auto__, c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_21711 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21711[0] = state_machine__6354__auto__;
              statearr_21711[1] = 1;
              return statearr_21711;
            };
            var state_machine__6354__auto____1 = function(state_21668) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_21668);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e21712) {
                    if (e21712 instanceof Object) {
                      var ex__6357__auto__ = e21712;
                      var statearr_21713_21746 = state_21668;
                      statearr_21713_21746[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21668);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21712;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21747 = state_21668;
                  state_21668 = G__21747;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_21668) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_21668);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6370__auto__ = function() {
        var statearr_21714 = f__6369__auto__.call(null);
        statearr_21714[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___21715;
        return statearr_21714;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto___21715, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj21749 = {};
  return obj21749;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3539__auto__ = p;
    if (and__3539__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4178__auto__ = p == null ? null : p;
    return function() {
      var or__3551__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3539__auto__ = p;
    if (and__3539__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4178__auto__ = p == null ? null : p;
    return function() {
      var or__3551__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3539__auto__ = p;
      if (and__3539__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4178__auto__ = p == null ? null : p;
      return function() {
        var or__3551__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3539__auto__ = p;
      if (and__3539__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4178__auto__ = p == null ? null : p;
      return function() {
        var or__3551__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3551__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3551__auto__, mults) {
            return function(p1__21750_SHARP_) {
              if (cljs.core.truth_(p1__21750_SHARP_.call(null, topic))) {
                return p1__21750_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__21750_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3551__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t21873 !== "undefined") {
      } else {
        cljs.core.async.t21873 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta21874) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta21874 = meta21874;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t21873.cljs$lang$type = true;
        cljs.core.async.t21873.cljs$lang$ctorStr = "cljs.core.async/t21873";
        cljs.core.async.t21873.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
            return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t21873");
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t21873.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t21873.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_21875) {
            var self__ = this;
            var _21875__$1 = this;
            return self__.meta21874;
          };
        }(mults, ensure_mult);
        cljs.core.async.t21873.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_21875, meta21874__$1) {
            var self__ = this;
            var _21875__$1 = this;
            return new cljs.core.async.t21873(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta21874__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t21873 = function(mults, ensure_mult) {
          return function __GT_t21873(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta21874) {
            return new cljs.core.async.t21873(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta21874);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t21873(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6368__auto___21995 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___21995, mults, ensure_mult, p) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___21995, mults, ensure_mult, p) {
            return function(state_21947) {
              var state_val_21948 = state_21947[1];
              if (state_val_21948 === 7) {
                var inst_21943 = state_21947[2];
                var state_21947__$1 = state_21947;
                var statearr_21949_21996 = state_21947__$1;
                statearr_21949_21996[2] = inst_21943;
                statearr_21949_21996[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21948 === 20) {
                  var state_21947__$1 = state_21947;
                  var statearr_21950_21997 = state_21947__$1;
                  statearr_21950_21997[2] = null;
                  statearr_21950_21997[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21948 === 1) {
                    var state_21947__$1 = state_21947;
                    var statearr_21951_21998 = state_21947__$1;
                    statearr_21951_21998[2] = null;
                    statearr_21951_21998[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21948 === 24) {
                      var inst_21926 = state_21947[7];
                      var inst_21935 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_21926);
                      var state_21947__$1 = state_21947;
                      var statearr_21952_21999 = state_21947__$1;
                      statearr_21952_21999[2] = inst_21935;
                      statearr_21952_21999[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21948 === 4) {
                        var inst_21878 = state_21947[8];
                        var inst_21878__$1 = state_21947[2];
                        var inst_21879 = inst_21878__$1 == null;
                        var state_21947__$1 = function() {
                          var statearr_21953 = state_21947;
                          statearr_21953[8] = inst_21878__$1;
                          return statearr_21953;
                        }();
                        if (cljs.core.truth_(inst_21879)) {
                          var statearr_21954_22000 = state_21947__$1;
                          statearr_21954_22000[1] = 5;
                        } else {
                          var statearr_21955_22001 = state_21947__$1;
                          statearr_21955_22001[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21948 === 15) {
                          var inst_21920 = state_21947[2];
                          var state_21947__$1 = state_21947;
                          var statearr_21956_22002 = state_21947__$1;
                          statearr_21956_22002[2] = inst_21920;
                          statearr_21956_22002[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21948 === 21) {
                            var inst_21940 = state_21947[2];
                            var state_21947__$1 = function() {
                              var statearr_21957 = state_21947;
                              statearr_21957[9] = inst_21940;
                              return statearr_21957;
                            }();
                            var statearr_21958_22003 = state_21947__$1;
                            statearr_21958_22003[2] = null;
                            statearr_21958_22003[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21948 === 13) {
                              var inst_21902 = state_21947[10];
                              var inst_21904 = cljs.core.chunked_seq_QMARK_.call(null, inst_21902);
                              var state_21947__$1 = state_21947;
                              if (inst_21904) {
                                var statearr_21959_22004 = state_21947__$1;
                                statearr_21959_22004[1] = 16;
                              } else {
                                var statearr_21960_22005 = state_21947__$1;
                                statearr_21960_22005[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21948 === 22) {
                                var inst_21932 = state_21947[2];
                                var state_21947__$1 = state_21947;
                                if (cljs.core.truth_(inst_21932)) {
                                  var statearr_21961_22006 = state_21947__$1;
                                  statearr_21961_22006[1] = 23;
                                } else {
                                  var statearr_21962_22007 = state_21947__$1;
                                  statearr_21962_22007[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21948 === 6) {
                                  var inst_21926 = state_21947[7];
                                  var inst_21878 = state_21947[8];
                                  var inst_21928 = state_21947[11];
                                  var inst_21926__$1 = topic_fn.call(null, inst_21878);
                                  var inst_21927 = cljs.core.deref.call(null, mults);
                                  var inst_21928__$1 = cljs.core.get.call(null, inst_21927, inst_21926__$1);
                                  var state_21947__$1 = function() {
                                    var statearr_21963 = state_21947;
                                    statearr_21963[7] = inst_21926__$1;
                                    statearr_21963[11] = inst_21928__$1;
                                    return statearr_21963;
                                  }();
                                  if (cljs.core.truth_(inst_21928__$1)) {
                                    var statearr_21964_22008 = state_21947__$1;
                                    statearr_21964_22008[1] = 19;
                                  } else {
                                    var statearr_21965_22009 = state_21947__$1;
                                    statearr_21965_22009[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21948 === 25) {
                                    var inst_21937 = state_21947[2];
                                    var state_21947__$1 = state_21947;
                                    var statearr_21966_22010 = state_21947__$1;
                                    statearr_21966_22010[2] = inst_21937;
                                    statearr_21966_22010[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21948 === 17) {
                                      var inst_21902 = state_21947[10];
                                      var inst_21911 = cljs.core.first.call(null, inst_21902);
                                      var inst_21912 = cljs.core.async.muxch_STAR_.call(null, inst_21911);
                                      var inst_21913 = cljs.core.async.close_BANG_.call(null, inst_21912);
                                      var inst_21914 = cljs.core.next.call(null, inst_21902);
                                      var inst_21888 = inst_21914;
                                      var inst_21889 = null;
                                      var inst_21890 = 0;
                                      var inst_21891 = 0;
                                      var state_21947__$1 = function() {
                                        var statearr_21967 = state_21947;
                                        statearr_21967[12] = inst_21888;
                                        statearr_21967[13] = inst_21913;
                                        statearr_21967[14] = inst_21891;
                                        statearr_21967[15] = inst_21889;
                                        statearr_21967[16] = inst_21890;
                                        return statearr_21967;
                                      }();
                                      var statearr_21968_22011 = state_21947__$1;
                                      statearr_21968_22011[2] = null;
                                      statearr_21968_22011[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21948 === 3) {
                                        var inst_21945 = state_21947[2];
                                        var state_21947__$1 = state_21947;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21947__$1, inst_21945);
                                      } else {
                                        if (state_val_21948 === 12) {
                                          var inst_21922 = state_21947[2];
                                          var state_21947__$1 = state_21947;
                                          var statearr_21969_22012 = state_21947__$1;
                                          statearr_21969_22012[2] = inst_21922;
                                          statearr_21969_22012[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21948 === 2) {
                                            var state_21947__$1 = state_21947;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21947__$1, 4, ch);
                                          } else {
                                            if (state_val_21948 === 23) {
                                              var state_21947__$1 = state_21947;
                                              var statearr_21970_22013 = state_21947__$1;
                                              statearr_21970_22013[2] = null;
                                              statearr_21970_22013[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21948 === 19) {
                                                var inst_21878 = state_21947[8];
                                                var inst_21928 = state_21947[11];
                                                var inst_21930 = cljs.core.async.muxch_STAR_.call(null, inst_21928);
                                                var state_21947__$1 = state_21947;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21947__$1, 22, inst_21930, inst_21878);
                                              } else {
                                                if (state_val_21948 === 11) {
                                                  var inst_21888 = state_21947[12];
                                                  var inst_21902 = state_21947[10];
                                                  var inst_21902__$1 = cljs.core.seq.call(null, inst_21888);
                                                  var state_21947__$1 = function() {
                                                    var statearr_21971 = state_21947;
                                                    statearr_21971[10] = inst_21902__$1;
                                                    return statearr_21971;
                                                  }();
                                                  if (inst_21902__$1) {
                                                    var statearr_21972_22014 = state_21947__$1;
                                                    statearr_21972_22014[1] = 13;
                                                  } else {
                                                    var statearr_21973_22015 = state_21947__$1;
                                                    statearr_21973_22015[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21948 === 9) {
                                                    var inst_21924 = state_21947[2];
                                                    var state_21947__$1 = state_21947;
                                                    var statearr_21974_22016 = state_21947__$1;
                                                    statearr_21974_22016[2] = inst_21924;
                                                    statearr_21974_22016[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21948 === 5) {
                                                      var inst_21885 = cljs.core.deref.call(null, mults);
                                                      var inst_21886 = cljs.core.vals.call(null, inst_21885);
                                                      var inst_21887 = cljs.core.seq.call(null, inst_21886);
                                                      var inst_21888 = inst_21887;
                                                      var inst_21889 = null;
                                                      var inst_21890 = 0;
                                                      var inst_21891 = 0;
                                                      var state_21947__$1 = function() {
                                                        var statearr_21975 = state_21947;
                                                        statearr_21975[12] = inst_21888;
                                                        statearr_21975[14] = inst_21891;
                                                        statearr_21975[15] = inst_21889;
                                                        statearr_21975[16] = inst_21890;
                                                        return statearr_21975;
                                                      }();
                                                      var statearr_21976_22017 = state_21947__$1;
                                                      statearr_21976_22017[2] = null;
                                                      statearr_21976_22017[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21948 === 14) {
                                                        var state_21947__$1 = state_21947;
                                                        var statearr_21980_22018 = state_21947__$1;
                                                        statearr_21980_22018[2] = null;
                                                        statearr_21980_22018[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21948 === 16) {
                                                          var inst_21902 = state_21947[10];
                                                          var inst_21906 = cljs.core.chunk_first.call(null, inst_21902);
                                                          var inst_21907 = cljs.core.chunk_rest.call(null, inst_21902);
                                                          var inst_21908 = cljs.core.count.call(null, inst_21906);
                                                          var inst_21888 = inst_21907;
                                                          var inst_21889 = inst_21906;
                                                          var inst_21890 = inst_21908;
                                                          var inst_21891 = 0;
                                                          var state_21947__$1 = function() {
                                                            var statearr_21981 = state_21947;
                                                            statearr_21981[12] = inst_21888;
                                                            statearr_21981[14] = inst_21891;
                                                            statearr_21981[15] = inst_21889;
                                                            statearr_21981[16] = inst_21890;
                                                            return statearr_21981;
                                                          }();
                                                          var statearr_21982_22019 = state_21947__$1;
                                                          statearr_21982_22019[2] = null;
                                                          statearr_21982_22019[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21948 === 10) {
                                                            var inst_21888 = state_21947[12];
                                                            var inst_21891 = state_21947[14];
                                                            var inst_21889 = state_21947[15];
                                                            var inst_21890 = state_21947[16];
                                                            var inst_21896 = cljs.core._nth.call(null, inst_21889, inst_21891);
                                                            var inst_21897 = cljs.core.async.muxch_STAR_.call(null, inst_21896);
                                                            var inst_21898 = cljs.core.async.close_BANG_.call(null, inst_21897);
                                                            var inst_21899 = inst_21891 + 1;
                                                            var tmp21977 = inst_21888;
                                                            var tmp21978 = inst_21889;
                                                            var tmp21979 = inst_21890;
                                                            var inst_21888__$1 = tmp21977;
                                                            var inst_21889__$1 = tmp21978;
                                                            var inst_21890__$1 = tmp21979;
                                                            var inst_21891__$1 = inst_21899;
                                                            var state_21947__$1 = function() {
                                                              var statearr_21983 = state_21947;
                                                              statearr_21983[12] = inst_21888__$1;
                                                              statearr_21983[14] = inst_21891__$1;
                                                              statearr_21983[17] = inst_21898;
                                                              statearr_21983[15] = inst_21889__$1;
                                                              statearr_21983[16] = inst_21890__$1;
                                                              return statearr_21983;
                                                            }();
                                                            var statearr_21984_22020 = state_21947__$1;
                                                            statearr_21984_22020[2] = null;
                                                            statearr_21984_22020[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21948 === 18) {
                                                              var inst_21917 = state_21947[2];
                                                              var state_21947__$1 = state_21947;
                                                              var statearr_21985_22021 = state_21947__$1;
                                                              statearr_21985_22021[2] = inst_21917;
                                                              statearr_21985_22021[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21948 === 8) {
                                                                var inst_21891 = state_21947[14];
                                                                var inst_21890 = state_21947[16];
                                                                var inst_21893 = inst_21891 < inst_21890;
                                                                var inst_21894 = inst_21893;
                                                                var state_21947__$1 = state_21947;
                                                                if (cljs.core.truth_(inst_21894)) {
                                                                  var statearr_21986_22022 = state_21947__$1;
                                                                  statearr_21986_22022[1] = 10;
                                                                } else {
                                                                  var statearr_21987_22023 = state_21947__$1;
                                                                  statearr_21987_22023[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___21995, mults, ensure_mult, p);
          return function(switch__6353__auto__, c__6368__auto___21995, mults, ensure_mult, p) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_21991 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_21991[0] = state_machine__6354__auto__;
                statearr_21991[1] = 1;
                return statearr_21991;
              };
              var state_machine__6354__auto____1 = function(state_21947) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_21947);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e21992) {
                      if (e21992 instanceof Object) {
                        var ex__6357__auto__ = e21992;
                        var statearr_21993_22024 = state_21947;
                        statearr_21993_22024[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21947);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21992;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22025 = state_21947;
                    state_21947 = G__22025;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_21947) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_21947);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___21995, mults, ensure_mult, p);
        }();
        var state__6370__auto__ = function() {
          var statearr_21994 = f__6369__auto__.call(null);
          statearr_21994[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___21995;
          return statearr_21994;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___21995, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6368__auto___22162 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_22132) {
              var state_val_22133 = state_22132[1];
              if (state_val_22133 === 7) {
                var state_22132__$1 = state_22132;
                var statearr_22134_22163 = state_22132__$1;
                statearr_22134_22163[2] = null;
                statearr_22134_22163[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22133 === 1) {
                  var state_22132__$1 = state_22132;
                  var statearr_22135_22164 = state_22132__$1;
                  statearr_22135_22164[2] = null;
                  statearr_22135_22164[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22133 === 4) {
                    var inst_22096 = state_22132[7];
                    var inst_22098 = inst_22096 < cnt;
                    var state_22132__$1 = state_22132;
                    if (cljs.core.truth_(inst_22098)) {
                      var statearr_22136_22165 = state_22132__$1;
                      statearr_22136_22165[1] = 6;
                    } else {
                      var statearr_22137_22166 = state_22132__$1;
                      statearr_22137_22166[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22133 === 15) {
                      var inst_22128 = state_22132[2];
                      var state_22132__$1 = state_22132;
                      var statearr_22138_22167 = state_22132__$1;
                      statearr_22138_22167[2] = inst_22128;
                      statearr_22138_22167[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22133 === 13) {
                        var inst_22121 = cljs.core.async.close_BANG_.call(null, out);
                        var state_22132__$1 = state_22132;
                        var statearr_22139_22168 = state_22132__$1;
                        statearr_22139_22168[2] = inst_22121;
                        statearr_22139_22168[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22133 === 6) {
                          var state_22132__$1 = state_22132;
                          var statearr_22140_22169 = state_22132__$1;
                          statearr_22140_22169[2] = null;
                          statearr_22140_22169[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22133 === 3) {
                            var inst_22130 = state_22132[2];
                            var state_22132__$1 = state_22132;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22132__$1, inst_22130);
                          } else {
                            if (state_val_22133 === 12) {
                              var inst_22118 = state_22132[8];
                              var inst_22118__$1 = state_22132[2];
                              var inst_22119 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_22118__$1);
                              var state_22132__$1 = function() {
                                var statearr_22141 = state_22132;
                                statearr_22141[8] = inst_22118__$1;
                                return statearr_22141;
                              }();
                              if (cljs.core.truth_(inst_22119)) {
                                var statearr_22142_22170 = state_22132__$1;
                                statearr_22142_22170[1] = 13;
                              } else {
                                var statearr_22143_22171 = state_22132__$1;
                                statearr_22143_22171[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22133 === 2) {
                                var inst_22095 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_22096 = 0;
                                var state_22132__$1 = function() {
                                  var statearr_22144 = state_22132;
                                  statearr_22144[9] = inst_22095;
                                  statearr_22144[7] = inst_22096;
                                  return statearr_22144;
                                }();
                                var statearr_22145_22172 = state_22132__$1;
                                statearr_22145_22172[2] = null;
                                statearr_22145_22172[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22133 === 11) {
                                  var inst_22096 = state_22132[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_22132, 10, Object, null, 9);
                                  var inst_22105 = chs__$1.call(null, inst_22096);
                                  var inst_22106 = done.call(null, inst_22096);
                                  var inst_22107 = cljs.core.async.take_BANG_.call(null, inst_22105, inst_22106);
                                  var state_22132__$1 = state_22132;
                                  var statearr_22146_22173 = state_22132__$1;
                                  statearr_22146_22173[2] = inst_22107;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22132__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22133 === 9) {
                                    var inst_22096 = state_22132[7];
                                    var inst_22109 = state_22132[2];
                                    var inst_22110 = inst_22096 + 1;
                                    var inst_22096__$1 = inst_22110;
                                    var state_22132__$1 = function() {
                                      var statearr_22147 = state_22132;
                                      statearr_22147[7] = inst_22096__$1;
                                      statearr_22147[10] = inst_22109;
                                      return statearr_22147;
                                    }();
                                    var statearr_22148_22174 = state_22132__$1;
                                    statearr_22148_22174[2] = null;
                                    statearr_22148_22174[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22133 === 5) {
                                      var inst_22116 = state_22132[2];
                                      var state_22132__$1 = function() {
                                        var statearr_22149 = state_22132;
                                        statearr_22149[11] = inst_22116;
                                        return statearr_22149;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22132__$1, 12, dchan);
                                    } else {
                                      if (state_val_22133 === 14) {
                                        var inst_22118 = state_22132[8];
                                        var inst_22123 = cljs.core.apply.call(null, f, inst_22118);
                                        var state_22132__$1 = state_22132;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22132__$1, 16, out, inst_22123);
                                      } else {
                                        if (state_val_22133 === 16) {
                                          var inst_22125 = state_22132[2];
                                          var state_22132__$1 = function() {
                                            var statearr_22150 = state_22132;
                                            statearr_22150[12] = inst_22125;
                                            return statearr_22150;
                                          }();
                                          var statearr_22151_22175 = state_22132__$1;
                                          statearr_22151_22175[2] = null;
                                          statearr_22151_22175[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22133 === 10) {
                                            var inst_22100 = state_22132[2];
                                            var inst_22101 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_22132__$1 = function() {
                                              var statearr_22152 = state_22132;
                                              statearr_22152[13] = inst_22100;
                                              return statearr_22152;
                                            }();
                                            var statearr_22153_22176 = state_22132__$1;
                                            statearr_22153_22176[2] = inst_22101;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22132__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22133 === 8) {
                                              var inst_22114 = state_22132[2];
                                              var state_22132__$1 = state_22132;
                                              var statearr_22154_22177 = state_22132__$1;
                                              statearr_22154_22177[2] = inst_22114;
                                              statearr_22154_22177[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6353__auto__, c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22158 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22158[0] = state_machine__6354__auto__;
                statearr_22158[1] = 1;
                return statearr_22158;
              };
              var state_machine__6354__auto____1 = function(state_22132) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22132);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22159) {
                      if (e22159 instanceof Object) {
                        var ex__6357__auto__ = e22159;
                        var statearr_22160_22178 = state_22132;
                        statearr_22160_22178[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22132);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22159;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22179 = state_22132;
                    state_22132 = G__22179;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22132) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22132);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6370__auto__ = function() {
          var statearr_22161 = f__6369__auto__.call(null);
          statearr_22161[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22162;
          return statearr_22161;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22162, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___22287 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22287, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22287, out) {
            return function(state_22263) {
              var state_val_22264 = state_22263[1];
              if (state_val_22264 === 7) {
                var inst_22243 = state_22263[7];
                var inst_22242 = state_22263[8];
                var inst_22242__$1 = state_22263[2];
                var inst_22243__$1 = cljs.core.nth.call(null, inst_22242__$1, 0, null);
                var inst_22244 = cljs.core.nth.call(null, inst_22242__$1, 1, null);
                var inst_22245 = inst_22243__$1 == null;
                var state_22263__$1 = function() {
                  var statearr_22265 = state_22263;
                  statearr_22265[9] = inst_22244;
                  statearr_22265[7] = inst_22243__$1;
                  statearr_22265[8] = inst_22242__$1;
                  return statearr_22265;
                }();
                if (cljs.core.truth_(inst_22245)) {
                  var statearr_22266_22288 = state_22263__$1;
                  statearr_22266_22288[1] = 8;
                } else {
                  var statearr_22267_22289 = state_22263__$1;
                  statearr_22267_22289[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22264 === 1) {
                  var inst_22234 = cljs.core.vec.call(null, chs);
                  var inst_22235 = inst_22234;
                  var state_22263__$1 = function() {
                    var statearr_22268 = state_22263;
                    statearr_22268[10] = inst_22235;
                    return statearr_22268;
                  }();
                  var statearr_22269_22290 = state_22263__$1;
                  statearr_22269_22290[2] = null;
                  statearr_22269_22290[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22264 === 4) {
                    var inst_22235 = state_22263[10];
                    var state_22263__$1 = state_22263;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22263__$1, 7, inst_22235);
                  } else {
                    if (state_val_22264 === 6) {
                      var inst_22259 = state_22263[2];
                      var state_22263__$1 = state_22263;
                      var statearr_22270_22291 = state_22263__$1;
                      statearr_22270_22291[2] = inst_22259;
                      statearr_22270_22291[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22264 === 3) {
                        var inst_22261 = state_22263[2];
                        var state_22263__$1 = state_22263;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22263__$1, inst_22261);
                      } else {
                        if (state_val_22264 === 2) {
                          var inst_22235 = state_22263[10];
                          var inst_22237 = cljs.core.count.call(null, inst_22235);
                          var inst_22238 = inst_22237 > 0;
                          var state_22263__$1 = state_22263;
                          if (cljs.core.truth_(inst_22238)) {
                            var statearr_22272_22292 = state_22263__$1;
                            statearr_22272_22292[1] = 4;
                          } else {
                            var statearr_22273_22293 = state_22263__$1;
                            statearr_22273_22293[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22264 === 11) {
                            var inst_22235 = state_22263[10];
                            var inst_22252 = state_22263[2];
                            var tmp22271 = inst_22235;
                            var inst_22235__$1 = tmp22271;
                            var state_22263__$1 = function() {
                              var statearr_22274 = state_22263;
                              statearr_22274[11] = inst_22252;
                              statearr_22274[10] = inst_22235__$1;
                              return statearr_22274;
                            }();
                            var statearr_22275_22294 = state_22263__$1;
                            statearr_22275_22294[2] = null;
                            statearr_22275_22294[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22264 === 9) {
                              var inst_22243 = state_22263[7];
                              var state_22263__$1 = state_22263;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22263__$1, 11, out, inst_22243);
                            } else {
                              if (state_val_22264 === 5) {
                                var inst_22257 = cljs.core.async.close_BANG_.call(null, out);
                                var state_22263__$1 = state_22263;
                                var statearr_22276_22295 = state_22263__$1;
                                statearr_22276_22295[2] = inst_22257;
                                statearr_22276_22295[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22264 === 10) {
                                  var inst_22255 = state_22263[2];
                                  var state_22263__$1 = state_22263;
                                  var statearr_22277_22296 = state_22263__$1;
                                  statearr_22277_22296[2] = inst_22255;
                                  statearr_22277_22296[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22264 === 8) {
                                    var inst_22235 = state_22263[10];
                                    var inst_22244 = state_22263[9];
                                    var inst_22243 = state_22263[7];
                                    var inst_22242 = state_22263[8];
                                    var inst_22247 = function() {
                                      var c = inst_22244;
                                      var v = inst_22243;
                                      var vec__22240 = inst_22242;
                                      var cs = inst_22235;
                                      return function(c, v, vec__22240, cs, inst_22235, inst_22244, inst_22243, inst_22242, state_val_22264, c__6368__auto___22287, out) {
                                        return function(p1__22180_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__22180_SHARP_);
                                        };
                                      }(c, v, vec__22240, cs, inst_22235, inst_22244, inst_22243, inst_22242, state_val_22264, c__6368__auto___22287, out);
                                    }();
                                    var inst_22248 = cljs.core.filterv.call(null, inst_22247, inst_22235);
                                    var inst_22235__$1 = inst_22248;
                                    var state_22263__$1 = function() {
                                      var statearr_22278 = state_22263;
                                      statearr_22278[10] = inst_22235__$1;
                                      return statearr_22278;
                                    }();
                                    var statearr_22279_22297 = state_22263__$1;
                                    statearr_22279_22297[2] = null;
                                    statearr_22279_22297[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22287, out);
          return function(switch__6353__auto__, c__6368__auto___22287, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22283 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22283[0] = state_machine__6354__auto__;
                statearr_22283[1] = 1;
                return statearr_22283;
              };
              var state_machine__6354__auto____1 = function(state_22263) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22263);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22284) {
                      if (e22284 instanceof Object) {
                        var ex__6357__auto__ = e22284;
                        var statearr_22285_22298 = state_22263;
                        statearr_22285_22298[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22263);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22284;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22299 = state_22263;
                    state_22263 = G__22299;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22263) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22263);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22287, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_22286 = f__6369__auto__.call(null);
          statearr_22286[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22287;
          return statearr_22286;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22287, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___22392 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22392, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22392, out) {
            return function(state_22369) {
              var state_val_22370 = state_22369[1];
              if (state_val_22370 === 7) {
                var inst_22351 = state_22369[7];
                var inst_22351__$1 = state_22369[2];
                var inst_22352 = inst_22351__$1 == null;
                var inst_22353 = cljs.core.not.call(null, inst_22352);
                var state_22369__$1 = function() {
                  var statearr_22371 = state_22369;
                  statearr_22371[7] = inst_22351__$1;
                  return statearr_22371;
                }();
                if (inst_22353) {
                  var statearr_22372_22393 = state_22369__$1;
                  statearr_22372_22393[1] = 8;
                } else {
                  var statearr_22373_22394 = state_22369__$1;
                  statearr_22373_22394[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22370 === 1) {
                  var inst_22346 = 0;
                  var state_22369__$1 = function() {
                    var statearr_22374 = state_22369;
                    statearr_22374[8] = inst_22346;
                    return statearr_22374;
                  }();
                  var statearr_22375_22395 = state_22369__$1;
                  statearr_22375_22395[2] = null;
                  statearr_22375_22395[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22370 === 4) {
                    var state_22369__$1 = state_22369;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22369__$1, 7, ch);
                  } else {
                    if (state_val_22370 === 6) {
                      var inst_22364 = state_22369[2];
                      var state_22369__$1 = state_22369;
                      var statearr_22376_22396 = state_22369__$1;
                      statearr_22376_22396[2] = inst_22364;
                      statearr_22376_22396[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22370 === 3) {
                        var inst_22366 = state_22369[2];
                        var inst_22367 = cljs.core.async.close_BANG_.call(null, out);
                        var state_22369__$1 = function() {
                          var statearr_22377 = state_22369;
                          statearr_22377[9] = inst_22366;
                          return statearr_22377;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22369__$1, inst_22367);
                      } else {
                        if (state_val_22370 === 2) {
                          var inst_22346 = state_22369[8];
                          var inst_22348 = inst_22346 < n;
                          var state_22369__$1 = state_22369;
                          if (cljs.core.truth_(inst_22348)) {
                            var statearr_22378_22397 = state_22369__$1;
                            statearr_22378_22397[1] = 4;
                          } else {
                            var statearr_22379_22398 = state_22369__$1;
                            statearr_22379_22398[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22370 === 11) {
                            var inst_22346 = state_22369[8];
                            var inst_22356 = state_22369[2];
                            var inst_22357 = inst_22346 + 1;
                            var inst_22346__$1 = inst_22357;
                            var state_22369__$1 = function() {
                              var statearr_22380 = state_22369;
                              statearr_22380[10] = inst_22356;
                              statearr_22380[8] = inst_22346__$1;
                              return statearr_22380;
                            }();
                            var statearr_22381_22399 = state_22369__$1;
                            statearr_22381_22399[2] = null;
                            statearr_22381_22399[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22370 === 9) {
                              var state_22369__$1 = state_22369;
                              var statearr_22382_22400 = state_22369__$1;
                              statearr_22382_22400[2] = null;
                              statearr_22382_22400[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22370 === 5) {
                                var state_22369__$1 = state_22369;
                                var statearr_22383_22401 = state_22369__$1;
                                statearr_22383_22401[2] = null;
                                statearr_22383_22401[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22370 === 10) {
                                  var inst_22361 = state_22369[2];
                                  var state_22369__$1 = state_22369;
                                  var statearr_22384_22402 = state_22369__$1;
                                  statearr_22384_22402[2] = inst_22361;
                                  statearr_22384_22402[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22370 === 8) {
                                    var inst_22351 = state_22369[7];
                                    var state_22369__$1 = state_22369;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22369__$1, 11, out, inst_22351);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22392, out);
          return function(switch__6353__auto__, c__6368__auto___22392, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22388 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_22388[0] = state_machine__6354__auto__;
                statearr_22388[1] = 1;
                return statearr_22388;
              };
              var state_machine__6354__auto____1 = function(state_22369) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22369);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22389) {
                      if (e22389 instanceof Object) {
                        var ex__6357__auto__ = e22389;
                        var statearr_22390_22403 = state_22369;
                        statearr_22390_22403[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22369);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22389;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22404 = state_22369;
                    state_22369 = G__22404;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22369) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22369);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22392, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_22391 = f__6369__auto__.call(null);
          statearr_22391[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22392;
          return statearr_22391;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22392, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___22501 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22501, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22501, out) {
            return function(state_22476) {
              var state_val_22477 = state_22476[1];
              if (state_val_22477 === 7) {
                var inst_22471 = state_22476[2];
                var state_22476__$1 = state_22476;
                var statearr_22478_22502 = state_22476__$1;
                statearr_22478_22502[2] = inst_22471;
                statearr_22478_22502[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22477 === 1) {
                  var inst_22453 = null;
                  var state_22476__$1 = function() {
                    var statearr_22479 = state_22476;
                    statearr_22479[7] = inst_22453;
                    return statearr_22479;
                  }();
                  var statearr_22480_22503 = state_22476__$1;
                  statearr_22480_22503[2] = null;
                  statearr_22480_22503[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22477 === 4) {
                    var inst_22456 = state_22476[8];
                    var inst_22456__$1 = state_22476[2];
                    var inst_22457 = inst_22456__$1 == null;
                    var inst_22458 = cljs.core.not.call(null, inst_22457);
                    var state_22476__$1 = function() {
                      var statearr_22481 = state_22476;
                      statearr_22481[8] = inst_22456__$1;
                      return statearr_22481;
                    }();
                    if (inst_22458) {
                      var statearr_22482_22504 = state_22476__$1;
                      statearr_22482_22504[1] = 5;
                    } else {
                      var statearr_22483_22505 = state_22476__$1;
                      statearr_22483_22505[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22477 === 6) {
                      var state_22476__$1 = state_22476;
                      var statearr_22484_22506 = state_22476__$1;
                      statearr_22484_22506[2] = null;
                      statearr_22484_22506[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22477 === 3) {
                        var inst_22473 = state_22476[2];
                        var inst_22474 = cljs.core.async.close_BANG_.call(null, out);
                        var state_22476__$1 = function() {
                          var statearr_22485 = state_22476;
                          statearr_22485[9] = inst_22473;
                          return statearr_22485;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22476__$1, inst_22474);
                      } else {
                        if (state_val_22477 === 2) {
                          var state_22476__$1 = state_22476;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22476__$1, 4, ch);
                        } else {
                          if (state_val_22477 === 11) {
                            var inst_22456 = state_22476[8];
                            var inst_22465 = state_22476[2];
                            var inst_22453 = inst_22456;
                            var state_22476__$1 = function() {
                              var statearr_22486 = state_22476;
                              statearr_22486[7] = inst_22453;
                              statearr_22486[10] = inst_22465;
                              return statearr_22486;
                            }();
                            var statearr_22487_22507 = state_22476__$1;
                            statearr_22487_22507[2] = null;
                            statearr_22487_22507[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22477 === 9) {
                              var inst_22456 = state_22476[8];
                              var state_22476__$1 = state_22476;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22476__$1, 11, out, inst_22456);
                            } else {
                              if (state_val_22477 === 5) {
                                var inst_22453 = state_22476[7];
                                var inst_22456 = state_22476[8];
                                var inst_22460 = cljs.core._EQ_.call(null, inst_22456, inst_22453);
                                var state_22476__$1 = state_22476;
                                if (inst_22460) {
                                  var statearr_22489_22508 = state_22476__$1;
                                  statearr_22489_22508[1] = 8;
                                } else {
                                  var statearr_22490_22509 = state_22476__$1;
                                  statearr_22490_22509[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22477 === 10) {
                                  var inst_22468 = state_22476[2];
                                  var state_22476__$1 = state_22476;
                                  var statearr_22491_22510 = state_22476__$1;
                                  statearr_22491_22510[2] = inst_22468;
                                  statearr_22491_22510[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22477 === 8) {
                                    var inst_22453 = state_22476[7];
                                    var tmp22488 = inst_22453;
                                    var inst_22453__$1 = tmp22488;
                                    var state_22476__$1 = function() {
                                      var statearr_22492 = state_22476;
                                      statearr_22492[7] = inst_22453__$1;
                                      return statearr_22492;
                                    }();
                                    var statearr_22493_22511 = state_22476__$1;
                                    statearr_22493_22511[2] = null;
                                    statearr_22493_22511[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22501, out);
          return function(switch__6353__auto__, c__6368__auto___22501, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22497 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_22497[0] = state_machine__6354__auto__;
                statearr_22497[1] = 1;
                return statearr_22497;
              };
              var state_machine__6354__auto____1 = function(state_22476) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22476);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22498) {
                      if (e22498 instanceof Object) {
                        var ex__6357__auto__ = e22498;
                        var statearr_22499_22512 = state_22476;
                        statearr_22499_22512[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22476);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22498;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22513 = state_22476;
                    state_22476 = G__22513;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22476) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22476);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22501, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_22500 = f__6369__auto__.call(null);
          statearr_22500[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22501;
          return statearr_22500;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22501, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___22648 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22648, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22648, out) {
            return function(state_22618) {
              var state_val_22619 = state_22618[1];
              if (state_val_22619 === 7) {
                var inst_22614 = state_22618[2];
                var state_22618__$1 = state_22618;
                var statearr_22620_22649 = state_22618__$1;
                statearr_22620_22649[2] = inst_22614;
                statearr_22620_22649[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22619 === 1) {
                  var inst_22581 = new Array(n);
                  var inst_22582 = inst_22581;
                  var inst_22583 = 0;
                  var state_22618__$1 = function() {
                    var statearr_22621 = state_22618;
                    statearr_22621[7] = inst_22582;
                    statearr_22621[8] = inst_22583;
                    return statearr_22621;
                  }();
                  var statearr_22622_22650 = state_22618__$1;
                  statearr_22622_22650[2] = null;
                  statearr_22622_22650[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22619 === 4) {
                    var inst_22586 = state_22618[9];
                    var inst_22586__$1 = state_22618[2];
                    var inst_22587 = inst_22586__$1 == null;
                    var inst_22588 = cljs.core.not.call(null, inst_22587);
                    var state_22618__$1 = function() {
                      var statearr_22623 = state_22618;
                      statearr_22623[9] = inst_22586__$1;
                      return statearr_22623;
                    }();
                    if (inst_22588) {
                      var statearr_22624_22651 = state_22618__$1;
                      statearr_22624_22651[1] = 5;
                    } else {
                      var statearr_22625_22652 = state_22618__$1;
                      statearr_22625_22652[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22619 === 15) {
                      var inst_22608 = state_22618[2];
                      var state_22618__$1 = state_22618;
                      var statearr_22626_22653 = state_22618__$1;
                      statearr_22626_22653[2] = inst_22608;
                      statearr_22626_22653[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22619 === 13) {
                        var state_22618__$1 = state_22618;
                        var statearr_22627_22654 = state_22618__$1;
                        statearr_22627_22654[2] = null;
                        statearr_22627_22654[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22619 === 6) {
                          var inst_22583 = state_22618[8];
                          var inst_22604 = inst_22583 > 0;
                          var state_22618__$1 = state_22618;
                          if (cljs.core.truth_(inst_22604)) {
                            var statearr_22628_22655 = state_22618__$1;
                            statearr_22628_22655[1] = 12;
                          } else {
                            var statearr_22629_22656 = state_22618__$1;
                            statearr_22629_22656[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22619 === 3) {
                            var inst_22616 = state_22618[2];
                            var state_22618__$1 = state_22618;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22618__$1, inst_22616);
                          } else {
                            if (state_val_22619 === 12) {
                              var inst_22582 = state_22618[7];
                              var inst_22606 = cljs.core.vec.call(null, inst_22582);
                              var state_22618__$1 = state_22618;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22618__$1, 15, out, inst_22606);
                            } else {
                              if (state_val_22619 === 2) {
                                var state_22618__$1 = state_22618;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22618__$1, 4, ch);
                              } else {
                                if (state_val_22619 === 11) {
                                  var inst_22598 = state_22618[2];
                                  var inst_22599 = new Array(n);
                                  var inst_22582 = inst_22599;
                                  var inst_22583 = 0;
                                  var state_22618__$1 = function() {
                                    var statearr_22630 = state_22618;
                                    statearr_22630[7] = inst_22582;
                                    statearr_22630[8] = inst_22583;
                                    statearr_22630[10] = inst_22598;
                                    return statearr_22630;
                                  }();
                                  var statearr_22631_22657 = state_22618__$1;
                                  statearr_22631_22657[2] = null;
                                  statearr_22631_22657[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22619 === 9) {
                                    var inst_22582 = state_22618[7];
                                    var inst_22596 = cljs.core.vec.call(null, inst_22582);
                                    var state_22618__$1 = state_22618;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22618__$1, 11, out, inst_22596);
                                  } else {
                                    if (state_val_22619 === 5) {
                                      var inst_22586 = state_22618[9];
                                      var inst_22582 = state_22618[7];
                                      var inst_22583 = state_22618[8];
                                      var inst_22591 = state_22618[11];
                                      var inst_22590 = inst_22582[inst_22583] = inst_22586;
                                      var inst_22591__$1 = inst_22583 + 1;
                                      var inst_22592 = inst_22591__$1 < n;
                                      var state_22618__$1 = function() {
                                        var statearr_22632 = state_22618;
                                        statearr_22632[12] = inst_22590;
                                        statearr_22632[11] = inst_22591__$1;
                                        return statearr_22632;
                                      }();
                                      if (cljs.core.truth_(inst_22592)) {
                                        var statearr_22633_22658 = state_22618__$1;
                                        statearr_22633_22658[1] = 8;
                                      } else {
                                        var statearr_22634_22659 = state_22618__$1;
                                        statearr_22634_22659[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22619 === 14) {
                                        var inst_22611 = state_22618[2];
                                        var inst_22612 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_22618__$1 = function() {
                                          var statearr_22636 = state_22618;
                                          statearr_22636[13] = inst_22611;
                                          return statearr_22636;
                                        }();
                                        var statearr_22637_22660 = state_22618__$1;
                                        statearr_22637_22660[2] = inst_22612;
                                        statearr_22637_22660[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22619 === 10) {
                                          var inst_22602 = state_22618[2];
                                          var state_22618__$1 = state_22618;
                                          var statearr_22638_22661 = state_22618__$1;
                                          statearr_22638_22661[2] = inst_22602;
                                          statearr_22638_22661[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22619 === 8) {
                                            var inst_22582 = state_22618[7];
                                            var inst_22591 = state_22618[11];
                                            var tmp22635 = inst_22582;
                                            var inst_22582__$1 = tmp22635;
                                            var inst_22583 = inst_22591;
                                            var state_22618__$1 = function() {
                                              var statearr_22639 = state_22618;
                                              statearr_22639[7] = inst_22582__$1;
                                              statearr_22639[8] = inst_22583;
                                              return statearr_22639;
                                            }();
                                            var statearr_22640_22662 = state_22618__$1;
                                            statearr_22640_22662[2] = null;
                                            statearr_22640_22662[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22648, out);
          return function(switch__6353__auto__, c__6368__auto___22648, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22644 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22644[0] = state_machine__6354__auto__;
                statearr_22644[1] = 1;
                return statearr_22644;
              };
              var state_machine__6354__auto____1 = function(state_22618) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22618);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22645) {
                      if (e22645 instanceof Object) {
                        var ex__6357__auto__ = e22645;
                        var statearr_22646_22663 = state_22618;
                        statearr_22646_22663[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22618);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22645;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22664 = state_22618;
                    state_22618 = G__22664;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22618) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22618);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22648, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_22647 = f__6369__auto__.call(null);
          statearr_22647[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22648;
          return statearr_22647;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22648, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___22807 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___22807, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___22807, out) {
            return function(state_22777) {
              var state_val_22778 = state_22777[1];
              if (state_val_22778 === 7) {
                var inst_22773 = state_22777[2];
                var state_22777__$1 = state_22777;
                var statearr_22779_22808 = state_22777__$1;
                statearr_22779_22808[2] = inst_22773;
                statearr_22779_22808[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22778 === 1) {
                  var inst_22736 = [];
                  var inst_22737 = inst_22736;
                  var inst_22738 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_22777__$1 = function() {
                    var statearr_22780 = state_22777;
                    statearr_22780[7] = inst_22738;
                    statearr_22780[8] = inst_22737;
                    return statearr_22780;
                  }();
                  var statearr_22781_22809 = state_22777__$1;
                  statearr_22781_22809[2] = null;
                  statearr_22781_22809[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22778 === 4) {
                    var inst_22741 = state_22777[9];
                    var inst_22741__$1 = state_22777[2];
                    var inst_22742 = inst_22741__$1 == null;
                    var inst_22743 = cljs.core.not.call(null, inst_22742);
                    var state_22777__$1 = function() {
                      var statearr_22782 = state_22777;
                      statearr_22782[9] = inst_22741__$1;
                      return statearr_22782;
                    }();
                    if (inst_22743) {
                      var statearr_22783_22810 = state_22777__$1;
                      statearr_22783_22810[1] = 5;
                    } else {
                      var statearr_22784_22811 = state_22777__$1;
                      statearr_22784_22811[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22778 === 15) {
                      var inst_22767 = state_22777[2];
                      var state_22777__$1 = state_22777;
                      var statearr_22785_22812 = state_22777__$1;
                      statearr_22785_22812[2] = inst_22767;
                      statearr_22785_22812[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22778 === 13) {
                        var state_22777__$1 = state_22777;
                        var statearr_22786_22813 = state_22777__$1;
                        statearr_22786_22813[2] = null;
                        statearr_22786_22813[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22778 === 6) {
                          var inst_22737 = state_22777[8];
                          var inst_22762 = inst_22737.length;
                          var inst_22763 = inst_22762 > 0;
                          var state_22777__$1 = state_22777;
                          if (cljs.core.truth_(inst_22763)) {
                            var statearr_22787_22814 = state_22777__$1;
                            statearr_22787_22814[1] = 12;
                          } else {
                            var statearr_22788_22815 = state_22777__$1;
                            statearr_22788_22815[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22778 === 3) {
                            var inst_22775 = state_22777[2];
                            var state_22777__$1 = state_22777;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22777__$1, inst_22775);
                          } else {
                            if (state_val_22778 === 12) {
                              var inst_22737 = state_22777[8];
                              var inst_22765 = cljs.core.vec.call(null, inst_22737);
                              var state_22777__$1 = state_22777;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22777__$1, 15, out, inst_22765);
                            } else {
                              if (state_val_22778 === 2) {
                                var state_22777__$1 = state_22777;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22777__$1, 4, ch);
                              } else {
                                if (state_val_22778 === 11) {
                                  var inst_22741 = state_22777[9];
                                  var inst_22745 = state_22777[10];
                                  var inst_22755 = state_22777[2];
                                  var inst_22756 = [];
                                  var inst_22757 = inst_22756.push(inst_22741);
                                  var inst_22737 = inst_22756;
                                  var inst_22738 = inst_22745;
                                  var state_22777__$1 = function() {
                                    var statearr_22789 = state_22777;
                                    statearr_22789[11] = inst_22755;
                                    statearr_22789[12] = inst_22757;
                                    statearr_22789[7] = inst_22738;
                                    statearr_22789[8] = inst_22737;
                                    return statearr_22789;
                                  }();
                                  var statearr_22790_22816 = state_22777__$1;
                                  statearr_22790_22816[2] = null;
                                  statearr_22790_22816[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22778 === 9) {
                                    var inst_22737 = state_22777[8];
                                    var inst_22753 = cljs.core.vec.call(null, inst_22737);
                                    var state_22777__$1 = state_22777;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22777__$1, 11, out, inst_22753);
                                  } else {
                                    if (state_val_22778 === 5) {
                                      var inst_22741 = state_22777[9];
                                      var inst_22745 = state_22777[10];
                                      var inst_22738 = state_22777[7];
                                      var inst_22745__$1 = f.call(null, inst_22741);
                                      var inst_22746 = cljs.core._EQ_.call(null, inst_22745__$1, inst_22738);
                                      var inst_22747 = cljs.core.keyword_identical_QMARK_.call(null, inst_22738, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_22748 = inst_22746 || inst_22747;
                                      var state_22777__$1 = function() {
                                        var statearr_22791 = state_22777;
                                        statearr_22791[10] = inst_22745__$1;
                                        return statearr_22791;
                                      }();
                                      if (cljs.core.truth_(inst_22748)) {
                                        var statearr_22792_22817 = state_22777__$1;
                                        statearr_22792_22817[1] = 8;
                                      } else {
                                        var statearr_22793_22818 = state_22777__$1;
                                        statearr_22793_22818[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22778 === 14) {
                                        var inst_22770 = state_22777[2];
                                        var inst_22771 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_22777__$1 = function() {
                                          var statearr_22795 = state_22777;
                                          statearr_22795[13] = inst_22770;
                                          return statearr_22795;
                                        }();
                                        var statearr_22796_22819 = state_22777__$1;
                                        statearr_22796_22819[2] = inst_22771;
                                        statearr_22796_22819[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22778 === 10) {
                                          var inst_22760 = state_22777[2];
                                          var state_22777__$1 = state_22777;
                                          var statearr_22797_22820 = state_22777__$1;
                                          statearr_22797_22820[2] = inst_22760;
                                          statearr_22797_22820[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22778 === 8) {
                                            var inst_22741 = state_22777[9];
                                            var inst_22745 = state_22777[10];
                                            var inst_22737 = state_22777[8];
                                            var inst_22750 = inst_22737.push(inst_22741);
                                            var tmp22794 = inst_22737;
                                            var inst_22737__$1 = tmp22794;
                                            var inst_22738 = inst_22745;
                                            var state_22777__$1 = function() {
                                              var statearr_22798 = state_22777;
                                              statearr_22798[14] = inst_22750;
                                              statearr_22798[7] = inst_22738;
                                              statearr_22798[8] = inst_22737__$1;
                                              return statearr_22798;
                                            }();
                                            var statearr_22799_22821 = state_22777__$1;
                                            statearr_22799_22821[2] = null;
                                            statearr_22799_22821[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___22807, out);
          return function(switch__6353__auto__, c__6368__auto___22807, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_22803 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22803[0] = state_machine__6354__auto__;
                statearr_22803[1] = 1;
                return statearr_22803;
              };
              var state_machine__6354__auto____1 = function(state_22777) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_22777);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e22804) {
                      if (e22804 instanceof Object) {
                        var ex__6357__auto__ = e22804;
                        var statearr_22805_22822 = state_22777;
                        statearr_22805_22822[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22777);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22804;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22823 = state_22777;
                    state_22777 = G__22823;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_22777) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_22777);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___22807, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_22806 = f__6369__auto__.call(null);
          statearr_22806[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___22807;
          return statearr_22806;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___22807, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", 
"\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.\u0259.", "b.e."], ERANAMES:["eram\u0131zdan \u0259vv\u0259l", "bizim eram\u0131z\u0131n"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", 
"Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ert\u0259si", "\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], STANDALONEWEEKDAYS:["bazar", "bazar ert\u0259si", 
"\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], SHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], STANDALONESHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-c\u00fc kv.", 
"4-c\u00fc kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-c\u00fc kvartal", "4-c\u00fc kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", 
"\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["1 \u0442\u0440\u0438\u043c.", "2 \u0442\u0440\u0438\u043c.", "3 \u0442\u0440\u0438\u043c.", "4 \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440.\u043e\u0431.", 
"\u0441\u043b.\u043e\u0431."], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d.MM.y '\u0433'.", "d.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", 
"\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", 
"\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", 
"\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", 
"\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", 
"\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], 
STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", 
"\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], 
SHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], STANDALONESHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], WEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["sul", "lun", "meu.", "mer.", "yaou", "gwe.", "sad."], STANDALONESHORTWEEKDAYS:["sul", 
"lun", "meu.", "mer.", "yaou", "gwe.", "sad."], NARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], STANDALONENARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", 
"juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], STANDALONESHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], SHORTWEEKDAYS:["dg.", 
"dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", 
"H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", 
"st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", 
"Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", 
"Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", 
"Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1} - {0}", "{1} - {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", 
"Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", "lun.", 
"mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d/M/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", 
"H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", 
"H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", 
"urria", "azaroa", "abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "y-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\u00f1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan", "feb", "mar", "abr", "mai", "xu\u00f1", "xul", "ago", "set", "out", "nov", "dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["domingo", "luns", "martes", "m\u00e9rcores", "xoves", "venres", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "m\u00e9r", 
"xov", "ven", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab8\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab2\u0abe", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aac\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0a9a\u0acb\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], ERANAMES:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", 
"\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], STANDALONESHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], 
WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", 
"\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u0915\u094b {0}", "{1} \u0915\u094b {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "p. Kr."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], ERANAMES:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], NARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], STANDALONENARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], MONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b", 
"\u0574\u0561\u0580\u057f\u056b", "\u0561\u057a\u0580\u056b\u056c\u056b", "\u0574\u0561\u0575\u056b\u057d\u056b", "\u0570\u0578\u0582\u0576\u056b\u057d\u056b", "\u0570\u0578\u0582\u056c\u056b\u057d\u056b", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b"], 
STANDALONEMONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], 
SHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", "\u0576\u0575\u0574", "\u0564\u056f\u057f"], STANDALONESHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", 
"\u0576\u0575\u0574", "\u0564\u056f\u057f"], WEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], STANDALONEWEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", 
"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], SHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], STANDALONESHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", 
"\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], NARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], STANDALONENARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], SHORTQUARTERS:["1-\u056b\u0576 \u0565\u057c\u0574\u057d.", "2-\u0580\u0564 \u0565\u057c\u0574\u057d.", "3-\u0580\u0564 \u0565\u057c\u0574\u057d.", "4-\u0580\u0564 \u0565\u057c\u0574\u057d."], QUARTERS:["1-\u056b\u0576 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", 
"2-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "3-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "4-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f"], AMPMS:["\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0561\u057c\u0561\u057b", "\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0570\u0565\u057f\u0578"], DATEFORMATS:["y\u0569. MMMM d, EEEE", "dd MMMM, y\u0569.", "dd MMM, y \u0569.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss, zzzz", "H:mm:ss, z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", 
"mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", 
"M", "\u00de", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", 
"Novembre", "Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", 
"mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["\u10eb\u10d5. \u10ec.", "\u10d0\u10ee. \u10ec."], ERANAMES:["\u10eb\u10d5\u10d4\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7", "\u10d0\u10ee\u10d0\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"], NARROWMONTHS:["\u10d8", "\u10d7", "\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], STANDALONENARROWMONTHS:["\u10d8", "\u10d7", 
"\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], MONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", 
"\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], STANDALONEMONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", 
"\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], SHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], 
STANDALONESHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], WEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", 
"\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], STANDALONEWEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], SHORTWEEKDAYS:["\u10d9\u10d5\u10d8", 
"\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], STANDALONESHORTWEEKDAYS:["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], NARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], STANDALONENARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], SHORTQUARTERS:["I \u10d9\u10d5.", 
"II \u10d9\u10d5.", "III \u10d9\u10d5.", "IV \u10d9\u10d5."], QUARTERS:["I \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "II \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "III \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "IV \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"], AMPMS:["\u10d3\u10d8\u10da\u10d8\u10e1", "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM, y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1}, {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", 
"\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], STANDALONEMONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", 
"\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], SHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], 
STANDALONESHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], WEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", 
"\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], SHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", 
"\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], STANDALONESHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", "\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], SHORTQUARTERS:["1-\u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0442\u043e\u049b\u0441\u0430\u043d", 
"3-\u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0442\u043e\u049b\u0441\u0430\u043d"], QUARTERS:["1-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"], AMPMS:["\u0442\u04af\u0441\u043a\u0435 \u0434\u0435\u0439\u0456\u043d", "\u0442\u04af\u0441\u0442\u0435\u043d \u043a\u0435\u0439\u0456\u043d"], 
DATEFORMATS:["EEEE, d MMMM y '\u0436'.", "d MMMM y '\u0436'.", "dd.MM.y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["\u1798\u17bb\u1793 \u1782.\u179f.", "\u1782.\u179f."], ERANAMES:["\u1798\u17bb\u1793\u200b\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", 
"\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONEMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", 
"\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], SHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", 
"\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONESHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", 
"\u1792\u17d2\u1793\u17bc"], WEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONEWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", 
"\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], SHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONESHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", 
"\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e4"], QUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", 
"\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], AMPMS:["\u1796\u17d2\u179a\u17b9\u1780", "\u179b\u17d2\u1784\u17b6\u1785"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], STANDALONESHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", 
"\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], 
STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0\u0cb5\u0cbf", 
"\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", 
"\u0ca4\u0ccd\u0cb0\u0cc8 4"], QUARTERS:["1 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["\u0431.\u0437. \u0447.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437. \u0447\u0435\u0439\u0438\u043d", "\u0431.\u0437."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], STANDALONEMONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", 
"\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], WEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", 
"\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], STANDALONEWEEKDAYS:["\u0416\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0414\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0428\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0428\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0416\u0443\u043c\u0430", "\u0418\u0448\u0435\u043c\u0431\u0438"], SHORTWEEKDAYS:["\u0416\u043a", "\u0414\u0448", "\u0428\u0435", "\u0428\u0430", "\u0411\u0448", 
"\u0416\u043c", "\u0418\u0448"], STANDALONESHORTWEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], SHORTQUARTERS:["1-\u0447\u0435\u0439.", "2-\u0447\u0435\u0439.", "3-\u0447\u0435\u0439.", "4-\u0447\u0435\u0439."], 
QUARTERS:["1-\u0447\u0435\u0439\u0440\u0435\u043a", "2-\u0447\u0435\u0439\u0440\u0435\u043a", "3-\u0447\u0435\u0439\u0440\u0435\u043a", "4-\u0447\u0435\u0439\u0440\u0435\u043a"], AMPMS:["\u0442\u04af\u0448\u043a\u04e9 \u0447\u0435\u0439\u0438\u043d\u043a\u0438", "\u0442\u04af\u0448\u0442\u04e9\u043d \u043a\u0438\u0439\u0438\u043d\u043a\u0438"], DATEFORMATS:["EEEE, d-MMMM, y-'\u0436'.", "d-MMMM, y-'\u0436'.", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], ERANAMES:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", 
"\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], STANDALONEMONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", 
"\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], SHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], STANDALONESHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", 
"\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], WEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONEWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], SHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", 
"\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONESHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["\u0e97", 
"\u0e88", "\u0e84", "\u200b\u0e9e\u0eb8", "\u0e9e", "\u200b\u0eaa\u0eb8", "\u0eaa"], SHORTQUARTERS:["\u0e95\u0ea11", "\u0e95\u0ea12", "\u0e95\u0ea13", "\u0e95\u0ea14"], QUARTERS:["\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 1", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 2", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 3", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 4"], AMPMS:["\u0e81\u0ec8\u0ead\u0e99\u0e97\u0ec8\u0ebd\u0e87", "\u0eab\u0ebc\u0eb1\u0e87\u0e97\u0ec8\u0ebd\u0e87"], DATEFORMATS:["EEEE \u0e97\u0eb5 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 zzzz", "H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", 
"bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["prie\u0161piet", 
"popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["Janv\u0101ris", "Febru\u0101ris", 
"Marts", "Apr\u012blis", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Janv.", "Febr.", "Marts", "Apr.", "Maijs", "J\u016bn.", "J\u016bl.", "Aug.", "Sept.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", 
"\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", 
"\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", 
"\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u043f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0432\u0442\u043e\u0440\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0442\u0440\u0435\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], 
AMPMS:["\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435", "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd MMMM y '\u0433'.", "dd MMMM y '\u0433'.", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d0e\u0d21\u0d3f"], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d7b\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", 
"\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", 
"\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", 
"\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["\u041c\u042d\u04e8", "\u041c\u042d"], ERANAMES:["\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439 \u04e9\u043c\u043d\u04e9\u0445", "\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], STANDALONEMONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], SHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", 
"2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], STANDALONESHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", 
"6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], WEEKDAYS:["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], STANDALONEWEEKDAYS:["\u043d\u044f\u043c", 
"\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], SHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], STANDALONESHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], NARROWWEEKDAYS:["1", 
"2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u04231", "\u04232", "\u04233", "\u04234"], QUARTERS:["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"], AMPMS:["\u04ae\u04e8", "\u04ae\u0425"], DATEFORMATS:["EEEE, y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' dd", "y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' d", 
"y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", 
"\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["[AM]", 
"[PM]"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} '\u0930\u094b\u091c\u0940' {0}", "{1} '\u0930\u094b\u091c\u0940' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["\u1018\u102e\u1005\u102e", "\u1021\u1031\u1012\u102e"], ERANAMES:["\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1019\u1015\u1031\u102b\u103a\u1019\u102e\u1000\u102c\u101c", "\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1015\u1031\u102b\u103a\u1011\u103d\u1014\u103a\u1038\u1015\u103c\u102e\u1038\u1000\u102c\u101c"], NARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", 
"\u1012"], STANDALONENARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", "\u1012"], MONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONEMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], SHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONESHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], WEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONEWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", 
"\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], SHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", 
"\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONESHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], NARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], STANDALONENARROWWEEKDAYS:["\u1010", 
"\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], SHORTQUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], QUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", 
"\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], AMPMS:["\u1014\u1036\u1014\u1000\u103a", "\u100a\u1014\u1031"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}\u1019\u103e\u102c {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], ERANAMES:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], NARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", "\u0967\u0968"], STANDALONENARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", 
"\u0967\u0968"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", 
"\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], STANDALONEWEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", "\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], SHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], 
NARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", "\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], QUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", 
"\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], AMPMS:["\u092a\u0942\u0930\u094d\u0935 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939", "\u0909\u0924\u094d\u0924\u0930 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], ERANAMES:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], NARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], STANDALONENARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], MONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", 
"\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONEMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", 
"\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], SHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", 
"\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONESHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], 
WEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], STANDALONEWEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", 
"\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], SHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], STANDALONESHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], 
NARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], STANDALONENARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], SHORTQUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", "\u0a2a\u0a42\u0a30\u0a3e"], QUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", 
"\u0a2a\u0a42\u0a30\u0a3e"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["da manh\u00e3", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", 
"dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", 
"\u043f\u0442", "\u0441\u0431"], STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0db4\u0dd6.", "\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0dc0."], ERANAMES:["\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0db4\u0dd6\u0dbb\u0dca\u200d\u0dc0", "\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0dc0\u0dbb\u0dca\u200d\u0dc2"], NARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], 
STANDALONENARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], MONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", 
"\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], STANDALONEMONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", "\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], SHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], STANDALONESHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], WEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", 
"\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], STANDALONEWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", 
"\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], SHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], STANDALONESHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", 
"\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], NARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], STANDALONENARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], SHORTQUARTERS:["\u0d9a\u0dcf\u0dbb\u0dca:1", "\u0d9a\u0dcf\u0dbb\u0dca:2", "\u0d9a\u0dcf\u0dbb\u0dca:3", 
"\u0d9a\u0dcf\u0dbb\u0dca:4"], QUARTERS:["1 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "2 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "3 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "4 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0"], AMPMS:["\u0db4\u0dd9.\u0dc0.", "\u0db4.\u0dc0."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["a h.mm.ss zzzz", "a h.mm.ss z", "a h.mm.ss", "a h.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", 
"d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH.mm.ss zzzz", 
"HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "e.r."], ERANAMES:["para er\u00ebs s\u00eb re", "er\u00ebs s\u00eb re"], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", 
"tetor", "n\u00ebntor", "dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], 
SHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["tremujori i par\u00eb", "tremujori i dyt\u00eb", "tremujori i tret\u00eb", "tremujori i kat\u00ebrt"], AMPMS:["paradite", "pasdite"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'n\u00eb' {0}", "{1} 'n\u00eb' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["S\u00f6ndag", "M\u00e5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["S\u00f6n", "M\u00e5n", "Tis", "Ons", "Tor", "Fre", "L\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd", "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", 
"\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", 
"\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", 
"\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", 
"\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", 
"\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", "\u0e28", "\u0e2a"], SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", 
"\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", 
"\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", 
"\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", 
"\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", 
"\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", 
"\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], 
AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["M.A.", "E"], ERANAMES:["M.A.", "E"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["Yanv", 
"Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], STANDALONESHORTMONTHS:["Yanv", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yaksh", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yaksh", "Dush", 
"Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng 1", "th\u00e1ng 2", "th\u00e1ng 3", "th\u00e1ng 4", "th\u00e1ng 5", "th\u00e1ng 6", "th\u00e1ng 7", "th\u00e1ng 8", "th\u00e1ng 9", "th\u00e1ng 10", "th\u00e1ng 11", "th\u00e1ng 12"], STANDALONEMONTHS:["Th\u00e1ng 1", "Th\u00e1ng 2", 
"Th\u00e1ng 3", "Th\u00e1ng 4", "Th\u00e1ng 5", "Th\u00e1ng 6", "Th\u00e1ng 7", "Th\u00e1ng 8", "Th\u00e1ng 9", "Th\u00e1ng 10", "Th\u00e1ng 11", "Th\u00e1ng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", 
"Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' MM 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", "{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", 
"11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", 
"\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", 
"\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy/M/d"], TIMEFORMATS:["zzzzah:mm:ss", "zah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}{0}", "{1}{0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "y/M/d"], TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", 
"ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "T", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota engu-1", "ikota engu-2", "ikota engu-3", "ikota engu-4"], AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "az") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
      } else {
        if (goog.LOCALE == "bg") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
        } else {
          if (goog.LOCALE == "bn") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
          } else {
            if (goog.LOCALE == "br") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
            } else {
              if (goog.LOCALE == "ca") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
              } else {
                if (goog.LOCALE == "chr") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
                } else {
                  if (goog.LOCALE == "cs") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
                  } else {
                    if (goog.LOCALE == "cy") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                    } else {
                      if (goog.LOCALE == "da") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                      } else {
                        if (goog.LOCALE == "de") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                          } else {
                            if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                            } else {
                              if (goog.LOCALE == "el") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                              } else {
                                if (goog.LOCALE == "en") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                } else {
                                  if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                                  } else {
                                    if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                    } else {
                                      if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                      } else {
                                        if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                        } else {
                                          if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                          } else {
                                            if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                            } else {
                                              if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                              } else {
                                                if (goog.LOCALE == "es") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                } else {
                                                  if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                  } else {
                                                    if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                    } else {
                                                      if (goog.LOCALE == "et") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                      } else {
                                                        if (goog.LOCALE == "eu") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                        } else {
                                                          if (goog.LOCALE == "fa") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                          } else {
                                                            if (goog.LOCALE == "fi") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                            } else {
                                                              if (goog.LOCALE == "fil") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                              } else {
                                                                if (goog.LOCALE == "fr") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                                } else {
                                                                  if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                                  } else {
                                                                    if (goog.LOCALE == "gl") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                                    } else {
                                                                      if (goog.LOCALE == "gsw") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                      } else {
                                                                        if (goog.LOCALE == "gu") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                        } else {
                                                                          if (goog.LOCALE == "haw") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                          } else {
                                                                            if (goog.LOCALE == "he") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                            } else {
                                                                              if (goog.LOCALE == "hi") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                              } else {
                                                                                if (goog.LOCALE == "hr") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                                } else {
                                                                                  if (goog.LOCALE == "hu") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "hy") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "id") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "in") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "is") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "it") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "iw") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "ja") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "ka") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "kk") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "km") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "kn") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "ko") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "ky") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "ln") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "lo") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "lt") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "lv") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "mk") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "ml") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "mn") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "mr") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "ms") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "mt") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "my") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "nb") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "ne") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "nl") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "no") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "no_NO" || goog.LOCALE == "no-NO") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "or") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "pa") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "pl") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "pt") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "ro") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "ru") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "si") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "sk") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "sl") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                                                  } else {
                                                                                                                                                                    if (goog.LOCALE == "sq") {
                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                                                    } else {
                                                                                                                                                                      if (goog.LOCALE == "sr") {
                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                                                      } else {
                                                                                                                                                                        if (goog.LOCALE == "sv") {
                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                                                        } else {
                                                                                                                                                                          if (goog.LOCALE == "sw") {
                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                                                          } else {
                                                                                                                                                                            if (goog.LOCALE == "ta") {
                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                                                            } else {
                                                                                                                                                                              if (goog.LOCALE == "te") {
                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                                                              } else {
                                                                                                                                                                                if (goog.LOCALE == "th") {
                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                                                                } else {
                                                                                                                                                                                  if (goog.LOCALE == "tl") {
                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if (goog.LOCALE == "tr") {
                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if (goog.LOCALE == "uk") {
                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if (goog.LOCALE == "ur") {
                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if (goog.LOCALE == "uz") {
                                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if (goog.LOCALE == "vi") {
                                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if (goog.LOCALE == "zh") {
                                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if (goog.LOCALE == "zu") {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":yearNum});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = opt_weekDay || goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var ONE_DAY = 24 * 60 * 60 * 1E3;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * ONE_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / ONE_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = parts[2] * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? parts[4] * 1E3 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 6E4);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = (opt_months);
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = (opt_years) || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return(this.date.getMonth());
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return(this.getDay() + 6) % 7;
};
goog.date.Date.prototype.getWeekday = function() {
  return(this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return(this.date.getUTCMonth());
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return(this.date.getUTCDay() + 6) % 7;
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return(this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1;m >= 0;m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 864E5);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return!!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return!isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return(this.date.getUTCDay());
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setHours(this.date.getHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setMinutes(this.date.getMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setSeconds(this.date.getSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    var MSG_TIME_AM = goog.getMsg("am");
    var MSG_TIME_PM = goog.getMsg("pm");
    label += isPM ? MSG_TIME_PM : MSG_TIME_AM;
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1E3 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("cljs_time.core");
goog.require("cljs.core");
goog.require("goog.i18n.TimeZone");
goog.require("goog.date.UtcDateTime");
cljs_time.core._EQ_ = function() {
  var _EQ___delegate = function(args) {
    if (cljs.core.every_QMARK_.call(null, function(p1__22934_SHARP_) {
      return p1__22934_SHARP_ instanceof goog.date.UtcDateTime;
    }, args)) {
      return cljs.core.apply.call(null, cljs.core._EQ_, cljs.core.map.call(null, function(p1__22935_SHARP_) {
        return p1__22935_SHARP_.getTime();
      }, args));
    } else {
      return cljs.core.apply.call(null, cljs.core._EQ_, args);
    }
  };
  var _EQ_ = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return _EQ___delegate.call(this, args);
  };
  _EQ_.cljs$lang$maxFixedArity = 0;
  _EQ_.cljs$lang$applyTo = function(arglist__22936) {
    var args = cljs.core.seq(arglist__22936);
    return _EQ___delegate(args);
  };
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___delegate;
  return _EQ_;
}();
cljs_time.core.DateTimeProtocol = function() {
  var obj22938 = {};
  return obj22938;
}();
cljs_time.core.year = function year(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$year$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$year$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.year[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.year["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.year", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.month = function month(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$month$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$month$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.month[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.month["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.month", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day = function day(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.day[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.day["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day_of_week = function day_of_week(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.day_of_week[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.day_of_week["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day-of-week", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.hour = function hour(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$hour$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$hour$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.hour[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.hour["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.hour", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.minute = function minute(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minute$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minute$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.minute[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.minute["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minute", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.sec = function sec(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$sec$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$sec$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.sec[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.sec["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.sec", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.second = function second(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$second$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$second$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.second[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.second["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.second", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.milli = function milli(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$milli$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$milli$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.milli[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.milli["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.milli", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.after_QMARK_ = function after_QMARK_(this$, that) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2(this$, that);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.after_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.after_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.after?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.before_QMARK_ = function before_QMARK_(this$, that) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2(this$, that);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.before_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.before_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.before?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.plus_ = function plus_(this$, period) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2(this$, period);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.plus_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.plus_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.plus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.minus_ = function minus_(this$, period) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2(this$, period);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.minus_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.minus_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.utc = goog.i18n.TimeZone.createTimeZone(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "UTC", new cljs.core.Keyword(null, "std_offset", "std_offset", 1663653877), 0, new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["UTC"], null), new cljs.core.Keyword(null, "transitions", "transitions", -2046216121), cljs.core.PersistentVector.EMPTY], 
null)));
cljs_time.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.core.periods = function() {
  var fixed_time_fn = function(f, set_fn, op, date, value) {
    var date__$1 = date.clone();
    set_fn.call(null, date__$1, op.call(null, f.call(null, date__$1), value));
    return date__$1;
  };
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.milli, function(fixed_time_fn) {
    return function(p1__22939_SHARP_, p2__22940_SHARP_) {
      return p1__22939_SHARP_.setMilliseconds(p2__22940_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.second, function(fixed_time_fn) {
    return function(p1__22941_SHARP_, p2__22942_SHARP_) {
      return p1__22941_SHARP_.setSeconds(p2__22942_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.minute, function(fixed_time_fn) {
    return function(p1__22943_SHARP_, p2__22944_SHARP_) {
      return p1__22943_SHARP_.setMinutes(p2__22944_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.hour, function(fixed_time_fn) {
    return function(p1__22945_SHARP_, p2__22946_SHARP_) {
      return p1__22945_SHARP_.setHours(p2__22946_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.day, function(fixed_time_fn) {
    return function(p1__22947_SHARP_, p2__22948_SHARP_) {
      return p1__22947_SHARP_.setDate(p2__22948_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      date__$1.setDate(op.call(null, cljs_time.core.day.call(null, date__$1), 7 * value));
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "months", "months", -45571637), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      var m = op.call(null, cljs_time.core.month.call(null, date__$1), value);
      var y = cljs_time.core.year.call(null, date__$1);
      var y__$1 = m > 12 ? y + 1 : m < 1 ? y - 1 : y;
      var m__$1 = m > 12 ? cljs.core.mod.call(null, m, 12) : m < 1 ? m + 12 : m;
      date__$1.setMonth(m__$1 - 1);
      date__$1.setYear(y__$1);
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "years", "years", -1298579689), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = cljs_time.core.leap_year_QMARK_.call(null, cljs_time.core.year.call(null, date__$1));
        if (and__3539__auto__) {
          var and__3539__auto____$1 = cljs_time.core._EQ_.call(null, 2, cljs_time.core.month.call(null, date__$1));
          if (cljs.core.truth_(and__3539__auto____$1)) {
            return cljs_time.core._EQ_.call(null, 29, cljs_time.core.day.call(null, date__$1));
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        date__$1.setDate(28);
      } else {
      }
      date__$1.setYear(op.call(null, cljs_time.core.year.call(null, date__$1), value));
      return date__$1;
    };
  }(fixed_time_fn)], null);
}();
cljs_time.core.period_fn = function period_fn(p) {
  return function(operator, date) {
    return cljs.core.reduce.call(null, function(p1__22950_SHARP_, p2__22949_SHARP_) {
      return cljs_time.core.periods.call(null, cljs.core.key.call(null, p2__22949_SHARP_)).call(null, operator, p1__22950_SHARP_, cljs.core.val.call(null, p2__22949_SHARP_));
    }, date, p);
  };
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
cljs_time.core._STAR_sys_time_STAR_ = null;
cljs_time.core.now = function now() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    return cljs_time.core._STAR_sys_time_STAR_;
  } else {
    return new goog.date.UtcDateTime;
  }
};
cljs_time.core.at_midnight = function at_midnight(datetime) {
  var datetime__$1 = datetime.clone();
  var G__22952 = datetime__$1;
  G__22952.setHours(0);
  G__22952.setMinutes(0);
  G__22952.setSeconds(0);
  G__22952.setMilliseconds(0);
  return G__22952;
};
cljs_time.core.today_at_midnight = function today_at_midnight() {
  return cljs_time.core.at_midnight.call(null, cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_) ? cljs_time.core._STAR_sys_time_STAR_ : cljs_time.core.now.call(null));
};
cljs_time.core.epoch = function epoch() {
  var G__22954 = new goog.date.UtcDateTime;
  G__22954.setTime(0);
  return G__22954;
};
cljs_time.core.date_midnight = function() {
  var date_midnight = null;
  var date_midnight__1 = function(year) {
    return date_midnight.call(null, year, 1, 1);
  };
  var date_midnight__2 = function(year, month) {
    return date_midnight.call(null, year, month, 1);
  };
  var date_midnight__3 = function(year, month, day) {
    return new goog.date.UtcDateTime(year, month - 1, day);
  };
  date_midnight = function(year, month, day) {
    switch(arguments.length) {
      case 1:
        return date_midnight__1.call(this, year);
      case 2:
        return date_midnight__2.call(this, year, month);
      case 3:
        return date_midnight__3.call(this, year, month, day);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_midnight.cljs$core$IFn$_invoke$arity$1 = date_midnight__1;
  date_midnight.cljs$core$IFn$_invoke$arity$2 = date_midnight__2;
  date_midnight.cljs$core$IFn$_invoke$arity$3 = date_midnight__3;
  return date_midnight;
}();
cljs_time.core.date_time = function() {
  var date_time = null;
  var date_time__1 = function(year) {
    return date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var date_time__2 = function(year, month) {
    return date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var date_time__3 = function(year, month, day) {
    return date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var date_time__4 = function(year, month, day, hour) {
    return date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var date_time__5 = function(year, month, day, hour, minute) {
    return date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var date_time__6 = function(year, month, day, hour, minute, second) {
    return date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.UtcDateTime(year, month - 1, day, hour, minute, second, millis);
  };
  date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return date_time__1.call(this, year);
      case 2:
        return date_time__2.call(this, year, month);
      case 3:
        return date_time__3.call(this, year, month, day);
      case 4:
        return date_time__4.call(this, year, month, day, hour);
      case 5:
        return date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_time.cljs$core$IFn$_invoke$arity$1 = date_time__1;
  date_time.cljs$core$IFn$_invoke$arity$2 = date_time__2;
  date_time.cljs$core$IFn$_invoke$arity$3 = date_time__3;
  date_time.cljs$core$IFn$_invoke$arity$4 = date_time__4;
  date_time.cljs$core$IFn$_invoke$arity$5 = date_time__5;
  date_time.cljs$core$IFn$_invoke$arity$6 = date_time__6;
  date_time.cljs$core$IFn$_invoke$arity$7 = date_time__7;
  return date_time;
}();
cljs_time.core.period = function() {
  var period = null;
  var period__2 = function(period__$1, value) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap.fromArray([period__$1, value], true, false), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486)], null));
  };
  var period__3 = function() {
    var G__22955__delegate = function(p1, v1, kvs) {
      return cljs.core.apply.call(null, cljs.core.assoc, period.call(null, p1, v1), kvs);
    };
    var G__22955 = function(p1, v1, var_args) {
      var kvs = null;
      if (arguments.length > 2) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22955__delegate.call(this, p1, v1, kvs);
    };
    G__22955.cljs$lang$maxFixedArity = 2;
    G__22955.cljs$lang$applyTo = function(arglist__22956) {
      var p1 = cljs.core.first(arglist__22956);
      arglist__22956 = cljs.core.next(arglist__22956);
      var v1 = cljs.core.first(arglist__22956);
      var kvs = cljs.core.rest(arglist__22956);
      return G__22955__delegate(p1, v1, kvs);
    };
    G__22955.cljs$core$IFn$_invoke$arity$variadic = G__22955__delegate;
    return G__22955;
  }();
  period = function(p1, v1, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return period__2.call(this, p1, v1);
      default:
        return period__3.cljs$core$IFn$_invoke$arity$variadic(p1, v1, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  period.cljs$lang$maxFixedArity = 2;
  period.cljs$lang$applyTo = period__3.cljs$lang$applyTo;
  period.cljs$core$IFn$_invoke$arity$2 = period__2;
  period.cljs$core$IFn$_invoke$arity$variadic = period__3.cljs$core$IFn$_invoke$arity$variadic;
  return period;
}();
cljs_time.core.years = function() {
  var years = null;
  var years__0 = function() {
    return years.call(null, null);
  };
  var years__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), n);
  };
  years = function(n) {
    switch(arguments.length) {
      case 0:
        return years__0.call(this);
      case 1:
        return years__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  years.cljs$core$IFn$_invoke$arity$0 = years__0;
  years.cljs$core$IFn$_invoke$arity$1 = years__1;
  return years;
}();
cljs_time.core.months = function() {
  var months = null;
  var months__0 = function() {
    return months.call(null, null);
  };
  var months__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), n);
  };
  months = function(n) {
    switch(arguments.length) {
      case 0:
        return months__0.call(this);
      case 1:
        return months__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  months.cljs$core$IFn$_invoke$arity$0 = months__0;
  months.cljs$core$IFn$_invoke$arity$1 = months__1;
  return months;
}();
cljs_time.core.weeks = function() {
  var weeks = null;
  var weeks__0 = function() {
    return weeks.call(null, null);
  };
  var weeks__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), n);
  };
  weeks = function(n) {
    switch(arguments.length) {
      case 0:
        return weeks__0.call(this);
      case 1:
        return weeks__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  weeks.cljs$core$IFn$_invoke$arity$0 = weeks__0;
  weeks.cljs$core$IFn$_invoke$arity$1 = weeks__1;
  return weeks;
}();
cljs_time.core.days = function() {
  var days = null;
  var days__0 = function() {
    return days.call(null, null);
  };
  var days__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), n);
  };
  days = function(n) {
    switch(arguments.length) {
      case 0:
        return days__0.call(this);
      case 1:
        return days__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  days.cljs$core$IFn$_invoke$arity$0 = days__0;
  days.cljs$core$IFn$_invoke$arity$1 = days__1;
  return days;
}();
cljs_time.core.hours = function() {
  var hours = null;
  var hours__0 = function() {
    return hours.call(null, null);
  };
  var hours__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), n);
  };
  hours = function(n) {
    switch(arguments.length) {
      case 0:
        return hours__0.call(this);
      case 1:
        return hours__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hours.cljs$core$IFn$_invoke$arity$0 = hours__0;
  hours.cljs$core$IFn$_invoke$arity$1 = hours__1;
  return hours;
}();
cljs_time.core.minutes = function() {
  var minutes = null;
  var minutes__0 = function() {
    return minutes.call(null, null);
  };
  var minutes__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), n);
  };
  minutes = function(n) {
    switch(arguments.length) {
      case 0:
        return minutes__0.call(this);
      case 1:
        return minutes__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minutes.cljs$core$IFn$_invoke$arity$0 = minutes__0;
  minutes.cljs$core$IFn$_invoke$arity$1 = minutes__1;
  return minutes;
}();
cljs_time.core.seconds = function() {
  var seconds = null;
  var seconds__0 = function() {
    return seconds.call(null, null);
  };
  var seconds__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), n);
  };
  seconds = function(n) {
    switch(arguments.length) {
      case 0:
        return seconds__0.call(this);
      case 1:
        return seconds__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seconds.cljs$core$IFn$_invoke$arity$0 = seconds__0;
  seconds.cljs$core$IFn$_invoke$arity$1 = seconds__1;
  return seconds;
}();
cljs_time.core.millis = function() {
  var millis = null;
  var millis__0 = function() {
    return millis.call(null, null);
  };
  var millis__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), n);
  };
  millis = function(n) {
    switch(arguments.length) {
      case 0:
        return millis__0.call(this);
      case 1:
        return millis__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  millis.cljs$core$IFn$_invoke$arity$0 = millis__0;
  millis.cljs$core$IFn$_invoke$arity$1 = millis__1;
  return millis;
}();
cljs_time.core.plus = function() {
  var plus = null;
  var plus__2 = function(dt, p) {
    return cljs_time.core.plus_.call(null, dt, p);
  };
  var plus__3 = function() {
    var G__22957__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.plus_, cljs_time.core.plus_.call(null, dt, p), ps);
    };
    var G__22957 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22957__delegate.call(this, dt, p, ps);
    };
    G__22957.cljs$lang$maxFixedArity = 2;
    G__22957.cljs$lang$applyTo = function(arglist__22958) {
      var dt = cljs.core.first(arglist__22958);
      arglist__22958 = cljs.core.next(arglist__22958);
      var p = cljs.core.first(arglist__22958);
      var ps = cljs.core.rest(arglist__22958);
      return G__22957__delegate(dt, p, ps);
    };
    G__22957.cljs$core$IFn$_invoke$arity$variadic = G__22957__delegate;
    return G__22957;
  }();
  plus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return plus__2.call(this, dt, p);
      default:
        return plus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  plus.cljs$lang$maxFixedArity = 2;
  plus.cljs$lang$applyTo = plus__3.cljs$lang$applyTo;
  plus.cljs$core$IFn$_invoke$arity$2 = plus__2;
  plus.cljs$core$IFn$_invoke$arity$variadic = plus__3.cljs$core$IFn$_invoke$arity$variadic;
  return plus;
}();
cljs_time.core.minus = function() {
  var minus = null;
  var minus__2 = function(dt, p) {
    return cljs_time.core.minus_.call(null, dt, p);
  };
  var minus__3 = function() {
    var G__22959__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.minus_, cljs_time.core.minus_.call(null, dt, p), ps);
    };
    var G__22959 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__22959__delegate.call(this, dt, p, ps);
    };
    G__22959.cljs$lang$maxFixedArity = 2;
    G__22959.cljs$lang$applyTo = function(arglist__22960) {
      var dt = cljs.core.first(arglist__22960);
      arglist__22960 = cljs.core.next(arglist__22960);
      var p = cljs.core.first(arglist__22960);
      var ps = cljs.core.rest(arglist__22960);
      return G__22959__delegate(dt, p, ps);
    };
    G__22959.cljs$core$IFn$_invoke$arity$variadic = G__22959__delegate;
    return G__22959;
  }();
  minus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return minus__2.call(this, dt, p);
      default:
        return minus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minus.cljs$lang$maxFixedArity = 2;
  minus.cljs$lang$applyTo = minus__3.cljs$lang$applyTo;
  minus.cljs$core$IFn$_invoke$arity$2 = minus__2;
  minus.cljs$core$IFn$_invoke$arity$variadic = minus__3.cljs$core$IFn$_invoke$arity$variadic;
  return minus;
}();
cljs_time.core.ago = function ago(period) {
  return cljs_time.core.minus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.from_now = function from_now(period) {
  return cljs_time.core.plus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.interval = function interval(start, end) {
  if (start.getTime() < end.getTime()) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null))))));
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), start, new cljs.core.Keyword(null, "end", "end", -268185958), end], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null));
};
cljs_time.core.start = function start(in$) {
  return(new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.end = function end(in$) {
  return(new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.extend = function() {
  var extend__delegate = function(in$, by) {
    return cljs.core.assoc.call(null, in$, new cljs.core.Keyword(null, "end", "end", -268185958), cljs.core.apply.call(null, cljs_time.core.plus, cljs_time.core.end.call(null, in$), by));
  };
  var extend = function(in$, var_args) {
    var by = null;
    if (arguments.length > 1) {
      by = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return extend__delegate.call(this, in$, by);
  };
  extend.cljs$lang$maxFixedArity = 1;
  extend.cljs$lang$applyTo = function(arglist__22961) {
    var in$ = cljs.core.first(arglist__22961);
    var by = cljs.core.rest(arglist__22961);
    return extend__delegate(in$, by);
  };
  extend.cljs$core$IFn$_invoke$arity$variadic = extend__delegate;
  return extend;
}();
cljs_time.core.in_millis = function in_millis(p__22962) {
  var map__22964 = p__22962;
  var map__22964__$1 = cljs.core.seq_QMARK_.call(null, map__22964) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22964) : map__22964;
  var end = cljs.core.get.call(null, map__22964__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__22964__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return end.getTime() - start.getTime();
};
cljs_time.core.in_seconds = function in_seconds(in$) {
  return cljs_time.core.in_millis.call(null, in$) / 1E3 | 0;
};
cljs_time.core.in_minutes = function in_minutes(in$) {
  return cljs_time.core.in_seconds.call(null, in$) / 60 | 0;
};
cljs_time.core.in_hours = function in_hours(in$) {
  return cljs_time.core.in_minutes.call(null, in$) / 60 | 0;
};
cljs_time.core.in_days = function in_days(in$) {
  return cljs_time.core.in_hours.call(null, in$) / 24 | 0;
};
cljs_time.core.in_weeks = function in_weeks(in$) {
  return cljs_time.core.in_days.call(null, in$) / 7 | 0;
};
cljs_time.core.month_range = function month_range(p__22967) {
  var map__22969 = p__22967;
  var map__22969__$1 = cljs.core.seq_QMARK_.call(null, map__22969) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22969) : map__22969;
  var end = cljs.core.get.call(null, map__22969__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__22969__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.take_while.call(null, function(map__22969, map__22969__$1, end, start) {
    return function(p1__22965_SHARP_) {
      return cljs_time.core.before_QMARK_.call(null, p1__22965_SHARP_, end);
    };
  }(map__22969, map__22969__$1, end, start), cljs.core.map.call(null, function(map__22969, map__22969__$1, end, start) {
    return function(p1__22966_SHARP_) {
      return cljs_time.core.plus.call(null, start, cljs_time.core.months.call(null, p1__22966_SHARP_ + 1));
    };
  }(map__22969, map__22969__$1, end, start), cljs.core.range.call(null)));
};
cljs_time.core.total_days_in_whole_months = function total_days_in_whole_months(interval) {
  return cljs.core.map.call(null, function(p1__22970_SHARP_) {
    return p1__22970_SHARP_.getNumberOfDaysInMonth();
  }, cljs_time.core.month_range.call(null, interval));
};
cljs_time.core.in_months = function in_months(p__22971) {
  var map__22973 = p__22971;
  var map__22973__$1 = cljs.core.seq_QMARK_.call(null, map__22973) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22973) : map__22973;
  var interval = map__22973__$1;
  var end = cljs.core.get.call(null, map__22973__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__22973__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.count.call(null, cljs_time.core.total_days_in_whole_months.call(null, interval));
};
cljs_time.core.in_years = function in_years(p__22974) {
  var map__22976 = p__22974;
  var map__22976__$1 = cljs.core.seq_QMARK_.call(null, map__22976) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22976) : map__22976;
  var end = cljs.core.get.call(null, map__22976__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__22976__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var sm = cljs_time.core.month.call(null, start);
  var sd = cljs_time.core.day.call(null, start);
  var em = cljs_time.core.month.call(null, end);
  var ed = cljs_time.core.day.call(null, end);
  var d1 = cljs.core.truth_(function() {
    var and__3539__auto__ = cljs_time.core._EQ_.call(null, sm, 2);
    if (cljs.core.truth_(and__3539__auto__)) {
      var and__3539__auto____$1 = cljs_time.core._EQ_.call(null, sd, 29);
      if (cljs.core.truth_(and__3539__auto____$1)) {
        var and__3539__auto____$2 = cljs_time.core._EQ_.call(null, em, 2);
        if (cljs.core.truth_(and__3539__auto____$2)) {
          return cljs_time.core._EQ_.call(null, ed, 28);
        } else {
          return and__3539__auto____$2;
        }
      } else {
        return and__3539__auto____$1;
      }
    } else {
      return and__3539__auto__;
    }
  }()) ? 0 : cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 0 : cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 1 : 0;
  return cljs_time.core.year.call(null, end) - cljs_time.core.year.call(null, start) - d1;
};
cljs_time.core.within_QMARK_ = function() {
  var within_QMARK_ = null;
  var within_QMARK___2 = function(p__22977, date) {
    var map__22979 = p__22977;
    var map__22979__$1 = cljs.core.seq_QMARK_.call(null, map__22979) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22979) : map__22979;
    var end = cljs.core.get.call(null, map__22979__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var start = cljs.core.get.call(null, map__22979__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    return within_QMARK_.call(null, start, end, date);
  };
  var within_QMARK___3 = function(start, end, date) {
    var or__3551__auto__ = cljs_time.core._EQ_.call(null, start, date);
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      var and__3539__auto__ = cljs_time.core.before_QMARK_.call(null, start, date);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end, date);
      } else {
        return and__3539__auto__;
      }
    }
  };
  within_QMARK_ = function(start, end, date) {
    switch(arguments.length) {
      case 2:
        return within_QMARK___2.call(this, start, end);
      case 3:
        return within_QMARK___3.call(this, start, end, date);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  within_QMARK_.cljs$core$IFn$_invoke$arity$2 = within_QMARK___2;
  within_QMARK_.cljs$core$IFn$_invoke$arity$3 = within_QMARK___3;
  return within_QMARK_;
}();
cljs_time.core.overlaps_QMARK_ = function() {
  var overlaps_QMARK_ = null;
  var overlaps_QMARK___2 = function(p__22980, p__22981) {
    var map__22984 = p__22980;
    var map__22984__$1 = cljs.core.seq_QMARK_.call(null, map__22984) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22984) : map__22984;
    var start_a = cljs.core.get.call(null, map__22984__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_a = cljs.core.get.call(null, map__22984__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var map__22985 = p__22981;
    var map__22985__$1 = cljs.core.seq_QMARK_.call(null, map__22985) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22985) : map__22985;
    var start_b = cljs.core.get.call(null, map__22985__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_b = cljs.core.get.call(null, map__22985__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    return overlaps_QMARK_.call(null, start_a, end_a, start_b, end_b);
  };
  var overlaps_QMARK___4 = function(start_a, end_a, start_b, end_b) {
    var or__3551__auto__ = function() {
      var and__3539__auto__ = cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      } else {
        return and__3539__auto__;
      }
    }();
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      var and__3539__auto__ = cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      } else {
        return and__3539__auto__;
      }
    }
  };
  overlaps_QMARK_ = function(start_a, end_a, start_b, end_b) {
    switch(arguments.length) {
      case 2:
        return overlaps_QMARK___2.call(this, start_a, end_a);
      case 4:
        return overlaps_QMARK___4.call(this, start_a, end_a, start_b, end_b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2 = overlaps_QMARK___2;
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4 = overlaps_QMARK___4;
  return overlaps_QMARK_;
}();
cljs_time.core.abuts_QMARK_ = function abuts_QMARK_(p__22986, p__22987) {
  var map__22990 = p__22986;
  var map__22990__$1 = cljs.core.seq_QMARK_.call(null, map__22990) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22990) : map__22990;
  var start_a = cljs.core.get.call(null, map__22990__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__22990__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__22991 = p__22987;
  var map__22991__$1 = cljs.core.seq_QMARK_.call(null, map__22991) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22991) : map__22991;
  var start_b = cljs.core.get.call(null, map__22991__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__22991__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var or__3551__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return cljs_time.core._EQ_.call(null, end_a, start_b);
  }
};
cljs_time.core.mins_ago = function mins_ago(d) {
  return cljs_time.core.in_minutes.call(null, cljs_time.core.interval.call(null, d, cljs_time.core.now.call(null)));
};
cljs_time.core.last_day_of_the_month = function() {
  var last_day_of_the_month = null;
  var last_day_of_the_month__1 = function(dt) {
    return last_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var last_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.minus.call(null, cljs_time.core.date_time.call(null, year, month + 1, 1), cljs_time.core.days.call(null, 1));
  };
  last_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return last_day_of_the_month__1.call(this, year);
      case 2:
        return last_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = last_day_of_the_month__1;
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = last_day_of_the_month__2;
  return last_day_of_the_month;
}();
cljs_time.core.number_of_days_in_the_month = function() {
  var number_of_days_in_the_month = null;
  var number_of_days_in_the_month__1 = function(dt) {
    return number_of_days_in_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var number_of_days_in_the_month__2 = function(year, month) {
    return cljs_time.core.last_day_of_the_month.call(null, year, month).getDate();
  };
  number_of_days_in_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return number_of_days_in_the_month__1.call(this, year);
      case 2:
        return number_of_days_in_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1 = number_of_days_in_the_month__1;
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2 = number_of_days_in_the_month__2;
  return number_of_days_in_the_month;
}();
cljs_time.core.first_day_of_the_month = function() {
  var first_day_of_the_month = null;
  var first_day_of_the_month__1 = function(dt) {
    return first_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var first_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.date_time.call(null, year, month, 1);
  };
  first_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return first_day_of_the_month__1.call(this, year);
      case 2:
        return first_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = first_day_of_the_month__1;
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = first_day_of_the_month__2;
  return first_day_of_the_month;
}();
cljs_time.core.__GT_period = function() {
  var method_table__4417__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4418__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4419__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4421__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("-\x3eperiod", cljs.core.meta, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4421__auto__, method_table__4417__auto__, prefer_table__4418__auto__, method_cache__4419__auto__, cached_hierarchy__4420__auto__);
}();
cljs.core._add_method.call(null, cljs_time.core.__GT_period, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null), function(p__22992) {
  var map__22993 = p__22992;
  var map__22993__$1 = cljs.core.seq_QMARK_.call(null, map__22993) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22993) : map__22993;
  var interval = map__22993__$1;
  var end = cljs.core.get.call(null, map__22993__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__22993__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var years = cljs_time.core.in_years.call(null, interval);
  var start_year = cljs_time.core.year.call(null, start);
  var leap_years = cljs.core.count.call(null, cljs.core.remove.call(null, cljs.core.false_QMARK_, cljs.core.map.call(null, cljs_time.core.leap_year_QMARK_, cljs.core.range.call(null, start_year, start_year + years))));
  var start_month = cljs_time.core.month.call(null, start);
  var days_in_months = cljs_time.core.total_days_in_whole_months.call(null, interval);
  var months = cljs.core.count.call(null, days_in_months);
  var days_to_remove = 365 * years + leap_years + cljs.core.reduce.call(null, cljs.core._PLUS_, days_in_months);
  var days = cljs_time.core.in_days.call(null, interval) - days_to_remove;
  var hours_to_remove = 24 * (days + days_to_remove);
  var hours = cljs_time.core.in_hours.call(null, interval) - hours_to_remove;
  var minutes_to_remove = 60 * (hours + hours_to_remove);
  var minutes = cljs_time.core.in_minutes.call(null, interval) - minutes_to_remove;
  var seconds_to_remove = 60 * (minutes + minutes_to_remove);
  var seconds = cljs_time.core.in_seconds.call(null, interval) - seconds_to_remove;
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 
  cljs_time.core.in_millis.call(null, interval) - 1E3 * (seconds + seconds_to_remove));
});
cljs_time.core.today_at = function() {
  var today_at = null;
  var today_at__2 = function(hours, minutes) {
    return today_at.call(null, hours, minutes, 0);
  };
  var today_at__3 = function(hours, minutes, seconds) {
    return today_at.call(null, hours, minutes, seconds, 0);
  };
  var today_at__4 = function(hours, minutes, seconds, millis) {
    var midnight = new goog.date.Date;
    var G__22995 = new goog.date.UtcDateTime(0);
    G__22995.setYear(midnight.getYear());
    G__22995.setMonth(midnight.getMonth());
    G__22995.setDate(midnight.getDate());
    G__22995.setHours(hours);
    G__22995.setMinutes(minutes);
    G__22995.setSeconds(seconds);
    G__22995.setMilliseconds(millis);
    return G__22995;
  };
  today_at = function(hours, minutes, seconds, millis) {
    switch(arguments.length) {
      case 2:
        return today_at__2.call(this, hours, minutes);
      case 3:
        return today_at__3.call(this, hours, minutes, seconds);
      case 4:
        return today_at__4.call(this, hours, minutes, seconds, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  today_at.cljs$core$IFn$_invoke$arity$2 = today_at__2;
  today_at.cljs$core$IFn$_invoke$arity$3 = today_at__3;
  today_at.cljs$core$IFn$_invoke$arity$4 = today_at__4;
  return today_at;
}();
cljs_time.core.do_at_STAR_ = function do_at_STAR_(base_date_time, body_fn) {
  var _STAR_sys_time_STAR_22997 = cljs_time.core._STAR_sys_time_STAR_;
  try {
    cljs_time.core._STAR_sys_time_STAR_ = base_date_time;
    return body_fn.call(null);
  } finally {
    cljs_time.core._STAR_sys_time_STAR_ = _STAR_sys_time_STAR_22997;
  }
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj22999 = {};
  return obj22999;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.display_name[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.display_name["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj23001 = {};
  return obj23001;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.init_state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.init_state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj23003 = {};
  return obj23003;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.should_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.should_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj23005 = {};
  return obj23005;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_mount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_mount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj23007 = {};
  return obj23007;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.did_mount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.did_mount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj23009 = {};
  return obj23009;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_unmount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_unmount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj23011 = {};
  return obj23011;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj23013 = {};
  return obj23013;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.did_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.did_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj23015 = {};
  return obj23015;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_receive_props[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_receive_props["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj23017 = {};
  return obj23017;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.render[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.render["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj23019 = {};
  return obj23019;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.render_state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.render_state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj23021 = {};
  return obj23021;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj23023 = {};
  return obj23023;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj23025 = {};
  return obj23025;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_render_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_render_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_render_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_render_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj23027 = {};
  return obj23027;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj23029 = {};
  return obj23029;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._get_queue[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._get_queue["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj23031 = {};
  return obj23031;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._value[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._value["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj23033 = {};
  return obj23033;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._path[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._path["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj23035 = {};
  return obj23035;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3539__auto__ = value;
      if (and__3539__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4178__auto__ = value == null ? null : value;
      return function() {
        var or__3551__auto__ = om.core._to_cursor[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._to_cursor["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3539__auto__ = value;
      if (and__3539__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4178__auto__ = value == null ? null : value;
      return function() {
        var or__3551__auto__ = om.core._to_cursor[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._to_cursor["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj23037 = {};
  return obj23037;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._derive[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._derive["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj23039 = {};
  return obj23039;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._transact_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj23041 = {};
  return obj23041;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._listen_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._notify_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__23043 = state;
    if (G__23043) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23043.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__23043.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__23043);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__23043);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__23045 = x;
  if (G__23045) {
    var bit__4201__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = bit__4201__auto__;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return G__23045.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__23045.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__23045);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__23045);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_23047 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23047;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__23049 = state;
    G__23049["__om_prev_state"] = state["__om_state"];
    G__23049["__om_state"] = pending_state;
    G__23049["__om_pending_state"] = null;
    return G__23049;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3551__auto__ = props;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3551__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23050 = c;
    if (G__23050) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23050.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__23050.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__23050);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__23050);
    }
  }()) {
    var state_23077 = this$.state;
    var _STAR_read_enabled_STAR_23051_23078 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3551__auto__ = state_23077["__om_prev_state"];
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return state_23077["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23051_23078;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23052 = c;
    if (G__23052) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23052.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23052.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__23052);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__23052);
    }
  }()) {
    var _STAR_read_enabled_STAR_23053 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23053;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23054 = c;
    if (G__23054) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23054.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__23054.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__23054);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__23054);
    }
  }()) {
    var _STAR_read_enabled_STAR_23055 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23055;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_23056 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__23057 = c;
      if (G__23057) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__23057.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__23057.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__23057);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__23057);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            return false;
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23056;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_23058 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__23059 = c;
      if (G__23059) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__23059.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__23059.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23059);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23059);
      }
    }()) {
      var _STAR_parent_STAR_23060 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_23061 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_23062 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_23062;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_23061;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_23060;
      }
    } else {
      if (function() {
        var G__23063 = c;
        if (G__23063) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__23063.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__23063.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23063);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23063);
        }
      }()) {
        var _STAR_parent_STAR_23064 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_23065 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_23066 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_23066;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_23065;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_23064;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23058;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_23079 = om.core.children.call(null, this$);
  if (function() {
    var G__23067 = c_23079;
    if (G__23067) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23067.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__23067.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__23067);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__23067);
    }
  }()) {
    var state_23080 = this$.state;
    var _STAR_read_enabled_STAR_23068_23081 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_23079, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23068_23081;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3551__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__23069 = c;
    if (G__23069) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23069.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__23069.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__23069);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__23069);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_23070 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23070;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3551__auto__ = id;
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23071 = c;
    if (G__23071) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23071.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23071.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__23071);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__23071);
    }
  }()) {
    var _STAR_read_enabled_STAR_23072 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23072;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23073 = c;
    if (G__23073) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23073.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__23073.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__23073);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__23073);
    }
  }()) {
    var _STAR_read_enabled_STAR_23074 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23074;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_23082 = om.core.children.call(null, this$);
  if (function() {
    var G__23075 = c_23082;
    if (G__23075) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23075.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23075.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__23075);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__23075);
    }
  }()) {
    var _STAR_read_enabled_STAR_23076_23083 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_23082);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23076_23083;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x23087 = obj;
  x23087.om$core$IGetState$ = true;
  x23087.om$core$IGetState$_get_state$arity$1 = function(x23087) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3551__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x23087);
  x23087.om$core$IGetState$_get_state$arity$2 = function(x23087) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x23087);
  x23087.om$core$IGetRenderState$ = true;
  x23087.om$core$IGetRenderState$_get_render_state$arity$1 = function(x23087) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x23087);
  x23087.om$core$IGetRenderState$_get_render_state$arity$2 = function(x23087) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x23087);
  x23087.om$core$ISetState$ = true;
  x23087.om$core$ISetState$_set_state_BANG_$arity$3 = function(x23087) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_23088 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = !(app_state == null);
          if (and__3539__auto__) {
            return render;
          } else {
            return and__3539__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23088;
      }
    };
  }(x23087);
  x23087.om$core$ISetState$_set_state_BANG_$arity$4 = function(x23087) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_23089 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = !(app_state == null);
          if (and__3539__auto__) {
            return render;
          } else {
            return and__3539__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23089;
      }
    };
  }(x23087);
  return x23087;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__23091) {
          var vec__23092 = p__23091;
          var k = cljs.core.nth.call(null, vec__23092, 0, null);
          var v = cljs.core.nth.call(null, vec__23092, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__23093 = null;
  var G__23093__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23093__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23093 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23093__2.call(this, self__, k);
      case 3:
        return G__23093__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23093.cljs$core$IFn$_invoke$arity$2 = G__23093__2;
  G__23093.cljs$core$IFn$_invoke$arity$3 = G__23093__3;
  return G__23093;
}();
om.core.MapCursor.prototype.apply = function(self__, args23090) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args23090)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__23095 = null;
  var G__23095__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23095__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23095 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23095__2.call(this, self__, k);
      case 3:
        return G__23095__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23095.cljs$core$IFn$_invoke$arity$2 = G__23095__2;
  G__23095.cljs$core$IFn$_invoke$arity$3 = G__23095__3;
  return G__23095;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args23094) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args23094)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x23097 = cljs.core.clone.call(null, val);
  x23097.cljs$core$IEquiv$ = true;
  x23097.cljs$core$IEquiv$_equiv$arity$2 = function(x23097) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x23097);
  x23097.om$core$ITransact$ = true;
  x23097.om$core$ITransact$_transact_BANG_$arity$4 = function(x23097) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x23097);
  x23097.om$core$ICursor$ = true;
  x23097.om$core$ICursor$_path$arity$1 = function(x23097) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x23097);
  x23097.om$core$ICursor$_state$arity$1 = function(x23097) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x23097);
  x23097.cljs$core$IDeref$ = true;
  x23097.cljs$core$IDeref$_deref$arity$1 = function(x23097) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x23097);
  return x23097;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__23100 = val;
        if (G__23100) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__23100.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__23100.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__23100);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__23100);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__23101 = val;
              if (G__23101) {
                var bit__4201__auto__ = G__23101.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4201__auto__ || G__23101.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__23101.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__23101);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__23101);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__23106 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__23107 = null;
  var count__23108 = 0;
  var i__23109 = 0;
  while (true) {
    if (i__23109 < count__23108) {
      var f = cljs.core._nth.call(null, chunk__23107, i__23109);
      f.call(null);
      var G__23110 = seq__23106;
      var G__23111 = chunk__23107;
      var G__23112 = count__23108;
      var G__23113 = i__23109 + 1;
      seq__23106 = G__23110;
      chunk__23107 = G__23111;
      count__23108 = G__23112;
      i__23109 = G__23113;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__23106);
      if (temp__4126__auto__) {
        var seq__23106__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23106__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__23106__$1);
          var G__23114 = cljs.core.chunk_rest.call(null, seq__23106__$1);
          var G__23115 = c__4307__auto__;
          var G__23116 = cljs.core.count.call(null, c__4307__auto__);
          var G__23117 = 0;
          seq__23106 = G__23114;
          chunk__23107 = G__23115;
          count__23108 = G__23116;
          i__23109 = G__23117;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__23106__$1);
          f.call(null);
          var G__23118 = cljs.core.next.call(null, seq__23106__$1);
          var G__23119 = null;
          var G__23120 = 0;
          var G__23121 = 0;
          seq__23106 = G__23118;
          chunk__23107 = G__23119;
          count__23108 = G__23120;
          i__23109 = G__23121;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3551__auto__ = function() {
      var G__23126 = x;
      if (G__23126) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__23126.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__23126.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23126);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23126);
      }
    }();
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var G__23127 = x;
      if (G__23127) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto____$1 = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return G__23127.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__23127.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23127);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23127);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3551__auto__ = descriptor;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3551__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23132 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23132;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__23133 = m;
      var map__23133__$1 = cljs.core.seq_QMARK_.call(null, map__23133) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23133) : map__23133;
      var opts = cljs.core.get.call(null, map__23133__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__23133__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__23133__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__23133__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3551__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__23133, map__23133__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23134 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23134;
          }
        };
      }(map__23133, map__23133__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__23133, map__23133__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23135 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23135;
          }
        };
      }(map__23133, map__23133__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_23137 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23137;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__23146 = state;
    if (G__23146) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__23146.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__23146.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__23146);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__23146);
    }
  }()) {
  } else {
    var listeners_23154 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_23155 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x23147_23156 = state;
    x23147_23156.om$core$IRenderQueue$ = true;
    x23147_23156.om$core$IRenderQueue$_get_queue$arity$1 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_23155);
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
    x23147_23156.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_23155), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_23155, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
    x23147_23156.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_23155, cljs.core.empty);
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
    x23147_23156.om$core$INotify$ = true;
    x23147_23156.om$core$INotify$_listen_BANG_$arity$3 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_23154, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
    x23147_23156.om$core$INotify$_unlisten_BANG_$arity$2 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_23154, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
    x23147_23156.om$core$INotify$_notify_BANG_$arity$3 = function(x23147_23156, listeners_23154, render_queue_23155) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__23148_23157 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_23154));
        var chunk__23149_23158 = null;
        var count__23150_23159 = 0;
        var i__23151_23160 = 0;
        while (true) {
          if (i__23151_23160 < count__23150_23159) {
            var vec__23152_23161 = cljs.core._nth.call(null, chunk__23149_23158, i__23151_23160);
            var __23162 = cljs.core.nth.call(null, vec__23152_23161, 0, null);
            var f_23163 = cljs.core.nth.call(null, vec__23152_23161, 1, null);
            f_23163.call(null, tx_data, root_cursor);
            var G__23164 = seq__23148_23157;
            var G__23165 = chunk__23149_23158;
            var G__23166 = count__23150_23159;
            var G__23167 = i__23151_23160 + 1;
            seq__23148_23157 = G__23164;
            chunk__23149_23158 = G__23165;
            count__23150_23159 = G__23166;
            i__23151_23160 = G__23167;
            continue;
          } else {
            var temp__4126__auto___23168 = cljs.core.seq.call(null, seq__23148_23157);
            if (temp__4126__auto___23168) {
              var seq__23148_23169__$1 = temp__4126__auto___23168;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__23148_23169__$1)) {
                var c__4307__auto___23170 = cljs.core.chunk_first.call(null, seq__23148_23169__$1);
                var G__23171 = cljs.core.chunk_rest.call(null, seq__23148_23169__$1);
                var G__23172 = c__4307__auto___23170;
                var G__23173 = cljs.core.count.call(null, c__4307__auto___23170);
                var G__23174 = 0;
                seq__23148_23157 = G__23171;
                chunk__23149_23158 = G__23172;
                count__23150_23159 = G__23173;
                i__23151_23160 = G__23174;
                continue;
              } else {
                var vec__23153_23175 = cljs.core.first.call(null, seq__23148_23169__$1);
                var __23176 = cljs.core.nth.call(null, vec__23153_23175, 0, null);
                var f_23177 = cljs.core.nth.call(null, vec__23153_23175, 1, null);
                f_23177.call(null, tx_data, root_cursor);
                var G__23178 = cljs.core.next.call(null, seq__23148_23169__$1);
                var G__23179 = null;
                var G__23180 = 0;
                var G__23181 = 0;
                seq__23148_23157 = G__23178;
                chunk__23149_23158 = G__23179;
                count__23150_23159 = G__23180;
                i__23151_23160 = G__23181;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x23147_23156, listeners_23154, render_queue_23155);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__23182) {
  var map__23197 = p__23182;
  var map__23197__$1 = cljs.core.seq_QMARK_.call(null, map__23197) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23197) : map__23197;
  var options = map__23197__$1;
  var instrument = cljs.core.get.call(null, map__23197__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__23197__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__23197__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__23197__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__23211 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__23211, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__23211, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__23198 = value;
    if (G__23198) {
      var bit__4201__auto__ = G__23198.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4201__auto__ || G__23198.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__23198.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__23198);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__23198);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__23197, map__23197__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_23205 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_23206 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_23206;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_23205;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__23207_23212 = cljs.core.seq.call(null, queue);
        var chunk__23208_23213 = null;
        var count__23209_23214 = 0;
        var i__23210_23215 = 0;
        while (true) {
          if (i__23210_23215 < count__23209_23214) {
            var c_23216 = cljs.core._nth.call(null, chunk__23208_23213, i__23210_23215);
            if (cljs.core.truth_(c_23216.isMounted())) {
              c_23216.forceUpdate();
            } else {
            }
            var G__23217 = seq__23207_23212;
            var G__23218 = chunk__23208_23213;
            var G__23219 = count__23209_23214;
            var G__23220 = i__23210_23215 + 1;
            seq__23207_23212 = G__23217;
            chunk__23208_23213 = G__23218;
            count__23209_23214 = G__23219;
            i__23210_23215 = G__23220;
            continue;
          } else {
            var temp__4126__auto___23221 = cljs.core.seq.call(null, seq__23207_23212);
            if (temp__4126__auto___23221) {
              var seq__23207_23222__$1 = temp__4126__auto___23221;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__23207_23222__$1)) {
                var c__4307__auto___23223 = cljs.core.chunk_first.call(null, seq__23207_23222__$1);
                var G__23224 = cljs.core.chunk_rest.call(null, seq__23207_23222__$1);
                var G__23225 = c__4307__auto___23223;
                var G__23226 = cljs.core.count.call(null, c__4307__auto___23223);
                var G__23227 = 0;
                seq__23207_23212 = G__23224;
                chunk__23208_23213 = G__23225;
                count__23209_23214 = G__23226;
                i__23210_23215 = G__23227;
                continue;
              } else {
                var c_23228 = cljs.core.first.call(null, seq__23207_23222__$1);
                if (cljs.core.truth_(c_23228.isMounted())) {
                  c_23228.forceUpdate();
                } else {
                }
                var G__23229 = cljs.core.next.call(null, seq__23207_23222__$1);
                var G__23230 = null;
                var G__23231 = 0;
                var G__23232 = 0;
                seq__23207_23212 = G__23229;
                chunk__23208_23213 = G__23230;
                count__23209_23214 = G__23231;
                i__23210_23215 = G__23232;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__23197, map__23197__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__23197, map__23197__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__23197, map__23197__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__23197, map__23197__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__23197, map__23197__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__23378_SHARP_) {
      return max === p1__23378_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__23379__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__23379 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23379__delegate.call(this, s1, s2, sets);
    };
    G__23379.cljs$lang$maxFixedArity = 2;
    G__23379.cljs$lang$applyTo = function(arglist__23380) {
      var s1 = cljs.core.first(arglist__23380);
      arglist__23380 = cljs.core.next(arglist__23380);
      var s2 = cljs.core.first(arglist__23380);
      var sets = cljs.core.rest(arglist__23380);
      return G__23379__delegate(s1, s2, sets);
    };
    G__23379.cljs$core$IFn$_invoke$arity$variadic = G__23379__delegate;
    return G__23379;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__23382 = s2;
        var G__23383 = s1;
        s1 = G__23382;
        s2 = G__23383;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__23384__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__23381_SHARP_) {
        return-cljs.core.count.call(null, p1__23381_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__23384 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23384__delegate.call(this, s1, s2, sets);
    };
    G__23384.cljs$lang$maxFixedArity = 2;
    G__23384.cljs$lang$applyTo = function(arglist__23385) {
      var s1 = cljs.core.first(arglist__23385);
      arglist__23385 = cljs.core.next(arglist__23385);
      var s2 = cljs.core.first(arglist__23385);
      var sets = cljs.core.rest(arglist__23385);
      return G__23384__delegate(s1, s2, sets);
    };
    G__23384.cljs$core$IFn$_invoke$arity$variadic = G__23384__delegate;
    return G__23384;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__23386__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__23386 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__23386__delegate.call(this, s1, s2, sets);
    };
    G__23386.cljs$lang$maxFixedArity = 2;
    G__23386.cljs$lang$applyTo = function(arglist__23387) {
      var s1 = cljs.core.first(arglist__23387);
      arglist__23387 = cljs.core.next(arglist__23387);
      var s2 = cljs.core.first(arglist__23387);
      var sets = cljs.core.rest(arglist__23387);
      return G__23386__delegate(s1, s2, sets);
    };
    G__23386.cljs$core$IFn$_invoke$arity$variadic = G__23386__delegate;
    return G__23386;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__23388_SHARP_) {
    return cljs.core.select_keys.call(null, p1__23388_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__23391) {
    var vec__23392 = p__23391;
    var old = cljs.core.nth.call(null, vec__23392, 0, null);
    var new$ = cljs.core.nth.call(null, vec__23392, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__23393_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__23393_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__23396) {
    var vec__23397 = p__23396;
    var k = cljs.core.nth.call(null, vec__23397, 0, null);
    var v = cljs.core.nth.call(null, vec__23397, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__23404 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__23404, 0, null);
      var s = cljs.core.nth.call(null, vec__23404, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__23404, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__23404, r, s, idx) {
              return function(p1__23398_SHARP_, p2__23399_SHARP_) {
                return cljs.core.conj.call(null, p1__23398_SHARP_, cljs.core.merge.call(null, p2__23399_SHARP_, x));
              };
            }(found, ks, vec__23404, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__23404, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__23405 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__23405, 0, null);
    var s = cljs.core.nth.call(null, vec__23405, 1, null);
    var k = cljs.core.nth.call(null, vec__23405, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__23405, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__23405, r, s, k, idx) {
            return function(p1__23400_SHARP_, p2__23401_SHARP_) {
              return cljs.core.conj.call(null, p1__23400_SHARP_, cljs.core.merge.call(null, p2__23401_SHARP_, x));
            };
          }(found, vec__23405, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__23405, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__23406_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__23406_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__23407_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__23407_SHARP_);
  }, set2);
};
goog.provide("cljs_time.internal.core");
goog.require("cljs.core");
cljs_time.internal.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.internal.core.days_in_month = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
cljs_time.internal.core.year_corrected_dim = function year_corrected_dim(year, month) {
  var G__23372 = cljs_time.internal.core.days_in_month.call(null, cljs.core._EQ_.call(null, month, 1) ? 11 : month - 1);
  var G__23372__$1 = cljs_time.internal.core.leap_year_QMARK_.call(null, year) && cljs.core._EQ_.call(null, month, 2) ? G__23372 + 1 : G__23372;
  return G__23372__$1;
};
cljs_time.internal.core.valid_date_QMARK_ = function valid_date_QMARK_(p__23373) {
  var map__23375 = p__23373;
  var map__23375__$1 = cljs.core.seq_QMARK_.call(null, map__23375) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23375) : map__23375;
  var d = map__23375__$1;
  var millis = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var months = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__23375__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months__$1 = months + 1;
  var _GT__LT_ = function(months__$1, map__23375, map__23375__$1, d, millis, seconds, minutes, hours, days, months, years) {
    return function _GT__LT_(a, b, x) {
      return x >= a && x <= b;
    };
  }(months__$1, map__23375, map__23375__$1, d, millis, seconds, minutes, hours, days, months, years);
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = years;
    if (cljs.core.truth_(and__3539__auto__)) {
      return _GT__LT_.call(null, 1, 12, months__$1) && _GT__LT_.call(null, 1, cljs_time.internal.core.year_corrected_dim.call(null, years, months__$1), days) && _GT__LT_.call(null, 0, 23, hours) && _GT__LT_.call(null, 0, 59, minutes) && _GT__LT_.call(null, 0, 60, seconds) && _GT__LT_.call(null, 0, 999, millis);
    } else {
      return and__3539__auto__;
    }
  }())) {
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "Date is not valid", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "invalid-date", "invalid-date", 2030506573), new cljs.core.Keyword(null, "date", "date", -1463434462), d], null));
  }
};
cljs_time.internal.core.index_of = function index_of(coll, x) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__23377_SHARP_, p2__23376_SHARP_) {
    if (cljs.core._EQ_.call(null, p2__23376_SHARP_, x)) {
      return p1__23377_SHARP_;
    } else {
      return null;
    }
  }, coll));
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__23408 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__23408;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__23412 = cljs.core._EQ_;
    var expr__23413 = limit;
    if (cljs.core.truth_(pred__23412.call(null, 1, expr__23413))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__23412.call(null, 2, expr__23413))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__23415 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__23416 = limit__$1 - 1;
            var G__23417 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__23415;
            limit__$1 = G__23416;
            parts = G__23417;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__23418 = index - 1;
        index = G__23418;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___23419 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___23419)) {
        var replacement_23420 = temp__4124__auto___23419;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_23420));
      } else {
        buffer.append(ch);
      }
      var G__23421 = index + 1;
      index = G__23421;
      continue;
    }
    break;
  }
};
goog.provide("cljs_time.format");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("cljs_time.internal.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.date");
goog.require("cljs_time.core");
goog.require("clojure.set");
goog.require("cljs_time.core");
goog.require("cljs_time.internal.core");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.date");
cljs_time.format.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
      } else {
        return x;
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__23233) {
    var fmt = cljs.core.first(arglist__23233);
    var args = cljs.core.rest(arglist__23233);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
cljs_time.format.months = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], null);
cljs_time.format.days = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], null);
cljs_time.format.abbreviate = function abbreviate(n, s) {
  return cljs.core.subs.call(null, s, 0, n);
};
cljs_time.format.date_formatters = function() {
  var d = function(p1__23234_SHARP_) {
    return p1__23234_SHARP_.getDate();
  };
  var M = function(d) {
    return function(p1__23235_SHARP_) {
      return p1__23235_SHARP_.getMonth() + 1;
    };
  }(d);
  var y = function(d, M) {
    return function(p1__23236_SHARP_) {
      return p1__23236_SHARP_.getYear();
    };
  }(d, M);
  var h = function(d, M, y) {
    return function(p1__23237_SHARP_) {
      var hr = cljs.core.mod.call(null, p1__23237_SHARP_.getHours(), 12);
      if (hr === 0) {
        return 12;
      } else {
        return hr;
      }
    };
  }(d, M, y);
  var a = function(d, M, y, h) {
    return function(p1__23238_SHARP_) {
      if (p1__23238_SHARP_.getHours() < 12) {
        return "am";
      } else {
        return "pm";
      }
    };
  }(d, M, y, h);
  var A = function(d, M, y, h, a) {
    return function(p1__23239_SHARP_) {
      if (p1__23239_SHARP_.getHours() < 12) {
        return "AM";
      } else {
        return "PM";
      }
    };
  }(d, M, y, h, a);
  var H = function(d, M, y, h, a, A) {
    return function(p1__23240_SHARP_) {
      return p1__23240_SHARP_.getHours();
    };
  }(d, M, y, h, a, A);
  var m = function(d, M, y, h, a, A, H) {
    return function(p1__23241_SHARP_) {
      return p1__23241_SHARP_.getMinutes();
    };
  }(d, M, y, h, a, A, H);
  var s = function(d, M, y, h, a, A, H, m) {
    return function(p1__23242_SHARP_) {
      return p1__23242_SHARP_.getSeconds();
    };
  }(d, M, y, h, a, A, H, m);
  var S = function(d, M, y, h, a, A, H, m, s) {
    return function(p1__23243_SHARP_) {
      return p1__23243_SHARP_.getMilliseconds();
    };
  }(d, M, y, h, a, A, H, m, s);
  var Z = function(d, M, y, h, a, A, H, m, s, S) {
    return function(p1__23244_SHARP_) {
      return p1__23244_SHARP_.getTimezoneOffsetString();
    };
  }(d, M, y, h, a, A, H, m, s, S);
  var doy = function(d, M, y, h, a, A, H, m, s, S, Z) {
    return function(p1__23245_SHARP_) {
      return p1__23245_SHARP_.getDayOfYear();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z);
  var dow = function(d, M, y, h, a, A, H, m, s, S, Z, doy) {
    return function(p1__23246_SHARP_) {
      return p1__23246_SHARP_.getDay();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "ww", "MMM", "e", "ss", "DDD", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "dd", "a", "hh", "dth", "yyyy", "A", "EEEE", "h", "xxxx", "m", "yy", "MMMM"], [d, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23257_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", H.call(null, p1__23257_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, s, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23261_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", Math.ceil.call(null, doy.call(null, p1__23261_SHARP_) / 7));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23253_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.months.call(null, M.call(null, p1__23253_SHARP_) - 1));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), dow, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23259_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", s.call(null, p1__23259_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23260_SHARP_) {
      return cljs_time.format.format.call(null, "%03d", S.call(null, p1__23260_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23249_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__23249_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), M, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23258_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", m.call(null, p1__23258_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), S, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23252_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", M.call(null, p1__23252_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23250_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.days.call(null, dow.call(null, p1__23250_SHARP_)));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, H, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23247_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", d.call(null, p1__23247_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), a, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23256_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", h.call(null, p1__23256_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23248_SHARP_) {
      var d__$1 = d.call(null, p1__23248_SHARP_);
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(d__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
        var G__23262 = d__$1;
        switch(G__23262) {
          case 1:
            return "st";
            break;
          case 2:
            return "nd";
            break;
          case 3:
            return "rd";
            break;
          default:
            return "th";
        }
      }());
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, A, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23251_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__23251_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), h, y, m, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23255_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__23255_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__23254_SHARP_) {
      return cljs_time.format.months.call(null, M.call(null, p1__23254_SHARP_) - 1);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow)]);
}();
cljs_time.format.timezone_adjustment = function timezone_adjustment(d, timezone_string) {
  var vec__23267 = clojure.string.split.call(null, timezone_string, /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/);
  var _ = cljs.core.nth.call(null, vec__23267, 0, null);
  var sign = cljs.core.nth.call(null, vec__23267, 1, null);
  var hh = cljs.core.nth.call(null, vec__23267, 2, null);
  var mm = cljs.core.nth.call(null, vec__23267, 3, null);
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = sign;
    if (cljs.core.truth_(and__3539__auto__)) {
      var and__3539__auto____$1 = hh;
      if (cljs.core.truth_(and__3539__auto____$1)) {
        return mm;
      } else {
        return and__3539__auto____$1;
      }
    } else {
      return and__3539__auto__;
    }
  }())) {
    var sign_23269__$1 = cljs.core._EQ_.call(null, sign, "-") ? cljs_time.core.plus : cljs.core._EQ_.call(null, sign, "+") ? cljs_time.core.minus : null;
    var vec__23268_23270 = cljs.core.map.call(null, function(sign_23269__$1, vec__23267, _, sign, hh, mm) {
      return function(p1__23264_SHARP_) {
        return parseInt(p1__23264_SHARP_, 10);
      };
    }(sign_23269__$1, vec__23267, _, sign, hh, mm), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hh, mm], null));
    var hh_23271__$1 = cljs.core.nth.call(null, vec__23268_23270, 0, null);
    var mm_23272__$1 = cljs.core.nth.call(null, vec__23268_23270, 1, null);
    var adjusted_23273 = sign_23269__$1.call(null, sign_23269__$1.call(null, d, cljs_time.core.hours.call(null, hh_23271__$1)), cljs_time.core.minutes.call(null, mm_23272__$1));
    d.setTime(adjusted_23273.getTime());
  } else {
  }
  return d;
};
cljs_time.format.date_parsers = function() {
  var parse_int = function(p1__23274_SHARP_) {
    return parseInt(p1__23274_SHARP_, 10);
  };
  var assoc_fn = function(parse_int) {
    return function(kw) {
      return function(parse_int) {
        return function(p1__23275_SHARP_, p2__23276_SHARP_) {
          return cljs.core.assoc.call(null, p1__23275_SHARP_, kw, parse_int.call(null, p2__23276_SHARP_));
        };
      }(parse_int);
    };
  }(parse_int);
  var y = assoc_fn.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var d = assoc_fn.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var M = function(parse_int, assoc_fn, y, d) {
    return function(p1__23277_SHARP_, p2__23278_SHARP_) {
      return cljs.core.assoc.call(null, p1__23277_SHARP_, new cljs.core.Keyword(null, "months", "months", -45571637), parse_int.call(null, p2__23278_SHARP_) - 1);
    };
  }(parse_int, assoc_fn, y, d);
  var h = function(parse_int, assoc_fn, y, d, M) {
    return function(p1__23279_SHARP_, p2__23280_SHARP_) {
      return cljs.core.assoc.call(null, p1__23279_SHARP_, new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.mod.call(null, parse_int.call(null, p2__23280_SHARP_), 12));
    };
  }(parse_int, assoc_fn, y, d, M);
  var a = function(parse_int, assoc_fn, y, d, M, h) {
    return function(p__23287, x) {
      var map__23288 = p__23287;
      var map__23288__$1 = cljs.core.seq_QMARK_.call(null, map__23288) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23288) : map__23288;
      var date = map__23288__$1;
      var hours = cljs.core.get.call(null, map__23288__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["p", null, "pm", null], null), null)).call(null, clojure.string.lower_case.call(null, x)))) {
        return cljs.core.assoc.call(null, date, new cljs.core.Keyword(null, "hours", "hours", 58380855), function() {
          var hours__$1 = 12 + hours;
          if (cljs.core._EQ_.call(null, hours__$1, 24)) {
            return 0;
          } else {
            return hours__$1;
          }
        }());
      } else {
        return date;
      }
    };
  }(parse_int, assoc_fn, y, d, M, h);
  var H = assoc_fn.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var m = assoc_fn.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var s = assoc_fn.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var S = assoc_fn.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var MMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
    return function(p1__23282_SHARP_, p2__23281_SHARP_) {
      var full = cljs.core.first.call(null, cljs.core.filter.call(null, function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
        return function(m__$1) {
          return cljs.core.re_seq.call(null, cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__23281_SHARP_)), m__$1);
        };
      }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S), cljs_time.format.months));
      return M.call(null, p1__23282_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, full) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S);
  var MMMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM) {
    return function(p1__23283_SHARP_, p2__23284_SHARP_) {
      return M.call(null, p1__23283_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, p2__23284_SHARP_) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM);
  var skip = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM) {
    return function() {
      var G__23289__delegate = function(x, args) {
        return x;
      };
      var G__23289 = function(x, var_args) {
        var args = null;
        if (arguments.length > 1) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__23289__delegate.call(this, x, args);
      };
      G__23289.cljs$lang$maxFixedArity = 1;
      G__23289.cljs$lang$applyTo = function(arglist__23290) {
        var x = cljs.core.first(arglist__23290);
        var args = cljs.core.rest(arglist__23290);
        return G__23289__delegate(x, args);
      };
      G__23289.cljs$core$IFn$_invoke$arity$variadic = G__23289__delegate;
      return G__23289;
    }();
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM);
  var tz = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip) {
    return function(p1__23285_SHARP_, p2__23286_SHARP_) {
      return cljs.core.assoc.call(null, p1__23285_SHARP_, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), p2__23286_SHARP_);
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "MMM", "ss", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "E", "dd", "a", "hh", "dth", "y", "yyyy", "A", "EEEE", "h", "m", "yy", "MMMM"], [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["((?:(?:\\+|-)\\d{2}:\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.months))) + ")", MMM], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", M], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:\\d{2})|(?:\\b\\d{1,2}\\b))", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, 
  cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:?\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, 
  "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", h], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})(?:st|nd|rd|th)", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.months)) + ")", MMMM], null)]);
}();
cljs_time.format.date_setters = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), function(p1__23291_SHARP_, p2__23292_SHARP_) {
  return p1__23291_SHARP_.setYear(p2__23292_SHARP_);
}, new cljs.core.Keyword(null, "months", "months", -45571637), function(p1__23293_SHARP_, p2__23294_SHARP_) {
  return p1__23293_SHARP_.setMonth(p2__23294_SHARP_);
}, new cljs.core.Keyword(null, "days", "days", -1394072564), function(p1__23295_SHARP_, p2__23296_SHARP_) {
  return p1__23295_SHARP_.setDate(p2__23296_SHARP_);
}, new cljs.core.Keyword(null, "hours", "hours", 58380855), function(p1__23297_SHARP_, p2__23298_SHARP_) {
  return p1__23297_SHARP_.setHours(p2__23298_SHARP_);
}, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), function(p1__23299_SHARP_, p2__23300_SHARP_) {
  return p1__23299_SHARP_.setMinutes(p2__23300_SHARP_);
}, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), function(p1__23301_SHARP_, p2__23302_SHARP_) {
  return p1__23301_SHARP_.setSeconds(p2__23302_SHARP_);
}, new cljs.core.Keyword(null, "millis", "millis", -1338288387), function(p1__23303_SHARP_, p2__23304_SHARP_) {
  return p1__23303_SHARP_.setMilliseconds(p2__23304_SHARP_);
}, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), cljs_time.format.timezone_adjustment], null);
cljs_time.format.parser_sort_order_pred = function parser_sort_order_pred(parser) {
  return cljs_time.internal.core.index_of.call(null, new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, ["yyyy", "yy", "y", "d", "dd", "dth", "M", "MM", "MMM", "MMMM", "dow", "h", "H", "m", "s", "S", "hh", "HH", "mm", "ss", "a", "SSS", "Z", "ZZ"], null), parser);
};
cljs_time.format.date_format_pattern = cljs.core.re_pattern.call(null, "(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, ")|(", cljs.core.reverse.call(null, cljs.core.sort_by.call(null, cljs.core.count, cljs.core.keys.call(null, cljs_time.format.date_formatters))))) + ")");
cljs_time.format.date_parse_pattern = function date_parse_pattern(formatter) {
  return cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, formatter, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__23305_SHARP_) {
    return cljs.core.first.call(null, cljs_time.format.date_parsers.call(null, p1__23305_SHARP_));
  }));
};
cljs_time.format.formatter = function formatter(fmts) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), function(p1__23306_SHARP_) {
    return cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs_time.format.parser_sort_order_pred, cljs.core.second), cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.nfirst.call(null, cljs.core.re_seq.call(null, cljs_time.format.date_parse_pattern.call(null, fmts), p1__23306_SHARP_)), cljs.core.map.call(null, cljs.core.first, cljs.core.re_seq.call(null, cljs_time.format.date_format_pattern, fmts)))));
  }, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), function(date) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, fmts, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__23307_SHARP_) {
      return cljs_time.format.date_formatters.call(null, p1__23307_SHARP_).call(null, date);
    }], null);
  }], null);
};
cljs_time.format.not_implemented = function not_implemented(sym) {
  return function() {
    throw cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "not-implemented", "not-implemented", 1918806714), new cljs.core.Keyword(null, "message", "message", -406056002), cljs_time.format.format.call(null, "%s not implemented yet", cljs.core.name.call(null, sym))], null));
  };
};
cljs_time.format.formatters = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), new cljs.core.Keyword(null, "hour-minute", "hour-minute", -1164421312), new cljs.core.Keyword(null, "t-time", "t-time", -42016318), new cljs.core.Keyword(null, "basic-ordinal-date", "basic-ordinal-date", 243220162), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "hour", "hour", -555989214), new cljs.core.Keyword(null, 
"time-no-ms", "time-no-ms", 870271683), new cljs.core.Keyword(null, "weekyear-week-day", "weekyear-week-day", -740233533), new cljs.core.Keyword(null, "week-date-time", "week-date-time", 540228836), new cljs.core.Keyword(null, "date-hour-minute-second-fraction", "date-hour-minute-second-fraction", 1937143076), new cljs.core.Keyword(null, "basic-date-time", "basic-date-time", 1525413604), new cljs.core.Keyword(null, "date-time", "date-time", 177938180), new cljs.core.Keyword(null, "basic-time-no-ms", 
"basic-time-no-ms", -1720654076), new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), new cljs.core.Keyword(null, "basic-week-date", "basic-week-date", 1775847845), new cljs.core.Keyword(null, "basic-t-time-no-ms", "basic-t-time-no-ms", -424650106), new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), new cljs.core.Keyword(null, "date-time-no-ms", "date-time-no-ms", 1655953671), new cljs.core.Keyword(null, "year-month-day", "year-month-day", -415594169), new cljs.core.Keyword(null, 
"date-opt-time", "date-opt-time", -1507102105), new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697), new cljs.core.Keyword(null, "date-hour-minute-second-ms", "date-hour-minute-second-ms", -425334775), new cljs.core.Keyword(null, "basic-ordinal-date-time", "basic-ordinal-date-time", 1054564521), new cljs.core.Keyword(null, "ordinal-date", "ordinal-date", -77899447), new cljs.core.Keyword(null, "hour-minute-second-fraction", "hour-minute-second-fraction", -1253038551), new cljs.core.Keyword(null, 
"date-hour-minute", "date-hour-minute", 1629918346), new cljs.core.Keyword(null, "time", "time", 1385887882), new cljs.core.Keyword(null, "basic-week-date-time", "basic-week-date-time", -502077622), new cljs.core.Keyword(null, "weekyear", "weekyear", -74064500), new cljs.core.Keyword(null, "basic-time", "basic-time", -923134899), new cljs.core.Keyword(null, "hour-minute-second", "hour-minute-second", -1906654770), new cljs.core.Keyword(null, "ordinal-date-time", "ordinal-date-time", -1386753458), 
new cljs.core.Keyword(null, "ordinal-date-time-no-ms", "ordinal-date-time-no-ms", -1539005490), new cljs.core.Keyword(null, "hour-minute-second-ms", "hour-minute-second-ms", 1209749775), new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), new cljs.core.Keyword(null, "year", "year", 335913393), new cljs.core.Keyword(null, "t-time-no-ms", "t-time-no-ms", 990689905), new cljs.core.Keyword(null, "basic-week-date-time-no-ms", 
"basic-week-date-time-no-ms", -2043113679), new cljs.core.Keyword(null, "basic-date", "basic-date", 1566551506), new cljs.core.Keyword(null, "weekyear-week", "weekyear-week", 795291571), new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), new cljs.core.Keyword(null, "basic-ordinal-date-time-no-ms", "basic-ordinal-date-time-no-ms", -395135436), new cljs.core.Keyword(null, "year-month", "year-month", 735283381), new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 
1178432599), new cljs.core.Keyword(null, "week-date", "week-date", -1176745129), new cljs.core.Keyword(null, "date-hour", "date-hour", -344234471), new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364), new cljs.core.Keyword(null, "week-date-time-no-ms", "week-date-time-no-ms", -1226853060), new cljs.core.Keyword(null, "basic-date-time-no-ms", "basic-date-time-no-ms", -899402179), 
new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), new cljs.core.Keyword(null, "basic-t-time", "basic-t-time", 191791391)], [cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateElementParser", "dateElementParser", 984800945, null)), cljs_time.format.formatter.call(null, "HH:mm"), cljs_time.format.formatter.call(null, "'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyyDDD"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.formatter.call(null, 
"HH"), cljs_time.format.formatter.call(null, "HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, 
"dateParser", "dateParser", -1248418930, null)), cljs_time.format.formatter.call(null, "xxxx'W'wwe"), cljs_time.format.formatter.call(null, "'T'HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localTimeParser", "localTimeParser", -1738135328, null)), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateOptionalTimeParser", 
"dateOptionalTimeParser", 1783230854, null)), cljs_time.format.formatter.call(null, "EEE, dd MMM yyyy HH:mm:ss Z"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyDDD'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-DDD"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, 
"xxxx'W'wwe'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "xxxx"), cljs_time.format.formatter.call(null, "HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "HH:mm:ss"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, new cljs.core.Symbol(null, "timeParser", "timeParser", 1585048034, null)), cljs_time.format.not_implemented.call(null, 
new cljs.core.Symbol(null, "dateTimeParser", "dateTimeParser", -1493718282, null)), cljs_time.format.formatter.call(null, "yyyy"), cljs_time.format.formatter.call(null, "'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx'W'wwe'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyyMMdd"), cljs_time.format.formatter.call(null, "xxxx-'W'ww"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateParser", "localDateParser", 477820077, null)), cljs_time.format.formatter.call(null, 
"yyyyDDD'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateOptionalTimeParser", "localDateOptionalTimeParser", 435955537, null)), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "timeElementParser", "timeElementParser", 302132553, null)), cljs_time.format.formatter.call(null, 
"yyyy-MM-dd'T'HH:mm:ss"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss"), cljs_time.format.formatter.call(null, "'T'HHmmss.SSSZ")]);
cljs_time.format.parsers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), null, new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), null, new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), null, new cljs.core.Keyword(null, "date-opt-time", "date-opt-time", -1507102105), null, new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), 
null, new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), null, new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), null, new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 1178432599), null, new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), null], null), null);
cljs_time.format.printers = clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs_time.format.formatters)), cljs_time.format.parsers);
cljs_time.format.part_splitter_regex = /(?:(?!(?:\+|-)\d{2}):(?!\d{2}$))|[^\w:]+|.[TW]|'[^']+'/;
cljs_time.format.parse = function() {
  var parse = null;
  var parse__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4276__auto__ = function iter__23329(s__23330) {
        return new cljs.core.LazySeq(null, function() {
          var s__23330__$1 = s__23330;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__23330__$1);
            if (temp__4126__auto__) {
              var s__23330__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__23330__$2)) {
                var c__4274__auto__ = cljs.core.chunk_first.call(null, s__23330__$2);
                var size__4275__auto__ = cljs.core.count.call(null, c__4274__auto__);
                var b__23332 = cljs.core.chunk_buffer.call(null, size__4275__auto__);
                if (function() {
                  var i__23331 = 0;
                  while (true) {
                    if (i__23331 < size__4275__auto__) {
                      var f = cljs.core._nth.call(null, c__4274__auto__, i__23331);
                      var d = function() {
                        try {
                          return parse.call(null, f, s);
                        } catch (e23335) {
                          if (e23335 instanceof Error) {
                            var _ = e23335;
                            return null;
                          } else {
                            throw e23335;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__23332, d);
                        var G__23337 = i__23331 + 1;
                        i__23331 = G__23337;
                        continue;
                      } else {
                        var G__23338 = i__23331 + 1;
                        i__23331 = G__23338;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23332), iter__23329.call(null, cljs.core.chunk_rest.call(null, s__23330__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23332), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__23330__$2);
                var d = function() {
                  try {
                    return parse.call(null, f, s);
                  } catch (e23336) {
                    if (e23336 instanceof Error) {
                      var _ = e23336;
                      return null;
                    } else {
                      throw e23336;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__23329.call(null, cljs.core.rest.call(null, s__23330__$2)));
                } else {
                  var G__23339 = cljs.core.rest.call(null, s__23330__$2);
                  s__23330__$1 = G__23339;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4276__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse__2 = function(p__23310, s) {
    var map__23324 = p__23310;
    var map__23324__$1 = cljs.core.seq_QMARK_.call(null, map__23324) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23324) : map__23324;
    var parser = cljs.core.get.call(null, map__23324__$1, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.seq.call(null, s)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "s", "s", -948495851, null)))));
    }
    var min_parts = cljs.core.count.call(null, clojure.string.split.call(null, s, cljs_time.format.part_splitter_regex));
    var parse_seq = cljs.core.seq.call(null, cljs.core.map.call(null, function(min_parts, map__23324, map__23324__$1, parser) {
      return function(p__23325) {
        var vec__23326 = p__23325;
        var a = cljs.core.nth.call(null, vec__23326, 0, null);
        var b = cljs.core.nth.call(null, vec__23326, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.second.call(null, cljs_time.format.date_parsers.call(null, b))], null);
      };
    }(min_parts, map__23324, map__23324__$1, parser), parser.call(null, s)));
    if (cljs.core.count.call(null, parse_seq) >= min_parts) {
      var d = new goog.date.UtcDateTime(0, 0, 0, 0, 0, 0, 0);
      cljs.core.merge_with.call(null, function(d, parse_seq, min_parts, map__23324, map__23324__$1, parser) {
        return function(p1__23308_SHARP_, p2__23309_SHARP_) {
          return p1__23308_SHARP_.call(null, d, p2__23309_SHARP_);
        };
      }(d, parse_seq, min_parts, map__23324, map__23324__$1, parser), cljs_time.format.date_setters, cljs_time.internal.core.valid_date_QMARK_.call(null, cljs.core.reduce.call(null, function(d, parse_seq, min_parts, map__23324, map__23324__$1, parser) {
        return function(date, p__23327) {
          var vec__23328 = p__23327;
          var part = cljs.core.nth.call(null, vec__23328, 0, null);
          var do_parse = cljs.core.nth.call(null, vec__23328, 1, null);
          return do_parse.call(null, date, part);
        };
      }(d, parse_seq, min_parts, map__23324, map__23324__$1, parser), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, 
      "millis", "millis", -1338288387), 0], null), parse_seq)));
      return d;
    } else {
      throw cljs.core.ex_info.call(null, "The parser could not match the input string.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "parser-no-match", "parser-no-match", 1748518307)], null));
    }
  };
  parse = function(p__23310, s) {
    switch(arguments.length) {
      case 1:
        return parse__1.call(this, p__23310);
      case 2:
        return parse__2.call(this, p__23310, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse.cljs$core$IFn$_invoke$arity$1 = parse__1;
  parse.cljs$core$IFn$_invoke$arity$2 = parse__2;
  return parse;
}();
cljs_time.format.unparse = function unparse(p__23340, date) {
  var map__23342 = p__23340;
  var map__23342__$1 = cljs.core.seq_QMARK_.call(null, map__23342) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23342) : map__23342;
  var formatter = cljs.core.get.call(null, map__23342__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(date == null)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "date", "date", 177097065, null))))));
  }
  if (date instanceof goog.date.DateTime) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol("date", "DateTime", "date/DateTime", 1996422001, null), new cljs.core.Symbol(null, "date", "date", 177097065, null)))));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, date));
};
cljs_time.format.show_formatters = function() {
  var show_formatters = null;
  var show_formatters__0 = function() {
    return show_formatters.call(null, cljs_time.core.now.call(null));
  };
  var show_formatters__1 = function(dt) {
    var seq__23347 = cljs.core.seq.call(null, cljs.core.sort.call(null, cljs_time.format.printers));
    var chunk__23348 = null;
    var count__23349 = 0;
    var i__23350 = 0;
    while (true) {
      if (i__23350 < count__23349) {
        var p = cljs.core._nth.call(null, chunk__23348, i__23350);
        var fmt_23351 = cljs_time.format.formatters.call(null, p);
        cljs.core.print.call(null, cljs_time.format.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_23351, dt)));
        var G__23352 = seq__23347;
        var G__23353 = chunk__23348;
        var G__23354 = count__23349;
        var G__23355 = i__23350 + 1;
        seq__23347 = G__23352;
        chunk__23348 = G__23353;
        count__23349 = G__23354;
        i__23350 = G__23355;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__23347);
        if (temp__4126__auto__) {
          var seq__23347__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23347__$1)) {
            var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__23347__$1);
            var G__23356 = cljs.core.chunk_rest.call(null, seq__23347__$1);
            var G__23357 = c__4307__auto__;
            var G__23358 = cljs.core.count.call(null, c__4307__auto__);
            var G__23359 = 0;
            seq__23347 = G__23356;
            chunk__23348 = G__23357;
            count__23349 = G__23358;
            i__23350 = G__23359;
            continue;
          } else {
            var p = cljs.core.first.call(null, seq__23347__$1);
            var fmt_23360 = cljs_time.format.formatters.call(null, p);
            cljs.core.print.call(null, cljs_time.format.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_23360, dt)));
            var G__23361 = cljs.core.next.call(null, seq__23347__$1);
            var G__23362 = null;
            var G__23363 = 0;
            var G__23364 = 0;
            seq__23347 = G__23361;
            chunk__23348 = G__23362;
            count__23349 = G__23363;
            i__23350 = G__23364;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  show_formatters = function(dt) {
    switch(arguments.length) {
      case 0:
        return show_formatters__0.call(this);
      case 1:
        return show_formatters__1.call(this, dt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  show_formatters.cljs$core$IFn$_invoke$arity$0 = show_formatters__0;
  show_formatters.cljs$core$IFn$_invoke$arity$1 = show_formatters__1;
  return show_formatters;
}();
cljs_time.format.Mappable = function() {
  var obj23366 = {};
  return obj23366;
}();
cljs_time.format.instant__GT_map = function instant__GT_map(instant) {
  if (function() {
    var and__3539__auto__ = instant;
    if (and__3539__auto__) {
      return instant.cljs_time$format$Mappable$instant__GT_map$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return instant.cljs_time$format$Mappable$instant__GT_map$arity$1(instant);
  } else {
    var x__4178__auto__ = instant == null ? null : instant;
    return function() {
      var or__3551__auto__ = cljs_time.format.instant__GT_map[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.format.instant__GT_map["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mappable.instant-\x3emap", instant);
        }
      }
    }().call(null, instant);
  }
};
cljs_time.format.to_map = function to_map(years, months, days, hours, minutes, seconds, millis) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), millis], null);
};
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$ = true;
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(dt) {
  var dt__$1 = this;
  return cljs_time.format.to_map.call(null, dt__$1.getYear(), dt__$1.getMonth() + 1, dt__$1.getDate(), dt__$1.getHours(), dt__$1.getMinutes(), dt__$1.getSeconds(), dt__$1.getMilliseconds());
};
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__23367 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__23367) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__23369 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__23369) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj23423 = {};
  return obj23423;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3539__auto__ = reader;
    if (and__3539__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4178__auto__ = reader == null ? null : reader;
    return function() {
      var or__3551__auto__ = cljs.reader.read_char[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.read_char["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3539__auto__ = reader;
    if (and__3539__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4178__auto__ = reader == null ? null : reader;
    return function() {
      var or__3551__auto__ = cljs.reader.unread[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.unread["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3551__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__23424) {
    var rdr = cljs.core.first(arglist__23424);
    var msg = cljs.core.rest(arglist__23424);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3539__auto__ = !(ch === "#");
  if (and__3539__auto__) {
    var and__3539__auto____$1 = !(ch === "'");
    if (and__3539__auto____$1) {
      var and__3539__auto____$2 = !(ch === ":");
      if (and__3539__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3539__auto____$2;
      }
    } else {
      return and__3539__auto____$1;
    }
  } else {
    return and__3539__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__23425 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__23426 = cljs.reader.read_char.call(null, rdr);
      sb = G__23425;
      ch = G__23426;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__23427 = cljs.reader.read_char.call(null, rdr);
      ch = G__23427;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__23428 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__23428;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__23429 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__23429;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = ch == null;
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3551__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__23430 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__23431 = cljs.reader.read_char.call(null, reader);
      buffer = G__23430;
      ch = G__23431;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__23432 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__23433 = cljs.reader.read_char.call(null, reader);
        buffer = G__23432;
        ch = G__23433;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23434 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__23435 = cljs.reader.read_char.call(null, reader);
          buffer = G__23434;
          ch = G__23435;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__23440 = function() {
            var G__23438 = buffer;
            G__23438.append(nch);
            return G__23438;
          }();
          var G__23441 = cljs.reader.read_char.call(null, reader);
          buffer = G__23440;
          ch = G__23441;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23442 = function() {
            var G__23439 = buffer;
            G__23439.append(ch);
            return G__23439;
          }();
          var G__23443 = cljs.reader.read_char.call(null, reader);
          buffer = G__23442;
          ch = G__23443;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        return not_found;
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__23445 = o;
    if (G__23445) {
      var bit__4201__auto__ = G__23445.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4201__auto__ || G__23445.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__23445.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__23445);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__23445);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__23446 = reader;
        var G__23447 = eof_is_error;
        var G__23448 = sentinel;
        var G__23449 = is_recursive;
        reader = G__23446;
        eof_is_error = G__23447;
        sentinel = G__23448;
        is_recursive = G__23449;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__23450 = cljs.reader.read_comment.call(null, reader, ch);
          var G__23451 = eof_is_error;
          var G__23452 = sentinel;
          var G__23453 = is_recursive;
          reader = G__23450;
          eof_is_error = G__23451;
          sentinel = G__23452;
          is_recursive = G__23453;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__23454 = reader;
            var G__23455 = eof_is_error;
            var G__23456 = sentinel;
            var G__23457 = is_recursive;
            reader = G__23454;
            eof_is_error = G__23455;
            sentinel = G__23456;
            is_recursive = G__23457;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__23458 = b.append("0");
          b = G__23458;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__23460 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__23460, 0, null);
  var years = cljs.core.nth.call(null, vec__23460, 1, null);
  var months = cljs.core.nth.call(null, vec__23460, 2, null);
  var days = cljs.core.nth.call(null, vec__23460, 3, null);
  var hours = cljs.core.nth.call(null, vec__23460, 4, null);
  var minutes = cljs.core.nth.call(null, vec__23460, 5, null);
  var seconds = cljs.core.nth.call(null, vec__23460, 6, null);
  var fraction = cljs.core.nth.call(null, vec__23460, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__23460, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__23460, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__23460, 10, null);
  var v = vec__23460;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__23462 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__23462, 0, null);
    var months = cljs.core.nth.call(null, vec__23462, 1, null);
    var days = cljs.core.nth.call(null, vec__23462, 2, null);
    var hours = cljs.core.nth.call(null, vec__23462, 3, null);
    var minutes = cljs.core.nth.call(null, vec__23462, 4, null);
    var seconds = cljs.core.nth.call(null, vec__23462, 5, null);
    var ms = cljs.core.nth.call(null, vec__23462, 6, null);
    var offset = cljs.core.nth.call(null, vec__23462, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__23475_23487 = cljs.core.seq.call(null, form);
    var chunk__23476_23488 = null;
    var count__23477_23489 = 0;
    var i__23478_23490 = 0;
    while (true) {
      if (i__23478_23490 < count__23477_23489) {
        var x_23491 = cljs.core._nth.call(null, chunk__23476_23488, i__23478_23490);
        arr.push(x_23491);
        var G__23492 = seq__23475_23487;
        var G__23493 = chunk__23476_23488;
        var G__23494 = count__23477_23489;
        var G__23495 = i__23478_23490 + 1;
        seq__23475_23487 = G__23492;
        chunk__23476_23488 = G__23493;
        count__23477_23489 = G__23494;
        i__23478_23490 = G__23495;
        continue;
      } else {
        var temp__4126__auto___23496 = cljs.core.seq.call(null, seq__23475_23487);
        if (temp__4126__auto___23496) {
          var seq__23475_23497__$1 = temp__4126__auto___23496;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23475_23497__$1)) {
            var c__4307__auto___23498 = cljs.core.chunk_first.call(null, seq__23475_23497__$1);
            var G__23499 = cljs.core.chunk_rest.call(null, seq__23475_23497__$1);
            var G__23500 = c__4307__auto___23498;
            var G__23501 = cljs.core.count.call(null, c__4307__auto___23498);
            var G__23502 = 0;
            seq__23475_23487 = G__23499;
            chunk__23476_23488 = G__23500;
            count__23477_23489 = G__23501;
            i__23478_23490 = G__23502;
            continue;
          } else {
            var x_23503 = cljs.core.first.call(null, seq__23475_23497__$1);
            arr.push(x_23503);
            var G__23504 = cljs.core.next.call(null, seq__23475_23497__$1);
            var G__23505 = null;
            var G__23506 = 0;
            var G__23507 = 0;
            seq__23475_23487 = G__23504;
            chunk__23476_23488 = G__23505;
            count__23477_23489 = G__23506;
            i__23478_23490 = G__23507;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj23480 = {};
        return obj23480;
      }();
      var seq__23481_23508 = cljs.core.seq.call(null, form);
      var chunk__23482_23509 = null;
      var count__23483_23510 = 0;
      var i__23484_23511 = 0;
      while (true) {
        if (i__23484_23511 < count__23483_23510) {
          var vec__23485_23512 = cljs.core._nth.call(null, chunk__23482_23509, i__23484_23511);
          var k_23513 = cljs.core.nth.call(null, vec__23485_23512, 0, null);
          var v_23514 = cljs.core.nth.call(null, vec__23485_23512, 1, null);
          obj[cljs.core.name.call(null, k_23513)] = v_23514;
          var G__23515 = seq__23481_23508;
          var G__23516 = chunk__23482_23509;
          var G__23517 = count__23483_23510;
          var G__23518 = i__23484_23511 + 1;
          seq__23481_23508 = G__23515;
          chunk__23482_23509 = G__23516;
          count__23483_23510 = G__23517;
          i__23484_23511 = G__23518;
          continue;
        } else {
          var temp__4126__auto___23519 = cljs.core.seq.call(null, seq__23481_23508);
          if (temp__4126__auto___23519) {
            var seq__23481_23520__$1 = temp__4126__auto___23519;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__23481_23520__$1)) {
              var c__4307__auto___23521 = cljs.core.chunk_first.call(null, seq__23481_23520__$1);
              var G__23522 = cljs.core.chunk_rest.call(null, seq__23481_23520__$1);
              var G__23523 = c__4307__auto___23521;
              var G__23524 = cljs.core.count.call(null, c__4307__auto___23521);
              var G__23525 = 0;
              seq__23481_23508 = G__23522;
              chunk__23482_23509 = G__23523;
              count__23483_23510 = G__23524;
              i__23484_23511 = G__23525;
              continue;
            } else {
              var vec__23486_23526 = cljs.core.first.call(null, seq__23481_23520__$1);
              var k_23527 = cljs.core.nth.call(null, vec__23486_23526, 0, null);
              var v_23528 = cljs.core.nth.call(null, vec__23486_23526, 1, null);
              obj[cljs.core.name.call(null, k_23527)] = v_23528;
              var G__23529 = cljs.core.next.call(null, seq__23481_23520__$1);
              var G__23530 = null;
              var G__23531 = 0;
              var G__23532 = 0;
              seq__23481_23508 = G__23529;
              chunk__23482_23509 = G__23530;
              count__23483_23510 = G__23531;
              i__23484_23511 = G__23532;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("testdrive.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("cljs_time.core");
goog.require("cljs_time.format");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("cljs_time.format");
goog.require("cljs_time.core");
goog.require("clojure.string");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_.call(null);
testdrive.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "app-container-id", "app-container-id", -899827362), "testdrive-app", new cljs.core.Keyword(null, "port", "port", 1534937262), 4567, new cljs.core.Keyword(null, "connected?", "connected?", -1197551387), false, new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177), true, new cljs.core.Keyword(null, "max-data-points", "max-data-points", 1229305590), 100, 
new cljs.core.Keyword(null, "max-log-entries", "max-log-entries", -1076382213), 100, new cljs.core.Keyword(null, "debug", "debug", -1608172596), false, new cljs.core.Keyword(null, "simulation", "simulation", -1001480470), true], null));
testdrive.core.event_ch = cljs.core.async.chan.call(null, 10);
testdrive.core.connection_ch = cljs.core.async.chan.call(null);
testdrive.core.config = function config(k) {
  return cljs.core.get.call(null, cljs.core.deref.call(null, testdrive.core.app_state), k);
};
testdrive.core.ws_url = function ws_url() {
  return "ws://localhost:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(testdrive.core.config.call(null, new cljs.core.Keyword(null, "port", "port", 1534937262))) + "/events";
};
testdrive.core.debug = function debug() {
  return testdrive.core.config.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
};
testdrive.core.label_for = function label_for(label_id) {
  if (cljs.core._EQ_.call(null, label_id, 0)) {
    return "GENERAL";
  } else {
    var temp__4124__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "labels", "labels", -626734591)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, testdrive.core.app_state)), label_id);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var label = temp__4124__auto__;
      return clojure.string.upper_case.call(null, label);
    } else {
      return "LABEL " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(label_id);
    }
  }
};
testdrive.core.unit_for = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "temperature", "temperature", 899018429), "celsius (C)", new cljs.core.Keyword(null, "humidity", "humidity", -2051231184), "percent (%)", new cljs.core.Keyword(null, "pressure", "pressure", 505343747), "hectopascals (hPa)", new cljs.core.Keyword(null, "altitude", "altitude", 463588637), "meters (m)", new cljs.core.Keyword(null, "voltage", "voltage", -1909388658), "volts (V)", new cljs.core.Keyword(null, 
"current", "current", -1088038603), "milliamps (mA)", new cljs.core.Keyword(null, "light", "light", 1918998747), "lux", new cljs.core.Keyword(null, "distance", "distance", -1671893894), "meters (m)"], null);
testdrive.core.pretty_value = function pretty_value(n) {
  if (n > 999) {
    return n | 0;
  } else {
    return n.toFixed(1);
  }
};
testdrive.core.process_new_event = function process_new_event(cursor, p__9688) {
  var map__9690 = p__9688;
  var map__9690__$1 = cljs.core.seq_QMARK_.call(null, map__9690) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9690) : map__9690;
  var payload = map__9690__$1;
  var timestamp = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971));
  var value = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var kind = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "kind", "kind", -717265803));
  return om.core.transact_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sensors", "sensors", -1987490738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), kind, new cljs.core.Keyword(null, "label-id", "label-id", -1465071949), id], null), new cljs.core.Keyword(null, "values", "values", 372645556)], null), function(map__9690, map__9690__$1, payload, timestamp, 
  value, id, kind) {
    return function(p1__9687_SHARP_) {
      return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.take_last.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "max-data-points", "max-data-points", 1229305590)), p1__9687_SHARP_)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, timestamp], null));
    };
  }(map__9690, map__9690__$1, payload, timestamp, value, id, kind));
};
testdrive.core.process_new_label = function process_new_label(cursor, p__9691) {
  var map__9693 = p__9691;
  var map__9693__$1 = cljs.core.seq_QMARK_.call(null, map__9693) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9693) : map__9693;
  var payload = map__9693__$1;
  var value = cljs.core.get.call(null, map__9693__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9693__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  return om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "labels", "labels", -626734591), id], null), value);
};
testdrive.core.process_new_log = function process_new_log(cursor, p__9695) {
  var map__9697 = p__9695;
  var map__9697__$1 = cljs.core.seq_QMARK_.call(null, map__9697) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9697) : map__9697;
  var payload = map__9697__$1;
  var value = cljs.core.get.call(null, map__9697__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9697__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  return om.core.transact_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console", "console", 1228072057)], null), function(map__9697, map__9697__$1, payload, value, id) {
    return function(p1__9694_SHARP_) {
      return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.take_last.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "max-log-entries", "max-log-entries", -1076382213)), p1__9694_SHARP_)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "value", "value", 305978217), value], null));
    };
  }(map__9697, map__9697__$1, payload, value, id));
};
testdrive.core.widget_header = function widget_header(cursor, owner) {
  var title = clojure.string.upper_case.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor))));
  if (typeof testdrive.core.t9701 !== "undefined") {
  } else {
    testdrive.core.t9701 = function(title, owner, cursor, widget_header, meta9702) {
      this.title = title;
      this.owner = owner;
      this.cursor = cursor;
      this.widget_header = widget_header;
      this.meta9702 = meta9702;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9701.cljs$lang$type = true;
    testdrive.core.t9701.cljs$lang$ctorStr = "testdrive.core/t9701";
    testdrive.core.t9701.cljs$lang$ctorPrWriter = function(title) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9701");
      };
    }(title);
    testdrive.core.t9701.prototype.om$core$IRender$ = true;
    testdrive.core.t9701.prototype.om$core$IRender$render$arity$1 = function(title) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.div({"className":"header"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, self__.title));
      };
    }(title);
    testdrive.core.t9701.prototype.cljs$core$IMeta$_meta$arity$1 = function(title) {
      return function(_9703) {
        var self__ = this;
        var _9703__$1 = this;
        return self__.meta9702;
      };
    }(title);
    testdrive.core.t9701.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(title) {
      return function(_9703, meta9702__$1) {
        var self__ = this;
        var _9703__$1 = this;
        return new testdrive.core.t9701(self__.title, self__.owner, self__.cursor, self__.widget_header, meta9702__$1);
      };
    }(title);
    testdrive.core.__GT_t9701 = function(title) {
      return function __GT_t9701(title__$1, owner__$1, cursor__$1, widget_header__$1, meta9702) {
        return new testdrive.core.t9701(title__$1, owner__$1, cursor__$1, widget_header__$1, meta9702);
      };
    }(title);
  }
  return new testdrive.core.t9701(title, owner, cursor, widget_header, null);
};
testdrive.core.text_widget_content = function text_widget_content(cursor, owner) {
  var value = testdrive.core.pretty_value.call(null, cljs.core.first.call(null, cljs.core.last.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, cursor)))));
  var unit = testdrive.core.unit_for.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  var label = testdrive.core.label_for.call(null, (new cljs.core.Keyword(null, "label-id", "label-id", -1465071949)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  if (typeof testdrive.core.t9707 !== "undefined") {
  } else {
    testdrive.core.t9707 = function(label, unit, value, owner, cursor, text_widget_content, meta9708) {
      this.label = label;
      this.unit = unit;
      this.value = value;
      this.owner = owner;
      this.cursor = cursor;
      this.text_widget_content = text_widget_content;
      this.meta9708 = meta9708;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9707.cljs$lang$type = true;
    testdrive.core.t9707.cljs$lang$ctorStr = "testdrive.core/t9707";
    testdrive.core.t9707.cljs$lang$ctorPrWriter = function(value, unit, label) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9707");
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.om$core$IRender$ = true;
    testdrive.core.t9707.prototype.om$core$IRender$render$arity$1 = function(value, unit, label) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.div({"className":"content"}, React.DOM.strong(null, self__.value), React.DOM.small({"className":"units"}, self__.unit), React.DOM.small(null, self__.label));
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.cljs$core$IMeta$_meta$arity$1 = function(value, unit, label) {
      return function(_9709) {
        var self__ = this;
        var _9709__$1 = this;
        return self__.meta9708;
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(value, unit, label) {
      return function(_9709, meta9708__$1) {
        var self__ = this;
        var _9709__$1 = this;
        return new testdrive.core.t9707(self__.label, self__.unit, self__.value, self__.owner, self__.cursor, self__.text_widget_content, meta9708__$1);
      };
    }(value, unit, label);
    testdrive.core.__GT_t9707 = function(value, unit, label) {
      return function __GT_t9707(label__$1, unit__$1, value__$1, owner__$1, cursor__$1, text_widget_content__$1, meta9708) {
        return new testdrive.core.t9707(label__$1, unit__$1, value__$1, owner__$1, cursor__$1, text_widget_content__$1, meta9708);
      };
    }(value, unit, label);
  }
  return new testdrive.core.t9707(label, unit, value, owner, cursor, text_widget_content, null);
};
testdrive.core.widget_footer = function widget_footer(cursor, owner) {
  if (typeof testdrive.core.t9713 !== "undefined") {
  } else {
    testdrive.core.t9713 = function(owner, cursor, widget_footer, meta9714) {
      this.owner = owner;
      this.cursor = cursor;
      this.widget_footer = widget_footer;
      this.meta9714 = meta9714;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9713.cljs$lang$type = true;
    testdrive.core.t9713.cljs$lang$ctorStr = "testdrive.core/t9713";
    testdrive.core.t9713.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9713");
    };
    testdrive.core.t9713.prototype.om$core$IRender$ = true;
    testdrive.core.t9713.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"footer"}, "just updated");
    };
    testdrive.core.t9713.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9715) {
      var self__ = this;
      var _9715__$1 = this;
      return self__.meta9714;
    };
    testdrive.core.t9713.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9715, meta9714__$1) {
      var self__ = this;
      var _9715__$1 = this;
      return new testdrive.core.t9713(self__.owner, self__.cursor, self__.widget_footer, meta9714__$1);
    };
    testdrive.core.__GT_t9713 = function __GT_t9713(owner__$1, cursor__$1, widget_footer__$1, meta9714) {
      return new testdrive.core.t9713(owner__$1, cursor__$1, widget_footer__$1, meta9714);
    };
  }
  return new testdrive.core.t9713(owner, cursor, widget_footer, null);
};
testdrive.core.text_widget = function text_widget(cursor, owner) {
  var kind_class = cljs.core.name.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  if (typeof testdrive.core.t9719 !== "undefined") {
  } else {
    testdrive.core.t9719 = function(kind_class, owner, cursor, text_widget, meta9720) {
      this.kind_class = kind_class;
      this.owner = owner;
      this.cursor = cursor;
      this.text_widget = text_widget;
      this.meta9720 = meta9720;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9719.cljs$lang$type = true;
    testdrive.core.t9719.cljs$lang$ctorStr = "testdrive.core/t9719";
    testdrive.core.t9719.cljs$lang$ctorPrWriter = function(kind_class) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9719");
      };
    }(kind_class);
    testdrive.core.t9719.prototype.om$core$IRender$ = true;
    testdrive.core.t9719.prototype.om$core$IRender$render$arity$1 = function(kind_class) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.li({"className":"widget " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.kind_class)}, om.core.build.call(null, testdrive.core.widget_header, self__.cursor), om.core.build.call(null, testdrive.core.text_widget_content, self__.cursor), om.core.build.call(null, testdrive.core.widget_footer, self__.cursor));
      };
    }(kind_class);
    testdrive.core.t9719.prototype.cljs$core$IMeta$_meta$arity$1 = function(kind_class) {
      return function(_9721) {
        var self__ = this;
        var _9721__$1 = this;
        return self__.meta9720;
      };
    }(kind_class);
    testdrive.core.t9719.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(kind_class) {
      return function(_9721, meta9720__$1) {
        var self__ = this;
        var _9721__$1 = this;
        return new testdrive.core.t9719(self__.kind_class, self__.owner, self__.cursor, self__.text_widget, meta9720__$1);
      };
    }(kind_class);
    testdrive.core.__GT_t9719 = function(kind_class) {
      return function __GT_t9719(kind_class__$1, owner__$1, cursor__$1, text_widget__$1, meta9720) {
        return new testdrive.core.t9719(kind_class__$1, owner__$1, cursor__$1, text_widget__$1, meta9720);
      };
    }(kind_class);
  }
  return new testdrive.core.t9719(kind_class, owner, cursor, text_widget, null);
};
testdrive.core.widget_list = function widget_list(cursor, owner) {
  if (typeof testdrive.core.t9797 !== "undefined") {
  } else {
    testdrive.core.t9797 = function(owner, cursor, widget_list, meta9798) {
      this.owner = owner;
      this.cursor = cursor;
      this.widget_list = widget_list;
      this.meta9798 = meta9798;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9797.cljs$lang$type = true;
    testdrive.core.t9797.cljs$lang$ctorStr = "testdrive.core/t9797";
    testdrive.core.t9797.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9797");
    };
    testdrive.core.t9797.prototype.om$core$IRender$ = true;
    testdrive.core.t9797.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.ul({"className":"widgets grid"}, cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1) {
        return function(p1__9722_SHARP_) {
          return om.core.build.call(null, testdrive.core.text_widget, p1__9722_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), cljs.core.key.call(null, p1__9722_SHARP_)], null));
        };
      }(___$1), (new cljs.core.Keyword(null, "sensors", "sensors", -1987490738)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
    };
    testdrive.core.t9797.prototype.om$core$IWillMount$ = true;
    testdrive.core.t9797.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ___$1) {
        return function() {
          var f__6369__auto__ = function() {
            var switch__6353__auto__ = function(c__6368__auto__, ___$1) {
              return function(state_9837) {
                var state_val_9838 = state_9837[1];
                if (state_val_9838 === 7) {
                  var inst_9803 = state_9837[7];
                  var inst_9803__$1 = state_9837[2];
                  var state_9837__$1 = function() {
                    var statearr_9839 = state_9837;
                    statearr_9839[7] = inst_9803__$1;
                    return statearr_9839;
                  }();
                  if (cljs.core.truth_(inst_9803__$1)) {
                    var statearr_9840_9871 = state_9837__$1;
                    statearr_9840_9871[1] = 8;
                  } else {
                    var statearr_9841_9872 = state_9837__$1;
                    statearr_9841_9872[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9838 === 1) {
                    var state_9837__$1 = state_9837;
                    var statearr_9842_9873 = state_9837__$1;
                    statearr_9842_9873[2] = null;
                    statearr_9842_9873[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9838 === 4) {
                      var state_9837__$1 = state_9837;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9837__$1, 7, testdrive.core.event_ch);
                    } else {
                      if (state_val_9838 === 15) {
                        var inst_9805 = state_9837[8];
                        var inst_9817 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "log", "log", -1595516004), inst_9805);
                        var state_9837__$1 = state_9837;
                        if (inst_9817) {
                          var statearr_9843_9874 = state_9837__$1;
                          statearr_9843_9874[1] = 17;
                        } else {
                          var statearr_9844_9875 = state_9837__$1;
                          statearr_9844_9875[1] = 18;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9838 === 13) {
                          var inst_9826 = state_9837[2];
                          var state_9837__$1 = state_9837;
                          var statearr_9845_9876 = state_9837__$1;
                          statearr_9845_9876[2] = inst_9826;
                          statearr_9845_9876[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9838 === 6) {
                            var inst_9833 = state_9837[2];
                            var state_9837__$1 = state_9837;
                            var statearr_9846_9877 = state_9837__$1;
                            statearr_9846_9877[2] = inst_9833;
                            statearr_9846_9877[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9838 === 17) {
                              var inst_9803 = state_9837[7];
                              var inst_9819 = testdrive.core.process_new_log.call(null, self__.cursor, inst_9803);
                              var state_9837__$1 = state_9837;
                              var statearr_9847_9878 = state_9837__$1;
                              statearr_9847_9878[2] = inst_9819;
                              statearr_9847_9878[1] = 19;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9838 === 3) {
                                var inst_9835 = state_9837[2];
                                var state_9837__$1 = state_9837;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9837__$1, inst_9835);
                              } else {
                                if (state_val_9838 === 12) {
                                  var inst_9805 = state_9837[8];
                                  var inst_9813 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "event", "event", 301435442), inst_9805);
                                  var state_9837__$1 = state_9837;
                                  if (inst_9813) {
                                    var statearr_9848_9879 = state_9837__$1;
                                    statearr_9848_9879[1] = 14;
                                  } else {
                                    var statearr_9849_9880 = state_9837__$1;
                                    statearr_9849_9880[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_9838 === 2) {
                                    var state_9837__$1 = state_9837;
                                    var statearr_9850_9881 = state_9837__$1;
                                    statearr_9850_9881[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9838 === 19) {
                                      var inst_9822 = state_9837[2];
                                      var state_9837__$1 = state_9837;
                                      var statearr_9852_9882 = state_9837__$1;
                                      statearr_9852_9882[2] = inst_9822;
                                      statearr_9852_9882[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9838 === 11) {
                                        var inst_9803 = state_9837[7];
                                        var inst_9811 = testdrive.core.process_new_label.call(null, self__.cursor, inst_9803);
                                        var state_9837__$1 = state_9837;
                                        var statearr_9853_9883 = state_9837__$1;
                                        statearr_9853_9883[2] = inst_9811;
                                        statearr_9853_9883[1] = 13;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9838 === 9) {
                                          var state_9837__$1 = state_9837;
                                          var statearr_9854_9884 = state_9837__$1;
                                          statearr_9854_9884[2] = null;
                                          statearr_9854_9884[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_9838 === 5) {
                                            var state_9837__$1 = state_9837;
                                            var statearr_9855_9885 = state_9837__$1;
                                            statearr_9855_9885[2] = null;
                                            statearr_9855_9885[1] = 6;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_9838 === 14) {
                                              var inst_9803 = state_9837[7];
                                              var inst_9815 = testdrive.core.process_new_event.call(null, self__.cursor, inst_9803);
                                              var state_9837__$1 = state_9837;
                                              var statearr_9856_9886 = state_9837__$1;
                                              statearr_9856_9886[2] = inst_9815;
                                              statearr_9856_9886[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_9838 === 16) {
                                                var inst_9824 = state_9837[2];
                                                var state_9837__$1 = state_9837;
                                                var statearr_9857_9887 = state_9837__$1;
                                                statearr_9857_9887[2] = inst_9824;
                                                statearr_9857_9887[1] = 13;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_9838 === 10) {
                                                  var inst_9829 = state_9837[2];
                                                  var state_9837__$1 = function() {
                                                    var statearr_9858 = state_9837;
                                                    statearr_9858[9] = inst_9829;
                                                    return statearr_9858;
                                                  }();
                                                  var statearr_9859_9888 = state_9837__$1;
                                                  statearr_9859_9888[2] = null;
                                                  statearr_9859_9888[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_9838 === 18) {
                                                    var state_9837__$1 = state_9837;
                                                    var statearr_9860_9889 = state_9837__$1;
                                                    statearr_9860_9889[2] = null;
                                                    statearr_9860_9889[1] = 19;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_9838 === 8) {
                                                      var inst_9805 = state_9837[8];
                                                      var inst_9803 = state_9837[7];
                                                      var inst_9805__$1 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(inst_9803);
                                                      var inst_9809 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "label", "label", 1718410804), inst_9805__$1);
                                                      var state_9837__$1 = function() {
                                                        var statearr_9861 = state_9837;
                                                        statearr_9861[8] = inst_9805__$1;
                                                        return statearr_9861;
                                                      }();
                                                      if (inst_9809) {
                                                        var statearr_9862_9890 = state_9837__$1;
                                                        statearr_9862_9890[1] = 11;
                                                      } else {
                                                        var statearr_9863_9891 = state_9837__$1;
                                                        statearr_9863_9891[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6368__auto__, ___$1);
            return function(switch__6353__auto__, c__6368__auto__, ___$1) {
              return function() {
                var state_machine__6354__auto__ = null;
                var state_machine__6354__auto____0 = function() {
                  var statearr_9867 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_9867[0] = state_machine__6354__auto__;
                  statearr_9867[1] = 1;
                  return statearr_9867;
                };
                var state_machine__6354__auto____1 = function(state_9837) {
                  while (true) {
                    var ret_value__6355__auto__ = function() {
                      try {
                        while (true) {
                          var result__6356__auto__ = switch__6353__auto__.call(null, state_9837);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6356__auto__;
                          }
                          break;
                        }
                      } catch (e9868) {
                        if (e9868 instanceof Object) {
                          var ex__6357__auto__ = e9868;
                          var statearr_9869_9892 = state_9837;
                          statearr_9869_9892[5] = ex__6357__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9837);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e9868;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__9893 = state_9837;
                      state_9837 = G__9893;
                      continue;
                    } else {
                      return ret_value__6355__auto__;
                    }
                    break;
                  }
                };
                state_machine__6354__auto__ = function(state_9837) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6354__auto____0.call(this);
                    case 1:
                      return state_machine__6354__auto____1.call(this, state_9837);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
                return state_machine__6354__auto__;
              }();
            }(switch__6353__auto__, c__6368__auto__, ___$1);
          }();
          var state__6370__auto__ = function() {
            var statearr_9870 = f__6369__auto__.call(null);
            statearr_9870[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
            return statearr_9870;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
        };
      }(c__6368__auto__, ___$1));
      return c__6368__auto__;
    };
    testdrive.core.t9797.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9799) {
      var self__ = this;
      var _9799__$1 = this;
      return self__.meta9798;
    };
    testdrive.core.t9797.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9799, meta9798__$1) {
      var self__ = this;
      var _9799__$1 = this;
      return new testdrive.core.t9797(self__.owner, self__.cursor, self__.widget_list, meta9798__$1);
    };
    testdrive.core.__GT_t9797 = function __GT_t9797(owner__$1, cursor__$1, widget_list__$1, meta9798) {
      return new testdrive.core.t9797(owner__$1, cursor__$1, widget_list__$1, meta9798);
    };
  }
  return new testdrive.core.t9797(owner, cursor, widget_list, null);
};
testdrive.core.console_entry = function console_entry(p__9894, owner) {
  var map__9899 = p__9894;
  var map__9899__$1 = cljs.core.seq_QMARK_.call(null, map__9899) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9899) : map__9899;
  var cursor = map__9899__$1;
  var value = cljs.core.get.call(null, map__9899__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9899__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var label = testdrive.core.label_for.call(null, id);
  var timestamp = cljs_time.format.unparse.call(null, cljs_time.format.formatters.call(null, new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364)), cljs_time.core.now.call(null));
  if (typeof testdrive.core.t9900 !== "undefined") {
  } else {
    testdrive.core.t9900 = function(timestamp, label, id, value, cursor, map__9899, owner, p__9894, console_entry, meta9901) {
      this.timestamp = timestamp;
      this.label = label;
      this.id = id;
      this.value = value;
      this.cursor = cursor;
      this.map__9899 = map__9899;
      this.owner = owner;
      this.p__9894 = p__9894;
      this.console_entry = console_entry;
      this.meta9901 = meta9901;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9900.cljs$lang$type = true;
    testdrive.core.t9900.cljs$lang$ctorStr = "testdrive.core/t9900";
    testdrive.core.t9900.cljs$lang$ctorPrWriter = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9900");
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.om$core$IRender$ = true;
    testdrive.core.t9900.prototype.om$core$IRender$render$arity$1 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.li(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.timestamp) + " [" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.label) + "]: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.value));
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.cljs$core$IMeta$_meta$arity$1 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(_9902) {
        var self__ = this;
        var _9902__$1 = this;
        return self__.meta9901;
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(_9902, meta9901__$1) {
        var self__ = this;
        var _9902__$1 = this;
        return new testdrive.core.t9900(self__.timestamp, self__.label, self__.id, self__.value, self__.cursor, self__.map__9899, self__.owner, self__.p__9894, self__.console_entry, meta9901__$1);
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.__GT_t9900 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function __GT_t9900(timestamp__$1, label__$1, id__$1, value__$1, cursor__$1, map__9899__$2, owner__$1, p__9894__$1, console_entry__$1, meta9901) {
        return new testdrive.core.t9900(timestamp__$1, label__$1, id__$1, value__$1, cursor__$1, map__9899__$2, owner__$1, p__9894__$1, console_entry__$1, meta9901);
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
  }
  return new testdrive.core.t9900(timestamp, label, id, value, cursor, map__9899__$1, owner, p__9894, console_entry, null);
};
testdrive.core.console = function console__$1(cursor, owner) {
  if (typeof testdrive.core.t9907 !== "undefined") {
  } else {
    testdrive.core.t9907 = function(owner, cursor, console, meta9908) {
      this.owner = owner;
      this.cursor = cursor;
      this.console = console;
      this.meta9908 = meta9908;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9907.cljs$lang$type = true;
    testdrive.core.t9907.cljs$lang$ctorStr = "testdrive.core/t9907";
    testdrive.core.t9907.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9907");
    };
    testdrive.core.t9907.prototype.om$core$IRender$ = true;
    testdrive.core.t9907.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"console" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)).cljs$core$IFn$_invoke$arity$1(self__.cursor)) ? " hidden" : null), "id":"console"}, React.DOM.div({"className":"header"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, "CONSOLE")), React.DOM.div({"className":"content", "id":"console-content"}, React.DOM.ul(null, 
      cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1) {
        return function(p1__9903_SHARP_) {
          return om.core.build.call(null, testdrive.core.console_entry, p1__9903_SHARP_);
        };
      }(___$1), (new cljs.core.Keyword(null, "console", "console", 1228072057)).cljs$core$IFn$_invoke$arity$1(self__.cursor))))));
    };
    testdrive.core.t9907.prototype.om$core$IDidUpdate$ = true;
    testdrive.core.t9907.prototype.om$core$IDidUpdate$did_update$arity$3 = function(_, ___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      var console_9910__$2 = document.getElementById("console-content");
      console_9910__$2.scrollTop = console_9910__$2.scrollHeight;
      if (!cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "console", "console", 1228072057)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) {
        return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)], null), false);
      } else {
        return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)], null), true);
      }
    };
    testdrive.core.t9907.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9909) {
      var self__ = this;
      var _9909__$1 = this;
      return self__.meta9908;
    };
    testdrive.core.t9907.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9909, meta9908__$1) {
      var self__ = this;
      var _9909__$1 = this;
      return new testdrive.core.t9907(self__.owner, self__.cursor, self__.console, meta9908__$1);
    };
    testdrive.core.__GT_t9907 = function __GT_t9907(owner__$1, cursor__$1, console__$1, meta9908) {
      return new testdrive.core.t9907(owner__$1, cursor__$1, console__$1, meta9908);
    };
  }
  return new testdrive.core.t9907(owner, cursor, console__$1, null);
};
testdrive.core.not_connected = function not_connected(cursor, owner) {
  if (typeof testdrive.core.t9914 !== "undefined") {
  } else {
    testdrive.core.t9914 = function(owner, cursor, not_connected, meta9915) {
      this.owner = owner;
      this.cursor = cursor;
      this.not_connected = not_connected;
      this.meta9915 = meta9915;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9914.cljs$lang$type = true;
    testdrive.core.t9914.cljs$lang$ctorStr = "testdrive.core/t9914";
    testdrive.core.t9914.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9914");
    };
    testdrive.core.t9914.prototype.om$core$IRender$ = true;
    testdrive.core.t9914.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"no-connection"}, React.DOM.h2(null, "Awaiting connection..."), React.DOM.a({"href":"https://github.com/blakejakopovic/TestDrive"}, "This seems to be taking a while...?"));
    };
    testdrive.core.t9914.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9916) {
      var self__ = this;
      var _9916__$1 = this;
      return self__.meta9915;
    };
    testdrive.core.t9914.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9916, meta9915__$1) {
      var self__ = this;
      var _9916__$1 = this;
      return new testdrive.core.t9914(self__.owner, self__.cursor, self__.not_connected, meta9915__$1);
    };
    testdrive.core.__GT_t9914 = function __GT_t9914(owner__$1, cursor__$1, not_connected__$1, meta9915) {
      return new testdrive.core.t9914(owner__$1, cursor__$1, not_connected__$1, meta9915);
    };
  }
  return new testdrive.core.t9914(owner, cursor, not_connected, null);
};
testdrive.core.header_bar = function header_bar(cursor, owner) {
  if (typeof testdrive.core.t9920 !== "undefined") {
  } else {
    testdrive.core.t9920 = function(owner, cursor, header_bar, meta9921) {
      this.owner = owner;
      this.cursor = cursor;
      this.header_bar = header_bar;
      this.meta9921 = meta9921;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9920.cljs$lang$type = true;
    testdrive.core.t9920.cljs$lang$ctorStr = "testdrive.core/t9920";
    testdrive.core.t9920.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9920");
    };
    testdrive.core.t9920.prototype.om$core$IRender$ = true;
    testdrive.core.t9920.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"header clearfix", "id":"header"}, React.DOM.div({"className":"logo"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, "TestDrive Dashboard")), React.DOM.div({"className":"actions"}, ""));
    };
    testdrive.core.t9920.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9922) {
      var self__ = this;
      var _9922__$1 = this;
      return self__.meta9921;
    };
    testdrive.core.t9920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9922, meta9921__$1) {
      var self__ = this;
      var _9922__$1 = this;
      return new testdrive.core.t9920(self__.owner, self__.cursor, self__.header_bar, meta9921__$1);
    };
    testdrive.core.__GT_t9920 = function __GT_t9920(owner__$1, cursor__$1, header_bar__$1, meta9921) {
      return new testdrive.core.t9920(owner__$1, cursor__$1, header_bar__$1, meta9921);
    };
  }
  return new testdrive.core.t9920(owner, cursor, header_bar, null);
};
testdrive.core.dashboard = function dashboard(cursor, owner) {
  if (typeof testdrive.core.t9991 !== "undefined") {
  } else {
    testdrive.core.t9991 = function(owner, cursor, dashboard, meta9992) {
      this.owner = owner;
      this.cursor = cursor;
      this.dashboard = dashboard;
      this.meta9992 = meta9992;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9991.cljs$lang$type = true;
    testdrive.core.t9991.cljs$lang$ctorStr = "testdrive.core/t9991";
    testdrive.core.t9991.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9991");
    };
    testdrive.core.t9991.prototype.om$core$IRender$ = true;
    testdrive.core.t9991.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) {
        return React.DOM.div({"id":"dashboard"}, om.core.build.call(null, testdrive.core.widget_list, self__.cursor), om.core.build.call(null, testdrive.core.console, self__.cursor));
      } else {
        return om.core.build.call(null, testdrive.core.not_connected, self__.cursor);
      }
    };
    testdrive.core.t9991.prototype.om$core$IWillMount$ = true;
    testdrive.core.t9991.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ___$1) {
        return function() {
          var f__6369__auto__ = function() {
            var switch__6353__auto__ = function(c__6368__auto__, ___$1) {
              return function(state_10030) {
                var state_val_10031 = state_10030[1];
                if (state_val_10031 === 7) {
                  var inst_9997 = state_10030[7];
                  var inst_9997__$1 = state_10030[2];
                  var state_10030__$1 = function() {
                    var statearr_10032 = state_10030;
                    statearr_10032[7] = inst_9997__$1;
                    return statearr_10032;
                  }();
                  if (cljs.core.truth_(inst_9997__$1)) {
                    var statearr_10033_10059 = state_10030__$1;
                    statearr_10033_10059[1] = 8;
                  } else {
                    var statearr_10034_10060 = state_10030__$1;
                    statearr_10034_10060[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10031 === 1) {
                    var state_10030__$1 = state_10030;
                    var statearr_10035_10061 = state_10030__$1;
                    statearr_10035_10061[2] = null;
                    statearr_10035_10061[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10031 === 4) {
                      var state_10030__$1 = state_10030;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10030__$1, 7, testdrive.core.connection_ch);
                    } else {
                      if (state_val_10031 === 15) {
                        var state_10030__$1 = state_10030;
                        var statearr_10036_10062 = state_10030__$1;
                        statearr_10036_10062[2] = null;
                        statearr_10036_10062[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10031 === 13) {
                          var inst_10019 = state_10030[2];
                          var state_10030__$1 = state_10030;
                          var statearr_10037_10063 = state_10030__$1;
                          statearr_10037_10063[2] = inst_10019;
                          statearr_10037_10063[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10031 === 6) {
                            var inst_10026 = state_10030[2];
                            var state_10030__$1 = state_10030;
                            var statearr_10038_10064 = state_10030__$1;
                            statearr_10038_10064[2] = inst_10026;
                            statearr_10038_10064[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10031 === 3) {
                              var inst_10028 = state_10030[2];
                              var state_10030__$1 = state_10030;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10030__$1, inst_10028);
                            } else {
                              if (state_val_10031 === 12) {
                                var inst_9997 = state_10030[7];
                                var inst_10009 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "close", "close", 1835149582), inst_9997);
                                var state_10030__$1 = state_10030;
                                if (inst_10009) {
                                  var statearr_10039_10065 = state_10030__$1;
                                  statearr_10039_10065[1] = 14;
                                } else {
                                  var statearr_10040_10066 = state_10030__$1;
                                  statearr_10040_10066[1] = 15;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10031 === 2) {
                                  var state_10030__$1 = state_10030;
                                  var statearr_10041_10067 = state_10030__$1;
                                  statearr_10041_10067[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10031 === 11) {
                                    var inst_10004 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_10005 = [new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)];
                                    var inst_10006 = new cljs.core.PersistentVector(null, 1, 5, inst_10004, inst_10005, null);
                                    var inst_10007 = om.core.update_BANG_.call(null, self__.cursor, inst_10006, true);
                                    var state_10030__$1 = state_10030;
                                    var statearr_10043_10068 = state_10030__$1;
                                    statearr_10043_10068[2] = inst_10007;
                                    statearr_10043_10068[1] = 13;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10031 === 9) {
                                      var state_10030__$1 = state_10030;
                                      var statearr_10044_10069 = state_10030__$1;
                                      statearr_10044_10069[2] = null;
                                      statearr_10044_10069[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10031 === 5) {
                                        var state_10030__$1 = state_10030;
                                        var statearr_10045_10070 = state_10030__$1;
                                        statearr_10045_10070[2] = null;
                                        statearr_10045_10070[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10031 === 14) {
                                          var inst_10011 = cljs.core.PersistentVector.EMPTY_NODE;
                                          var inst_10012 = [new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)];
                                          var inst_10013 = new cljs.core.PersistentVector(null, 1, 5, inst_10011, inst_10012, null);
                                          var inst_10014 = om.core.update_BANG_.call(null, self__.cursor, inst_10013, false);
                                          var state_10030__$1 = state_10030;
                                          var statearr_10046_10071 = state_10030__$1;
                                          statearr_10046_10071[2] = inst_10014;
                                          statearr_10046_10071[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_10031 === 16) {
                                            var inst_10017 = state_10030[2];
                                            var state_10030__$1 = state_10030;
                                            var statearr_10047_10072 = state_10030__$1;
                                            statearr_10047_10072[2] = inst_10017;
                                            statearr_10047_10072[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10031 === 10) {
                                              var inst_10022 = state_10030[2];
                                              var state_10030__$1 = function() {
                                                var statearr_10048 = state_10030;
                                                statearr_10048[8] = inst_10022;
                                                return statearr_10048;
                                              }();
                                              var statearr_10049_10073 = state_10030__$1;
                                              statearr_10049_10073[2] = null;
                                              statearr_10049_10073[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10031 === 8) {
                                                var inst_9997 = state_10030[7];
                                                var inst_10002 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "open", "open", -1763596448), inst_9997);
                                                var state_10030__$1 = state_10030;
                                                if (inst_10002) {
                                                  var statearr_10050_10074 = state_10030__$1;
                                                  statearr_10050_10074[1] = 11;
                                                } else {
                                                  var statearr_10051_10075 = state_10030__$1;
                                                  statearr_10051_10075[1] = 12;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6368__auto__, ___$1);
            return function(switch__6353__auto__, c__6368__auto__, ___$1) {
              return function() {
                var state_machine__6354__auto__ = null;
                var state_machine__6354__auto____0 = function() {
                  var statearr_10055 = [null, null, null, null, null, null, null, null, null];
                  statearr_10055[0] = state_machine__6354__auto__;
                  statearr_10055[1] = 1;
                  return statearr_10055;
                };
                var state_machine__6354__auto____1 = function(state_10030) {
                  while (true) {
                    var ret_value__6355__auto__ = function() {
                      try {
                        while (true) {
                          var result__6356__auto__ = switch__6353__auto__.call(null, state_10030);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6356__auto__;
                          }
                          break;
                        }
                      } catch (e10056) {
                        if (e10056 instanceof Object) {
                          var ex__6357__auto__ = e10056;
                          var statearr_10057_10076 = state_10030;
                          statearr_10057_10076[5] = ex__6357__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10030);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10056;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__10077 = state_10030;
                      state_10030 = G__10077;
                      continue;
                    } else {
                      return ret_value__6355__auto__;
                    }
                    break;
                  }
                };
                state_machine__6354__auto__ = function(state_10030) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6354__auto____0.call(this);
                    case 1:
                      return state_machine__6354__auto____1.call(this, state_10030);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
                return state_machine__6354__auto__;
              }();
            }(switch__6353__auto__, c__6368__auto__, ___$1);
          }();
          var state__6370__auto__ = function() {
            var statearr_10058 = f__6369__auto__.call(null);
            statearr_10058[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
            return statearr_10058;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
        };
      }(c__6368__auto__, ___$1));
      return c__6368__auto__;
    };
    testdrive.core.t9991.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9993) {
      var self__ = this;
      var _9993__$1 = this;
      return self__.meta9992;
    };
    testdrive.core.t9991.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9993, meta9992__$1) {
      var self__ = this;
      var _9993__$1 = this;
      return new testdrive.core.t9991(self__.owner, self__.cursor, self__.dashboard, meta9992__$1);
    };
    testdrive.core.__GT_t9991 = function __GT_t9991(owner__$1, cursor__$1, dashboard__$1, meta9992) {
      return new testdrive.core.t9991(owner__$1, cursor__$1, dashboard__$1, meta9992);
    };
  }
  return new testdrive.core.t9991(owner, cursor, dashboard, null);
};
testdrive.core.simulate_event = function simulate_event() {
  return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "temperature", "temperature", 899018429), new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", 
  "value", 305978217), 19 + cljs.core.rand_int.call(null, 8), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "pressure", "pressure", 505343747), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, 
  new cljs.core.Keyword(null, "value", "value", 305978217), 995 + cljs.core.rand_int.call(null, 11), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "humidity", "humidity", -2051231184), new cljs.core.Keyword(null, 
  "id", "id", -1388402092), 3, new cljs.core.Keyword(null, "value", "value", 305978217), 58 + cljs.core.rand_int.call(null, 8), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "altitude", "altitude", 463588637), 
  new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", "value", 305978217), 15 + cljs.core.rand_int.call(null, 6), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, 
  "voltage", "voltage", -1909388658), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), 3 + cljs.core.rand_int.call(null, 2), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "id", "id", -1388402092), 
  1, new cljs.core.Keyword(null, "value", "value", 305978217), "Main Bedroom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), "Kitchen"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, 
  "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), "Hello"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", "value", 305978217), "World"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
  "type", "type", 1174270348), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 0, new cljs.core.Keyword(null, "value", "value", 305978217), "General message"], null)], null));
};
testdrive.core.simulate_events = function simulate_events() {
  cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "open", "open", -1763596448));
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_10143) {
            var state_val_10144 = state_10143[1];
            if (state_val_10144 === 7) {
              var inst_10126 = state_10143[2];
              var inst_10127 = testdrive.core.debug.call(null);
              var state_10143__$1 = function() {
                var statearr_10145 = state_10143;
                statearr_10145[7] = inst_10126;
                return statearr_10145;
              }();
              if (cljs.core.truth_(inst_10127)) {
                var statearr_10146_10166 = state_10143__$1;
                statearr_10146_10166[1] = 8;
              } else {
                var statearr_10147_10167 = state_10143__$1;
                statearr_10147_10167[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10144 === 1) {
                var state_10143__$1 = state_10143;
                var statearr_10148_10168 = state_10143__$1;
                statearr_10148_10168[2] = null;
                statearr_10148_10168[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10144 === 4) {
                  var inst_10124 = state_10143[8];
                  var inst_10124__$1 = testdrive.core.simulate_event.call(null);
                  var state_10143__$1 = function() {
                    var statearr_10149 = state_10143;
                    statearr_10149[8] = inst_10124__$1;
                    return statearr_10149;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10143__$1, 7, testdrive.core.event_ch, inst_10124__$1);
                } else {
                  if (state_val_10144 === 6) {
                    var inst_10139 = state_10143[2];
                    var state_10143__$1 = state_10143;
                    var statearr_10150_10169 = state_10143__$1;
                    statearr_10150_10169[2] = inst_10139;
                    statearr_10150_10169[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10144 === 3) {
                      var inst_10141 = state_10143[2];
                      var state_10143__$1 = state_10143;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10143__$1, inst_10141);
                    } else {
                      if (state_val_10144 === 2) {
                        var state_10143__$1 = state_10143;
                        var statearr_10151_10170 = state_10143__$1;
                        statearr_10151_10170[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10144 === 11) {
                          var inst_10135 = state_10143[2];
                          var state_10143__$1 = function() {
                            var statearr_10153 = state_10143;
                            statearr_10153[9] = inst_10135;
                            return statearr_10153;
                          }();
                          var statearr_10154_10171 = state_10143__$1;
                          statearr_10154_10171[2] = null;
                          statearr_10154_10171[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10144 === 9) {
                            var state_10143__$1 = state_10143;
                            var statearr_10155_10172 = state_10143__$1;
                            statearr_10155_10172[2] = null;
                            statearr_10155_10172[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10144 === 5) {
                              var state_10143__$1 = state_10143;
                              var statearr_10156_10173 = state_10143__$1;
                              statearr_10156_10173[2] = null;
                              statearr_10156_10173[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10144 === 10) {
                                var inst_10132 = state_10143[2];
                                var inst_10133 = cljs.core.async.timeout.call(null, 100);
                                var state_10143__$1 = function() {
                                  var statearr_10157 = state_10143;
                                  statearr_10157[10] = inst_10132;
                                  return statearr_10157;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10143__$1, 11, inst_10133);
                              } else {
                                if (state_val_10144 === 8) {
                                  var inst_10124 = state_10143[8];
                                  var inst_10129 = cljs.core.println.call(null, "Simulated Event: ", inst_10124);
                                  var state_10143__$1 = state_10143;
                                  var statearr_10158_10174 = state_10143__$1;
                                  statearr_10158_10174[2] = inst_10129;
                                  statearr_10158_10174[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_10162 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_10162[0] = state_machine__6354__auto__;
              statearr_10162[1] = 1;
              return statearr_10162;
            };
            var state_machine__6354__auto____1 = function(state_10143) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_10143);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e10163) {
                    if (e10163 instanceof Object) {
                      var ex__6357__auto__ = e10163;
                      var statearr_10164_10175 = state_10143;
                      statearr_10164_10175[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10143);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10163;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10176 = state_10143;
                  state_10143 = G__10176;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_10143) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_10143);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_10165 = f__6369__auto__.call(null);
        statearr_10165[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_10165;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
testdrive.core.ws_send = cljs.core.async.chan.call(null, 5);
testdrive.core.ws_receive = cljs.core.async.chan.call(null, 5);
testdrive.core.init_websocket = function init_websocket() {
  var ws = new WebSocket(testdrive.core.ws_url.call(null));
  ws.onopen = function(ws) {
    return function(evt) {
      cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "open", "open", -1763596448));
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Open:", evt.data);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onclose = function(ws) {
    return function(evt) {
      cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "close", "close", 1835149582));
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Close:", evt.data);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onmessage = function(ws) {
    return function(evt) {
      var data = evt.data;
      var msg = cljs.reader.read_string.call(null, data);
      cljs.core.async.put_BANG_.call(null, testdrive.core.event_ch, msg);
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Event:", msg);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onerror = function(ws) {
    return function(evt) {
      return cljs.core.println.call(null, "WS Error:", evt.data);
    };
  }(ws);
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ws) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__, ws) {
          return function(state_10247) {
            var state_val_10248 = state_10247[1];
            if (state_val_10248 === 7) {
              var inst_10228 = state_10247[7];
              var inst_10228__$1 = state_10247[2];
              var state_10247__$1 = function() {
                var statearr_10249 = state_10247;
                statearr_10249[7] = inst_10228__$1;
                return statearr_10249;
              }();
              if (cljs.core.truth_(inst_10228__$1)) {
                var statearr_10250_10273 = state_10247__$1;
                statearr_10250_10273[1] = 8;
              } else {
                var statearr_10251_10274 = state_10247__$1;
                statearr_10251_10274[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10248 === 1) {
                var state_10247__$1 = state_10247;
                var statearr_10252_10275 = state_10247__$1;
                statearr_10252_10275[2] = null;
                statearr_10252_10275[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10248 === 4) {
                  var state_10247__$1 = state_10247;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10247__$1, 7, testdrive.core.ws_send);
                } else {
                  if (state_val_10248 === 13) {
                    var inst_10236 = state_10247[2];
                    var state_10247__$1 = state_10247;
                    var statearr_10253_10276 = state_10247__$1;
                    statearr_10253_10276[2] = inst_10236;
                    statearr_10253_10276[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10248 === 6) {
                      var inst_10243 = state_10247[2];
                      var state_10247__$1 = state_10247;
                      var statearr_10254_10277 = state_10247__$1;
                      statearr_10254_10277[2] = inst_10243;
                      statearr_10254_10277[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10248 === 3) {
                        var inst_10245 = state_10247[2];
                        var state_10247__$1 = state_10247;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10247__$1, inst_10245);
                      } else {
                        if (state_val_10248 === 12) {
                          var state_10247__$1 = state_10247;
                          var statearr_10255_10278 = state_10247__$1;
                          statearr_10255_10278[2] = null;
                          statearr_10255_10278[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10248 === 2) {
                            var state_10247__$1 = state_10247;
                            if (cljs.core.truth_(ws)) {
                              var statearr_10256_10279 = state_10247__$1;
                              statearr_10256_10279[1] = 4;
                            } else {
                              var statearr_10257_10280 = state_10247__$1;
                              statearr_10257_10280[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10248 === 11) {
                              var inst_10228 = state_10247[7];
                              var inst_10233 = cljs.core.println.call(null, "WS Send:", inst_10228);
                              var state_10247__$1 = state_10247;
                              var statearr_10258_10281 = state_10247__$1;
                              statearr_10258_10281[2] = inst_10233;
                              statearr_10258_10281[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10248 === 9) {
                                var state_10247__$1 = state_10247;
                                var statearr_10259_10282 = state_10247__$1;
                                statearr_10259_10282[2] = null;
                                statearr_10259_10282[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10248 === 5) {
                                  var state_10247__$1 = state_10247;
                                  var statearr_10260_10283 = state_10247__$1;
                                  statearr_10260_10283[2] = null;
                                  statearr_10260_10283[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10248 === 10) {
                                    var inst_10239 = state_10247[2];
                                    var state_10247__$1 = function() {
                                      var statearr_10261 = state_10247;
                                      statearr_10261[8] = inst_10239;
                                      return statearr_10261;
                                    }();
                                    var statearr_10262_10284 = state_10247__$1;
                                    statearr_10262_10284[2] = null;
                                    statearr_10262_10284[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10248 === 8) {
                                      var inst_10228 = state_10247[7];
                                      var inst_10230 = ws.send(inst_10228);
                                      var inst_10231 = testdrive.core.debug.call(null);
                                      var state_10247__$1 = function() {
                                        var statearr_10263 = state_10247;
                                        statearr_10263[9] = inst_10230;
                                        return statearr_10263;
                                      }();
                                      if (cljs.core.truth_(inst_10231)) {
                                        var statearr_10264_10285 = state_10247__$1;
                                        statearr_10264_10285[1] = 11;
                                      } else {
                                        var statearr_10265_10286 = state_10247__$1;
                                        statearr_10265_10286[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__, ws);
        return function(switch__6353__auto__, c__6368__auto__, ws) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_10269 = [null, null, null, null, null, null, null, null, null, null];
              statearr_10269[0] = state_machine__6354__auto__;
              statearr_10269[1] = 1;
              return statearr_10269;
            };
            var state_machine__6354__auto____1 = function(state_10247) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_10247);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e10270) {
                    if (e10270 instanceof Object) {
                      var ex__6357__auto__ = e10270;
                      var statearr_10271_10287 = state_10247;
                      statearr_10271_10287[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10247);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10270;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10288 = state_10247;
                  state_10247 = G__10288;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_10247) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_10247);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__, ws);
      }();
      var state__6370__auto__ = function() {
        var statearr_10272 = f__6369__auto__.call(null);
        statearr_10272[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_10272;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__, ws));
  return c__6368__auto__;
};
testdrive.core.init = function init() {
  om.core.root.call(null, testdrive.core.dashboard, testdrive.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(testdrive.core.config.call(null, new cljs.core.Keyword(null, "app-container-id", "app-container-id", -899827362)))], null));
  if (cljs.core.not.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "simulation", "simulation", -1001480470)))) {
    return testdrive.core.init_websocket.call(null);
  } else {
    testdrive.core.simulate_events.call(null);
    return cljs.core.println.call(null, "Simulation mode enabled. All data displayed is generated.");
  }
};
window.onload = testdrive.core.init;
