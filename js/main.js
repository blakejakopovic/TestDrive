var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2307";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10289__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__10289 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10289__delegate.call(this, args);
    };
    G__10289.cljs$lang$maxFixedArity = 0;
    G__10289.cljs$lang$applyTo = function(arglist__10290) {
      var args = cljs.core.seq(arglist__10290);
      return G__10289__delegate(args);
    };
    G__10289.cljs$core$IFn$_invoke$arity$variadic = G__10289__delegate;
    return G__10289;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3539__auto__ = ty;
    if (cljs.core.truth_(and__3539__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3539__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4407__auto___10291 = len;
  var i_10292 = 0;
  while (true) {
    if (i_10292 < n__4407__auto___10291) {
      new_arr[i_10292] = arr[i_10292];
      var G__10293 = i_10292 + 1;
      i_10292 = G__10293;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10294__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__10294 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10294__delegate.call(this, array, i, idxs);
    };
    G__10294.cljs$lang$maxFixedArity = 2;
    G__10294.cljs$lang$applyTo = function(arglist__10295) {
      var array = cljs.core.first(arglist__10295);
      arglist__10295 = cljs.core.next(arglist__10295);
      var i = cljs.core.first(arglist__10295);
      var idxs = cljs.core.rest(arglist__10295);
      return G__10294__delegate(array, i, idxs);
    };
    G__10294.cljs$core$IFn$_invoke$arity$variadic = G__10294__delegate;
    return G__10294;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__10296__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__10296 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10296__delegate.call(this, array, idx, idx2, idxv);
    };
    G__10296.cljs$lang$maxFixedArity = 3;
    G__10296.cljs$lang$applyTo = function(arglist__10297) {
      var array = cljs.core.first(arglist__10297);
      arglist__10297 = cljs.core.next(arglist__10297);
      var idx = cljs.core.first(arglist__10297);
      arglist__10297 = cljs.core.next(arglist__10297);
      var idx2 = cljs.core.first(arglist__10297);
      var idxv = cljs.core.rest(arglist__10297);
      return G__10296__delegate(array, idx, idx2, idxv);
    };
    G__10296.cljs$core$IFn$_invoke$arity$variadic = G__10296__delegate;
    return G__10296;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj10299 = {};
  return obj10299;
}();
cljs.core.IFn = function() {
  var obj10301 = {};
  return obj10301;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = cljs.core._invoke[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._invoke["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj10303 = {};
  return obj10303;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3539__auto__ = value;
    if (and__3539__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4178__auto__ = value == null ? null : value;
    return function() {
      var or__3551__auto__ = cljs.core._clone[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._clone["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj10305 = {};
  return obj10305;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._count[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._count["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj10307 = {};
  return obj10307;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._empty[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._empty["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10309 = {};
  return obj10309;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._conj[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._conj["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10311 = {};
  return obj10311;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._nth[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._nth["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._nth[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._nth["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10313 = {};
  return obj10313;
}();
cljs.core.ISeq = function() {
  var obj10315 = {};
  return obj10315;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._rest[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._rest["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10317 = {};
  return obj10317;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._next[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._next["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10319 = {};
  return obj10319;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._lookup[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._lookup["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._lookup[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._lookup["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10321 = {};
  return obj10321;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10323 = {};
  return obj10323;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._dissoc[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._dissoc["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10325 = {};
  return obj10325;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._key[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._key["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._val[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._val["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10327 = {};
  return obj10327;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._disjoin[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._disjoin["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10329 = {};
  return obj10329;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._peek[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._peek["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._pop[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pop["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10331 = {};
  return obj10331;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_n[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10333 = {};
  return obj10333;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._deref[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._deref["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10335 = {};
  return obj10335;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10337 = {};
  return obj10337;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._meta[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._meta["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10339 = {};
  return obj10339;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._with_meta[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._with_meta["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10341 = {};
  return obj10341;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._reduce[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._reduce["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3539__auto__ = coll;
      if (and__3539__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4178__auto__ = coll == null ? null : coll;
      return function() {
        var or__3551__auto__ = cljs.core._reduce[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._reduce["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10343 = {};
  return obj10343;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10345 = {};
  return obj10345;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._equiv[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._equiv["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10347 = {};
  return obj10347;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._hash[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._hash["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10349 = {};
  return obj10349;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._seq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._seq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10351 = {};
  return obj10351;
}();
cljs.core.IList = function() {
  var obj10353 = {};
  return obj10353;
}();
cljs.core.IRecord = function() {
  var obj10355 = {};
  return obj10355;
}();
cljs.core.IReversible = function() {
  var obj10357 = {};
  return obj10357;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._rseq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._rseq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10359 = {};
  return obj10359;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._entry_key[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._entry_key["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._comparator[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._comparator["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10361 = {};
  return obj10361;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3539__auto__ = writer;
    if (and__3539__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4178__auto__ = writer == null ? null : writer;
    return function() {
      var or__3551__auto__ = cljs.core._write[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._write["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3539__auto__ = writer;
    if (and__3539__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4178__auto__ = writer == null ? null : writer;
    return function() {
      var or__3551__auto__ = cljs.core._flush[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._flush["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10363 = {};
  return obj10363;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._pr_writer[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10365 = {};
  return obj10365;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3539__auto__ = d;
    if (and__3539__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4178__auto__ = d == null ? null : d;
    return function() {
      var or__3551__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10367 = {};
  return obj10367;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._notify_watches[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._add_watch[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._add_watch["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs.core._remove_watch[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10369 = {};
  return obj10369;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._as_transient[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._as_transient["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10371 = {};
  return obj10371;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10373 = {};
  return obj10373;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10375 = {};
  return obj10375;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10377 = {};
  return obj10377;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10379 = {};
  return obj10379;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3539__auto__ = tcoll;
    if (and__3539__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4178__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3551__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10381 = {};
  return obj10381;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._compare[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._compare["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10383 = {};
  return obj10383;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._drop_first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._drop_first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10385 = {};
  return obj10385;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_first[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10387 = {};
  return obj10387;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3539__auto__ = coll;
    if (and__3539__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4178__auto__ = coll == null ? null : coll;
    return function() {
      var or__3551__auto__ = cljs.core._chunked_next[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10389 = {};
  return obj10389;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._name[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._name["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._namespace[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._namespace["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10391 = {};
  return obj10391;
}();
cljs.core.IReset = function() {
  var obj10393 = {};
  return obj10393;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3539__auto__ = o;
    if (and__3539__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4178__auto__ = o == null ? null : o;
    return function() {
      var or__3551__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10395 = {};
  return obj10395;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3539__auto__ = o;
      if (and__3539__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4178__auto__ = o == null ? null : o;
      return function() {
        var or__3551__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10396 = i + 2;
        var G__10397 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10396;
        h1 = G__10397;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10399 = {};
  return obj10399;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10400 = i + 1;
          var G__10401 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__10400;
          hash = G__10401;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10405 = {};
      return obj10405;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10407 = o;
    if (G__10407) {
      var bit__4194__auto__ = G__10407.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4194__auto__ || G__10407.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3539__auto__) {
        return b.ns;
      } else {
        return and__3539__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3962__auto__ = self__._hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10409 = null;
  var G__10409__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__10409__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__10409 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10409__2.call(this, self__, coll);
      case 3:
        return G__10409__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10409.cljs$core$IFn$_invoke$arity$2 = G__10409__2;
  G__10409.cljs$core$IFn$_invoke$arity$3 = G__10409__3;
  return G__10409;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10408) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10408)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10411 = value;
  if (G__10411) {
    var bit__4201__auto__ = G__10411.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4201__auto__ || G__10411.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10411.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10411);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10411);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10413 = coll;
      if (G__10413) {
        var bit__4194__auto__ = G__10413.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4194__auto__ || G__10413.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10415 = coll;
      if (G__10415) {
        var bit__4194__auto__ = G__10415.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__10415.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10417 = coll;
      if (G__10417) {
        var bit__4194__auto__ = G__10417.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__10417.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10419 = coll;
      if (G__10419) {
        var bit__4194__auto__ = G__10419.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4194__auto__ || G__10419.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10420__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10421 = y;
            var G__10422 = cljs.core.first.call(null, more);
            var G__10423 = cljs.core.next.call(null, more);
            x = G__10421;
            y = G__10422;
            more = G__10423;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10420 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10420__delegate.call(this, x, y, more);
    };
    G__10420.cljs$lang$maxFixedArity = 2;
    G__10420.cljs$lang$applyTo = function(arglist__10424) {
      var x = cljs.core.first(arglist__10424);
      arglist__10424 = cljs.core.next(arglist__10424);
      var y = cljs.core.first(arglist__10424);
      var more = cljs.core.rest(arglist__10424);
      return G__10420__delegate(x, y, more);
    };
    G__10420.cljs$core$IFn$_invoke$arity$variadic = G__10420__delegate;
    return G__10420;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10425 = n + 1;
      var G__10426 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10427 = cljs.core.next.call(null, coll__$1);
      n = G__10425;
      hash_code = G__10426;
      coll__$1 = G__10427;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10428 = n + 1;
      var G__10429 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10430 = cljs.core.next.call(null, coll__$1);
      n = G__10428;
      hash_code = G__10429;
      coll__$1 = G__10430;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10431 = nval;
            var G__10432 = n + 1;
            val = G__10431;
            n = G__10432;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10433 = nval;
          var G__10434 = n + 1;
          val__$1 = G__10433;
          n = G__10434;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10435 = nval;
          var G__10436 = n + 1;
          val__$1 = G__10435;
          n = G__10436;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10437 = nval;
            var G__10438 = n + 1;
            val = G__10437;
            n = G__10438;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10439 = nval;
          var G__10440 = n + 1;
          val__$1 = G__10439;
          n = G__10440;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10441 = nval;
          var G__10442 = n + 1;
          val__$1 = G__10441;
          n = G__10442;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10444 = x;
  if (G__10444) {
    var bit__4201__auto__ = G__10444.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4201__auto__ || G__10444.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10444.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10444);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10444);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10446 = x;
  if (G__10446) {
    var bit__4201__auto__ = G__10446.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4201__auto__ || G__10446.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10446.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10446);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10446);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__10447 = sn;
      s = G__10447;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10448__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10449 = conj.call(null, coll, x);
          var G__10450 = cljs.core.first.call(null, xs);
          var G__10451 = cljs.core.next.call(null, xs);
          coll = G__10449;
          x = G__10450;
          xs = G__10451;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__10448 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10448__delegate.call(this, coll, x, xs);
    };
    G__10448.cljs$lang$maxFixedArity = 2;
    G__10448.cljs$lang$applyTo = function(arglist__10452) {
      var coll = cljs.core.first(arglist__10452);
      arglist__10452 = cljs.core.next(arglist__10452);
      var x = cljs.core.first(arglist__10452);
      var xs = cljs.core.rest(arglist__10452);
      return G__10448__delegate(coll, x, xs);
    };
    G__10448.cljs$core$IFn$_invoke$arity$variadic = G__10448__delegate;
    return G__10448;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__10453 = cljs.core.next.call(null, s);
      var G__10454 = acc + 1;
      s = G__10453;
      acc = G__10454;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10456 = coll;
      if (G__10456) {
        var bit__4194__auto__ = G__10456.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4194__auto__ || G__10456.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10457 = cljs.core.next.call(null, coll);
              var G__10458 = n - 1;
              coll = G__10457;
              n = G__10458;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10459 = cljs.core.next.call(null, coll);
              var G__10460 = n - 1;
              var G__10461 = not_found;
              coll = G__10459;
              n = G__10460;
              not_found = G__10461;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10466 = coll;
          if (G__10466) {
            var bit__4194__auto__ = G__10466.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4194__auto__ || G__10466.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10467 = coll;
                  if (G__10467) {
                    var bit__4201__auto__ = G__10467.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4201__auto__ || G__10467.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10467.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10467);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10467);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10468 = coll;
          if (G__10468) {
            var bit__4194__auto__ = G__10468.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4194__auto__ || G__10468.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10469 = coll;
                  if (G__10469) {
                    var bit__4201__auto__ = G__10469.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4201__auto__ || G__10469.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10469.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10469);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10469);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10472 = o;
        if (G__10472) {
          var bit__4194__auto__ = G__10472.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4194__auto__ || G__10472.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10473 = o;
        if (G__10473) {
          var bit__4194__auto__ = G__10473.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4194__auto__ || G__10473.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10474__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10475 = ret;
          var G__10476 = cljs.core.first.call(null, kvs);
          var G__10477 = cljs.core.second.call(null, kvs);
          var G__10478 = cljs.core.nnext.call(null, kvs);
          coll = G__10475;
          k = G__10476;
          v = G__10477;
          kvs = G__10478;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10474 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10474__delegate.call(this, coll, k, v, kvs);
    };
    G__10474.cljs$lang$maxFixedArity = 3;
    G__10474.cljs$lang$applyTo = function(arglist__10479) {
      var coll = cljs.core.first(arglist__10479);
      arglist__10479 = cljs.core.next(arglist__10479);
      var k = cljs.core.first(arglist__10479);
      arglist__10479 = cljs.core.next(arglist__10479);
      var v = cljs.core.first(arglist__10479);
      var kvs = cljs.core.rest(arglist__10479);
      return G__10474__delegate(coll, k, v, kvs);
    };
    G__10474.cljs$core$IFn$_invoke$arity$variadic = G__10474__delegate;
    return G__10474;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10480__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10481 = ret;
            var G__10482 = cljs.core.first.call(null, ks);
            var G__10483 = cljs.core.next.call(null, ks);
            coll = G__10481;
            k = G__10482;
            ks = G__10483;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10480 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10480__delegate.call(this, coll, k, ks);
    };
    G__10480.cljs$lang$maxFixedArity = 2;
    G__10480.cljs$lang$applyTo = function(arglist__10484) {
      var coll = cljs.core.first(arglist__10484);
      arglist__10484 = cljs.core.next(arglist__10484);
      var k = cljs.core.first(arglist__10484);
      var ks = cljs.core.rest(arglist__10484);
      return G__10480__delegate(coll, k, ks);
    };
    G__10480.cljs$core$IFn$_invoke$arity$variadic = G__10480__delegate;
    return G__10480;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3551__auto__ = goog.isFunction(f);
  if (or__3551__auto__) {
    return or__3551__auto__;
  } else {
    var G__10488 = f;
    if (G__10488) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto____$1 = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto____$1)) {
          return or__3551__auto____$1;
        } else {
          return G__10488.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10488.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10488);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10488);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__10490 = null;
  var G__10490__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__10490__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__10490__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__10490__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__10490__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__10490__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__10490__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__10490__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__10490__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__10490__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10490__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10490__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10490__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10490__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10490__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10490__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10490__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10490__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10490__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10490__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10490__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10490__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__10490 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10490__1.call(this, self__);
      case 2:
        return G__10490__2.call(this, self__, a);
      case 3:
        return G__10490__3.call(this, self__, a, b);
      case 4:
        return G__10490__4.call(this, self__, a, b, c);
      case 5:
        return G__10490__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10490__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10490__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10490__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10490__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10490__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10490__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10490__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10490__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10490__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10490__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10490__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10490__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10490__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10490__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10490__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10490__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10490__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10490.cljs$core$IFn$_invoke$arity$1 = G__10490__1;
  G__10490.cljs$core$IFn$_invoke$arity$2 = G__10490__2;
  G__10490.cljs$core$IFn$_invoke$arity$3 = G__10490__3;
  G__10490.cljs$core$IFn$_invoke$arity$4 = G__10490__4;
  G__10490.cljs$core$IFn$_invoke$arity$5 = G__10490__5;
  G__10490.cljs$core$IFn$_invoke$arity$6 = G__10490__6;
  G__10490.cljs$core$IFn$_invoke$arity$7 = G__10490__7;
  G__10490.cljs$core$IFn$_invoke$arity$8 = G__10490__8;
  G__10490.cljs$core$IFn$_invoke$arity$9 = G__10490__9;
  G__10490.cljs$core$IFn$_invoke$arity$10 = G__10490__10;
  G__10490.cljs$core$IFn$_invoke$arity$11 = G__10490__11;
  G__10490.cljs$core$IFn$_invoke$arity$12 = G__10490__12;
  G__10490.cljs$core$IFn$_invoke$arity$13 = G__10490__13;
  G__10490.cljs$core$IFn$_invoke$arity$14 = G__10490__14;
  G__10490.cljs$core$IFn$_invoke$arity$15 = G__10490__15;
  G__10490.cljs$core$IFn$_invoke$arity$16 = G__10490__16;
  G__10490.cljs$core$IFn$_invoke$arity$17 = G__10490__17;
  G__10490.cljs$core$IFn$_invoke$arity$18 = G__10490__18;
  G__10490.cljs$core$IFn$_invoke$arity$19 = G__10490__19;
  G__10490.cljs$core$IFn$_invoke$arity$20 = G__10490__20;
  G__10490.cljs$core$IFn$_invoke$arity$21 = G__10490__21;
  G__10490.cljs$core$IFn$_invoke$arity$22 = G__10490__22;
  return G__10490;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10489) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10489)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__10494 = o;
    if (G__10494) {
      var bit__4201__auto__ = G__10494.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4201__auto__ || G__10494.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10494.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10494);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10494);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3539__auto__ = !(o == null);
    if (and__3539__auto__) {
      var G__10498 = o;
      if (G__10498) {
        var bit__4201__auto__ = G__10498.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4201__auto__ || G__10498.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__10498.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10498);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10498);
      }
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__10499__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10500 = ret;
            var G__10501 = cljs.core.first.call(null, ks);
            var G__10502 = cljs.core.next.call(null, ks);
            coll = G__10500;
            k = G__10501;
            ks = G__10502;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10499 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10499__delegate.call(this, coll, k, ks);
    };
    G__10499.cljs$lang$maxFixedArity = 2;
    G__10499.cljs$lang$applyTo = function(arglist__10503) {
      var coll = cljs.core.first(arglist__10503);
      arglist__10503 = cljs.core.next(arglist__10503);
      var k = cljs.core.first(arglist__10503);
      var ks = cljs.core.rest(arglist__10503);
      return G__10499__delegate(coll, k, ks);
    };
    G__10499.cljs$core$IFn$_invoke$arity$variadic = G__10499__delegate;
    return G__10499;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10505 = x;
    if (G__10505) {
      var bit__4201__auto__ = G__10505.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4201__auto__ || G__10505.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10505.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10505);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__10505);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10507 = x;
    if (G__10507) {
      var bit__4201__auto__ = G__10507.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4201__auto__ || G__10507.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10507.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10507);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__10507);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10509 = x;
  if (G__10509) {
    var bit__4201__auto__ = G__10509.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4201__auto__ || G__10509.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10509.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10509);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__10509);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10511 = x;
  if (G__10511) {
    var bit__4201__auto__ = G__10511.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4201__auto__ || G__10511.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10511.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10511);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__10511);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__10513 = x;
  if (G__10513) {
    var bit__4201__auto__ = G__10513.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4201__auto__ || G__10513.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10513.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10513);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__10513);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10515 = x;
  if (G__10515) {
    var bit__4201__auto__ = G__10515.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4201__auto__ || G__10515.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10515.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10515);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__10515);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10517 = x;
    if (G__10517) {
      var bit__4201__auto__ = G__10517.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4201__auto__ || G__10517.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10517.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10517);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__10517);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10519 = x;
  if (G__10519) {
    var bit__4201__auto__ = G__10519.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4201__auto__ || G__10519.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10519);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__10519);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10521 = x;
  if (G__10521) {
    var bit__4194__auto__ = G__10521.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4194__auto__ || G__10521.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj10525 = {};
    return obj10525;
  };
  var js_obj__1 = function() {
    var G__10526__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__10526 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10526__delegate.call(this, keyvals);
    };
    G__10526.cljs$lang$maxFixedArity = 0;
    G__10526.cljs$lang$applyTo = function(arglist__10527) {
      var keyvals = cljs.core.seq(arglist__10527);
      return G__10526__delegate(keyvals);
    };
    G__10526.cljs$core$IFn$_invoke$arity$variadic = G__10526__delegate;
    return G__10526;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10528 = i__$1 + 1;
      var G__10529 = j__$1 + 1;
      var G__10530 = len__$1 - 1;
      i__$1 = G__10528;
      j__$1 = G__10529;
      len__$1 = G__10530;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10531 = i__$1 - 1;
      var G__10532 = j__$1 - 1;
      var G__10533 = len__$1 - 1;
      i__$1 = G__10531;
      j__$1 = G__10532;
      len__$1 = G__10533;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10535 = {};
  return obj10535;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10537 = s;
    if (G__10537) {
      var bit__4201__auto__ = G__10537.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4201__auto__ || G__10537.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10537.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10537);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10537);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10539 = s;
  if (G__10539) {
    var bit__4201__auto__ = G__10539.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4201__auto__ || G__10539.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10539.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10539);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__10539);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3551__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3551__auto__) {
    return or__3551__auto__;
  } else {
    var G__10543 = f;
    if (G__10543) {
      var bit__4201__auto__ = G__10543.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4201__auto__ || G__10543.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10543.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10543);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__10543);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__10544__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__10545 = cljs.core.conj.call(null, s, x__$1);
              var G__10546 = etc;
              s = G__10545;
              xs = G__10546;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__10544 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10544__delegate.call(this, x, y, more);
    };
    G__10544.cljs$lang$maxFixedArity = 2;
    G__10544.cljs$lang$applyTo = function(arglist__10547) {
      var x = cljs.core.first(arglist__10547);
      arglist__10547 = cljs.core.next(arglist__10547);
      var y = cljs.core.first(arglist__10547);
      var more = cljs.core.rest(arglist__10547);
      return G__10544__delegate(x, y, more);
    };
    G__10544.cljs$core$IFn$_invoke$arity$variadic = G__10544__delegate;
    return G__10544;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3551__auto__ = cljs.core.seq.call(null, coll);
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__10549 = x;
            if (G__10549) {
              var bit__4194__auto__ = G__10549.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4194__auto__ || G__10549.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__10550 = xs;
        var G__10551 = ys;
        var G__10552 = len;
        var G__10553 = n + 1;
        xs = G__10550;
        ys = G__10551;
        len = G__10552;
        n = G__10553;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10554 = nval;
          var G__10555 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10554;
          coll__$1 = G__10555;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__10558 = coll;
      if (G__10558) {
        var bit__4194__auto__ = G__10558.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4194__auto__ || G__10558.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__10559 = coll;
      if (G__10559) {
        var bit__4194__auto__ = G__10559.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4194__auto__ || G__10559.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__10560 = null;
    var G__10560__0 = function() {
      return f.call(null);
    };
    var G__10560__1 = function(x) {
      return x;
    };
    var G__10560__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__10560 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__10560__0.call(this);
        case 1:
          return G__10560__1.call(this, x);
        case 2:
          return G__10560__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10560.cljs$core$IFn$_invoke$arity$0 = G__10560__0;
    G__10560.cljs$core$IFn$_invoke$arity$1 = G__10560__1;
    G__10560.cljs$core$IFn$_invoke$arity$2 = G__10560__2;
    return G__10560;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__10561__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__10561 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10561__delegate.call(this, x, y, more);
    };
    G__10561.cljs$lang$maxFixedArity = 2;
    G__10561.cljs$lang$applyTo = function(arglist__10562) {
      var x = cljs.core.first(arglist__10562);
      arglist__10562 = cljs.core.next(arglist__10562);
      var y = cljs.core.first(arglist__10562);
      var more = cljs.core.rest(arglist__10562);
      return G__10561__delegate(x, y, more);
    };
    G__10561.cljs$core$IFn$_invoke$arity$variadic = G__10561__delegate;
    return G__10561;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__10563__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__10563 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10563__delegate.call(this, x, y, more);
    };
    G__10563.cljs$lang$maxFixedArity = 2;
    G__10563.cljs$lang$applyTo = function(arglist__10564) {
      var x = cljs.core.first(arglist__10564);
      arglist__10564 = cljs.core.next(arglist__10564);
      var y = cljs.core.first(arglist__10564);
      var more = cljs.core.rest(arglist__10564);
      return G__10563__delegate(x, y, more);
    };
    G__10563.cljs$core$IFn$_invoke$arity$variadic = G__10563__delegate;
    return G__10563;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__10565__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__10565 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10565__delegate.call(this, x, y, more);
    };
    G__10565.cljs$lang$maxFixedArity = 2;
    G__10565.cljs$lang$applyTo = function(arglist__10566) {
      var x = cljs.core.first(arglist__10566);
      arglist__10566 = cljs.core.next(arglist__10566);
      var y = cljs.core.first(arglist__10566);
      var more = cljs.core.rest(arglist__10566);
      return G__10565__delegate(x, y, more);
    };
    G__10565.cljs$core$IFn$_invoke$arity$variadic = G__10565__delegate;
    return G__10565;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__10567__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__10567 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10567__delegate.call(this, x, y, more);
    };
    G__10567.cljs$lang$maxFixedArity = 2;
    G__10567.cljs$lang$applyTo = function(arglist__10568) {
      var x = cljs.core.first(arglist__10568);
      arglist__10568 = cljs.core.next(arglist__10568);
      var y = cljs.core.first(arglist__10568);
      var more = cljs.core.rest(arglist__10568);
      return G__10567__delegate(x, y, more);
    };
    G__10567.cljs$core$IFn$_invoke$arity$variadic = G__10567__delegate;
    return G__10567;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__10569__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__10570 = y;
            var G__10571 = cljs.core.first.call(null, more);
            var G__10572 = cljs.core.next.call(null, more);
            x = G__10570;
            y = G__10571;
            more = G__10572;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10569 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10569__delegate.call(this, x, y, more);
    };
    G__10569.cljs$lang$maxFixedArity = 2;
    G__10569.cljs$lang$applyTo = function(arglist__10573) {
      var x = cljs.core.first(arglist__10573);
      arglist__10573 = cljs.core.next(arglist__10573);
      var y = cljs.core.first(arglist__10573);
      var more = cljs.core.rest(arglist__10573);
      return G__10569__delegate(x, y, more);
    };
    G__10569.cljs$core$IFn$_invoke$arity$variadic = G__10569__delegate;
    return G__10569;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__10574__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10575 = y;
            var G__10576 = cljs.core.first.call(null, more);
            var G__10577 = cljs.core.next.call(null, more);
            x = G__10575;
            y = G__10576;
            more = G__10577;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10574 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10574__delegate.call(this, x, y, more);
    };
    G__10574.cljs$lang$maxFixedArity = 2;
    G__10574.cljs$lang$applyTo = function(arglist__10578) {
      var x = cljs.core.first(arglist__10578);
      arglist__10578 = cljs.core.next(arglist__10578);
      var y = cljs.core.first(arglist__10578);
      var more = cljs.core.rest(arglist__10578);
      return G__10574__delegate(x, y, more);
    };
    G__10574.cljs$core$IFn$_invoke$arity$variadic = G__10574__delegate;
    return G__10574;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__10579__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__10580 = y;
            var G__10581 = cljs.core.first.call(null, more);
            var G__10582 = cljs.core.next.call(null, more);
            x = G__10580;
            y = G__10581;
            more = G__10582;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10579 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10579__delegate.call(this, x, y, more);
    };
    G__10579.cljs$lang$maxFixedArity = 2;
    G__10579.cljs$lang$applyTo = function(arglist__10583) {
      var x = cljs.core.first(arglist__10583);
      arglist__10583 = cljs.core.next(arglist__10583);
      var y = cljs.core.first(arglist__10583);
      var more = cljs.core.rest(arglist__10583);
      return G__10579__delegate(x, y, more);
    };
    G__10579.cljs$core$IFn$_invoke$arity$variadic = G__10579__delegate;
    return G__10579;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__10584__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__10585 = y;
            var G__10586 = cljs.core.first.call(null, more);
            var G__10587 = cljs.core.next.call(null, more);
            x = G__10585;
            y = G__10586;
            more = G__10587;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10584 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10584__delegate.call(this, x, y, more);
    };
    G__10584.cljs$lang$maxFixedArity = 2;
    G__10584.cljs$lang$applyTo = function(arglist__10588) {
      var x = cljs.core.first(arglist__10588);
      arglist__10588 = cljs.core.next(arglist__10588);
      var y = cljs.core.first(arglist__10588);
      var more = cljs.core.rest(arglist__10588);
      return G__10584__delegate(x, y, more);
    };
    G__10584.cljs$core$IFn$_invoke$arity$variadic = G__10584__delegate;
    return G__10584;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3858__auto__ = x;
    var y__3859__auto__ = y;
    return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
  };
  var max__3 = function() {
    var G__10589__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3858__auto__ = x;
        var y__3859__auto__ = y;
        return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
      }(), more);
    };
    var G__10589 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10589__delegate.call(this, x, y, more);
    };
    G__10589.cljs$lang$maxFixedArity = 2;
    G__10589.cljs$lang$applyTo = function(arglist__10590) {
      var x = cljs.core.first(arglist__10590);
      arglist__10590 = cljs.core.next(arglist__10590);
      var y = cljs.core.first(arglist__10590);
      var more = cljs.core.rest(arglist__10590);
      return G__10589__delegate(x, y, more);
    };
    G__10589.cljs$core$IFn$_invoke$arity$variadic = G__10589__delegate;
    return G__10589;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3865__auto__ = x;
    var y__3866__auto__ = y;
    return x__3865__auto__ < y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  };
  var min__3 = function() {
    var G__10591__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3865__auto__ = x;
        var y__3866__auto__ = y;
        return x__3865__auto__ < y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
      }(), more);
    };
    var G__10591 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10591__delegate.call(this, x, y, more);
    };
    G__10591.cljs$lang$maxFixedArity = 2;
    G__10591.cljs$lang$applyTo = function(arglist__10592) {
      var x = cljs.core.first(arglist__10592);
      arglist__10592 = cljs.core.next(arglist__10592);
      var y = cljs.core.first(arglist__10592);
      var more = cljs.core.rest(arglist__10592);
      return G__10591__delegate(x, y, more);
    };
    G__10591.cljs$core$IFn$_invoke$arity$variadic = G__10591__delegate;
    return G__10591;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__10593__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__10593 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10593__delegate.call(this, x, y, more);
    };
    G__10593.cljs$lang$maxFixedArity = 2;
    G__10593.cljs$lang$applyTo = function(arglist__10594) {
      var x = cljs.core.first(arglist__10594);
      arglist__10594 = cljs.core.next(arglist__10594);
      var y = cljs.core.first(arglist__10594);
      var more = cljs.core.rest(arglist__10594);
      return G__10593__delegate(x, y, more);
    };
    G__10593.cljs$core$IFn$_invoke$arity$variadic = G__10593__delegate;
    return G__10593;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__10595__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__10595 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10595__delegate.call(this, x, y, more);
    };
    G__10595.cljs$lang$maxFixedArity = 2;
    G__10595.cljs$lang$applyTo = function(arglist__10596) {
      var x = cljs.core.first(arglist__10596);
      arglist__10596 = cljs.core.next(arglist__10596);
      var y = cljs.core.first(arglist__10596);
      var more = cljs.core.rest(arglist__10596);
      return G__10595__delegate(x, y, more);
    };
    G__10595.cljs$core$IFn$_invoke$arity$variadic = G__10595__delegate;
    return G__10595;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__10597__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__10597 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10597__delegate.call(this, x, y, more);
    };
    G__10597.cljs$lang$maxFixedArity = 2;
    G__10597.cljs$lang$applyTo = function(arglist__10598) {
      var x = cljs.core.first(arglist__10598);
      arglist__10598 = cljs.core.next(arglist__10598);
      var y = cljs.core.first(arglist__10598);
      var more = cljs.core.rest(arglist__10598);
      return G__10597__delegate(x, y, more);
    };
    G__10597.cljs$core$IFn$_invoke$arity$variadic = G__10597__delegate;
    return G__10597;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__10599__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__10599 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10599__delegate.call(this, x, y, more);
    };
    G__10599.cljs$lang$maxFixedArity = 2;
    G__10599.cljs$lang$applyTo = function(arglist__10600) {
      var x = cljs.core.first(arglist__10600);
      arglist__10600 = cljs.core.next(arglist__10600);
      var y = cljs.core.first(arglist__10600);
      var more = cljs.core.rest(arglist__10600);
      return G__10599__delegate(x, y, more);
    };
    G__10599.cljs$core$IFn$_invoke$arity$variadic = G__10599__delegate;
    return G__10599;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__10601__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__10601 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10601__delegate.call(this, x, y, more);
    };
    G__10601.cljs$lang$maxFixedArity = 2;
    G__10601.cljs$lang$applyTo = function(arglist__10602) {
      var x = cljs.core.first(arglist__10602);
      arglist__10602 = cljs.core.next(arglist__10602);
      var y = cljs.core.first(arglist__10602);
      var more = cljs.core.rest(arglist__10602);
      return G__10601__delegate(x, y, more);
    };
    G__10601.cljs$core$IFn$_invoke$arity$variadic = G__10601__delegate;
    return G__10601;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__10603__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__10603 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10603__delegate.call(this, x, y, more);
    };
    G__10603.cljs$lang$maxFixedArity = 2;
    G__10603.cljs$lang$applyTo = function(arglist__10604) {
      var x = cljs.core.first(arglist__10604);
      arglist__10604 = cljs.core.next(arglist__10604);
      var y = cljs.core.first(arglist__10604);
      var more = cljs.core.rest(arglist__10604);
      return G__10603__delegate(x, y, more);
    };
    G__10603.cljs$core$IFn$_invoke$arity$variadic = G__10603__delegate;
    return G__10603;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__10605__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__10605 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10605__delegate.call(this, x, y, more);
    };
    G__10605.cljs$lang$maxFixedArity = 2;
    G__10605.cljs$lang$applyTo = function(arglist__10606) {
      var x = cljs.core.first(arglist__10606);
      arglist__10606 = cljs.core.next(arglist__10606);
      var y = cljs.core.first(arglist__10606);
      var more = cljs.core.rest(arglist__10606);
      return G__10605__delegate(x, y, more);
    };
    G__10605.cljs$core$IFn$_invoke$arity$variadic = G__10605__delegate;
    return G__10605;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__10607__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10608 = y;
            var G__10609 = cljs.core.first.call(null, more);
            var G__10610 = cljs.core.next.call(null, more);
            x = G__10608;
            y = G__10609;
            more = G__10610;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10607 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10607__delegate.call(this, x, y, more);
    };
    G__10607.cljs$lang$maxFixedArity = 2;
    G__10607.cljs$lang$applyTo = function(arglist__10611) {
      var x = cljs.core.first(arglist__10611);
      arglist__10611 = cljs.core.next(arglist__10611);
      var y = cljs.core.first(arglist__10611);
      var more = cljs.core.rest(arglist__10611);
      return G__10607__delegate(x, y, more);
    };
    G__10607.cljs$core$IFn$_invoke$arity$variadic = G__10607__delegate;
    return G__10607;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10612 = n__$1 - 1;
      var G__10613 = cljs.core.next.call(null, xs);
      n__$1 = G__10612;
      xs = G__10613;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__10614__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__10615 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__10616 = cljs.core.next.call(null, more);
          sb = G__10615;
          more = G__10616;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__10614 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10614__delegate.call(this, x, ys);
    };
    G__10614.cljs$lang$maxFixedArity = 1;
    G__10614.cljs$lang$applyTo = function(arglist__10617) {
      var x = cljs.core.first(arglist__10617);
      var ys = cljs.core.rest(arglist__10617);
      return G__10614__delegate(x, ys);
    };
    G__10614.cljs$core$IFn$_invoke$arity$variadic = G__10614__delegate;
    return G__10614;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__10618 = cljs.core.next.call(null, xs);
            var G__10619 = cljs.core.next.call(null, ys);
            xs = G__10618;
            ys = G__10619;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10620 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__10621 = cljs.core.next.call(null, s);
        res = G__10620;
        s = G__10621;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__10622 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__10623 = cljs.core.next.call(null, s);
      h = G__10622;
      s = G__10623;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__10624 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__10625 = cljs.core.next.call(null, s__$1);
      h = G__10624;
      s__$1 = G__10625;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__10632_10638 = cljs.core.seq.call(null, fn_map);
  var chunk__10633_10639 = null;
  var count__10634_10640 = 0;
  var i__10635_10641 = 0;
  while (true) {
    if (i__10635_10641 < count__10634_10640) {
      var vec__10636_10642 = cljs.core._nth.call(null, chunk__10633_10639, i__10635_10641);
      var key_name_10643 = cljs.core.nth.call(null, vec__10636_10642, 0, null);
      var f_10644 = cljs.core.nth.call(null, vec__10636_10642, 1, null);
      var str_name_10645 = cljs.core.name.call(null, key_name_10643);
      obj[str_name_10645] = f_10644;
      var G__10646 = seq__10632_10638;
      var G__10647 = chunk__10633_10639;
      var G__10648 = count__10634_10640;
      var G__10649 = i__10635_10641 + 1;
      seq__10632_10638 = G__10646;
      chunk__10633_10639 = G__10647;
      count__10634_10640 = G__10648;
      i__10635_10641 = G__10649;
      continue;
    } else {
      var temp__4126__auto___10650 = cljs.core.seq.call(null, seq__10632_10638);
      if (temp__4126__auto___10650) {
        var seq__10632_10651__$1 = temp__4126__auto___10650;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10632_10651__$1)) {
          var c__4307__auto___10652 = cljs.core.chunk_first.call(null, seq__10632_10651__$1);
          var G__10653 = cljs.core.chunk_rest.call(null, seq__10632_10651__$1);
          var G__10654 = c__4307__auto___10652;
          var G__10655 = cljs.core.count.call(null, c__4307__auto___10652);
          var G__10656 = 0;
          seq__10632_10638 = G__10653;
          chunk__10633_10639 = G__10654;
          count__10634_10640 = G__10655;
          i__10635_10641 = G__10656;
          continue;
        } else {
          var vec__10637_10657 = cljs.core.first.call(null, seq__10632_10651__$1);
          var key_name_10658 = cljs.core.nth.call(null, vec__10637_10657, 0, null);
          var f_10659 = cljs.core.nth.call(null, vec__10637_10657, 1, null);
          var str_name_10660 = cljs.core.name.call(null, key_name_10658);
          obj[str_name_10660] = f_10659;
          var G__10661 = cljs.core.next.call(null, seq__10632_10651__$1);
          var G__10662 = null;
          var G__10663 = 0;
          var G__10664 = 0;
          seq__10632_10638 = G__10661;
          chunk__10633_10639 = G__10662;
          count__10634_10640 = G__10663;
          i__10635_10641 = G__10664;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10666 = coll;
  if (G__10666) {
    var bit__4201__auto__ = G__10666.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4201__auto__ || G__10666.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__10666.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10666);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__10666);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__10667 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__10667;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__10668 = i - 1;
        var G__10669 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__10668;
        r = G__10669;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__10670) {
    var xs = cljs.core.seq(arglist__10670);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3551__auto__ = coll == null;
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var G__10674 = coll;
      if (G__10674) {
        var bit__4194__auto__ = G__10674.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4194__auto__ || G__10674.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10676 = x;
  if (G__10676) {
    var bit__4201__auto__ = G__10676.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4201__auto__ || G__10676.cljs$core$IList$) {
      return true;
    } else {
      if (!G__10676.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10676);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__10676);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3962__auto__ = self__._hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10678 = null;
  var G__10678__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__10678__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__10678 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10678__2.call(this, self__, coll);
      case 3:
        return G__10678__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10678.cljs$core$IFn$_invoke$arity$2 = G__10678__2;
  G__10678.cljs$core$IFn$_invoke$arity$3 = G__10678__3;
  return G__10678;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10677) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10677)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__10680 = x;
    if (G__10680) {
      var bit__4194__auto__ = G__10680.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4194__auto__ || G__10680.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10681 = ls.sval();
        ls = G__10681;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__10683 = s;
    if (G__10683) {
      var bit__4194__auto__ = G__10683.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4194__auto__ || G__10683.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__10684 = cljs.core.next.call(null, s__$1);
      s__$1 = G__10684;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_10685 = 0;
  var xs_10686 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_10686) {
      ret[i_10685] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_10686));
      var G__10687 = i_10685 + 1;
      var G__10688 = cljs.core.next.call(null, xs_10686);
      i_10685 = G__10687;
      xs_10686 = G__10688;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10689 = i + 1;
          var G__10690 = cljs.core.next.call(null, s__$1);
          i = G__10689;
          s__$1 = G__10690;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___10691 = size;
      var i_10692 = 0;
      while (true) {
        if (i_10692 < n__4407__auto___10691) {
          a[i_10692] = init_val_or_seq;
          var G__10693 = i_10692 + 1;
          i_10692 = G__10693;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10694 = i + 1;
          var G__10695 = cljs.core.next.call(null, s__$1);
          i = G__10694;
          s__$1 = G__10695;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___10696 = size;
      var i_10697 = 0;
      while (true) {
        if (i_10697 < n__4407__auto___10696) {
          a[i_10697] = init_val_or_seq;
          var G__10698 = i_10697 + 1;
          i_10697 = G__10698;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10699 = i + 1;
          var G__10700 = cljs.core.next.call(null, s__$1);
          i = G__10699;
          s__$1 = G__10700;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___10701 = size;
      var i_10702 = 0;
      while (true) {
        if (i_10702 < n__4407__auto___10701) {
          a[i_10702] = init_val_or_seq;
          var G__10703 = i_10702 + 1;
          i_10702 = G__10703;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10704 = i + 1;
          var G__10705 = cljs.core.next.call(null, s__$1);
          i = G__10704;
          s__$1 = G__10705;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4407__auto___10706 = size;
      var i_10707 = 0;
      while (true) {
        if (i_10707 < n__4407__auto___10706) {
          a[i_10707] = init_val_or_seq;
          var G__10708 = i_10707 + 1;
          i_10707 = G__10708;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__10709 = cljs.core.next.call(null, s__$1);
        var G__10710 = i - 1;
        var G__10711 = sum + 1;
        s__$1 = G__10709;
        i = G__10710;
        sum = G__10711;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__10712__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__10712 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10712__delegate.call(this, x, y, zs);
    };
    G__10712.cljs$lang$maxFixedArity = 2;
    G__10712.cljs$lang$applyTo = function(arglist__10713) {
      var x = cljs.core.first(arglist__10713);
      arglist__10713 = cljs.core.next(arglist__10713);
      var y = cljs.core.first(arglist__10713);
      var zs = cljs.core.rest(arglist__10713);
      return G__10712__delegate(x, y, zs);
    };
    G__10712.cljs$core$IFn$_invoke$arity$variadic = G__10712__delegate;
    return G__10712;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__10714__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__10714 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10714__delegate.call(this, a, b, c, d, more);
    };
    G__10714.cljs$lang$maxFixedArity = 4;
    G__10714.cljs$lang$applyTo = function(arglist__10715) {
      var a = cljs.core.first(arglist__10715);
      arglist__10715 = cljs.core.next(arglist__10715);
      var b = cljs.core.first(arglist__10715);
      arglist__10715 = cljs.core.next(arglist__10715);
      var c = cljs.core.first(arglist__10715);
      arglist__10715 = cljs.core.next(arglist__10715);
      var d = cljs.core.first(arglist__10715);
      var more = cljs.core.rest(arglist__10715);
      return G__10714__delegate(a, b, c, d, more);
    };
    G__10714.cljs$core$IFn$_invoke$arity$variadic = G__10714__delegate;
    return G__10714;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__10716__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10717 = ntcoll;
          var G__10718 = cljs.core.first.call(null, vals);
          var G__10719 = cljs.core.next.call(null, vals);
          tcoll = G__10717;
          val = G__10718;
          vals = G__10719;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10716 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10716__delegate.call(this, tcoll, val, vals);
    };
    G__10716.cljs$lang$maxFixedArity = 2;
    G__10716.cljs$lang$applyTo = function(arglist__10720) {
      var tcoll = cljs.core.first(arglist__10720);
      arglist__10720 = cljs.core.next(arglist__10720);
      var val = cljs.core.first(arglist__10720);
      var vals = cljs.core.rest(arglist__10720);
      return G__10716__delegate(tcoll, val, vals);
    };
    G__10716.cljs$core$IFn$_invoke$arity$variadic = G__10716__delegate;
    return G__10716;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__10721__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__10722 = ntcoll;
          var G__10723 = cljs.core.first.call(null, kvs);
          var G__10724 = cljs.core.second.call(null, kvs);
          var G__10725 = cljs.core.nnext.call(null, kvs);
          tcoll = G__10722;
          key = G__10723;
          val = G__10724;
          kvs = G__10725;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10721 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10721__delegate.call(this, tcoll, key, val, kvs);
    };
    G__10721.cljs$lang$maxFixedArity = 3;
    G__10721.cljs$lang$applyTo = function(arglist__10726) {
      var tcoll = cljs.core.first(arglist__10726);
      arglist__10726 = cljs.core.next(arglist__10726);
      var key = cljs.core.first(arglist__10726);
      arglist__10726 = cljs.core.next(arglist__10726);
      var val = cljs.core.first(arglist__10726);
      var kvs = cljs.core.rest(arglist__10726);
      return G__10721__delegate(tcoll, key, val, kvs);
    };
    G__10721.cljs$core$IFn$_invoke$arity$variadic = G__10721__delegate;
    return G__10721;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__10727__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__10728 = ntcoll;
          var G__10729 = cljs.core.first.call(null, ks);
          var G__10730 = cljs.core.next.call(null, ks);
          tcoll = G__10728;
          key = G__10729;
          ks = G__10730;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10727 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10727__delegate.call(this, tcoll, key, ks);
    };
    G__10727.cljs$lang$maxFixedArity = 2;
    G__10727.cljs$lang$applyTo = function(arglist__10731) {
      var tcoll = cljs.core.first(arglist__10731);
      arglist__10731 = cljs.core.next(arglist__10731);
      var key = cljs.core.first(arglist__10731);
      var ks = cljs.core.rest(arglist__10731);
      return G__10727__delegate(tcoll, key, ks);
    };
    G__10727.cljs$core$IFn$_invoke$arity$variadic = G__10727__delegate;
    return G__10727;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__10732__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__10733 = ntcoll;
          var G__10734 = cljs.core.first.call(null, vals);
          var G__10735 = cljs.core.next.call(null, vals);
          tcoll = G__10733;
          val = G__10734;
          vals = G__10735;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__10732 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10732__delegate.call(this, tcoll, val, vals);
    };
    G__10732.cljs$lang$maxFixedArity = 2;
    G__10732.cljs$lang$applyTo = function(arglist__10736) {
      var tcoll = cljs.core.first(arglist__10736);
      arglist__10736 = cljs.core.next(arglist__10736);
      var val = cljs.core.first(arglist__10736);
      var vals = cljs.core.rest(arglist__10736);
      return G__10732__delegate(tcoll, val, vals);
    };
    G__10732.cljs$core$IFn$_invoke$arity$variadic = G__10732__delegate;
    return G__10732;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4451 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4451);
      } else {
        return f.call(null, a4451);
      }
    } else {
      var b4452 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4451, b4452);
        } else {
          return f.call(null, a4451, b4452);
        }
      } else {
        var c4453 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4451, b4452, c4453);
          } else {
            return f.call(null, a4451, b4452, c4453);
          }
        } else {
          var d4454 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4451, b4452, c4453, d4454);
            } else {
              return f.call(null, a4451, b4452, c4453, d4454);
            }
          } else {
            var e4455 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4451, b4452, c4453, d4454, e4455);
              } else {
                return f.call(null, a4451, b4452, c4453, d4454, e4455);
              }
            } else {
              var f4456 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4451, b4452, c4453, d4454, e4455, f4456);
                } else {
                  return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456);
                }
              } else {
                var g4457 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4451, b4452, c4453, d4454, e4455, f4456, g4457);
                  } else {
                    return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457);
                  }
                } else {
                  var h4458 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458);
                    } else {
                      return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458);
                    }
                  } else {
                    var i4459 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459);
                      } else {
                        return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459);
                      }
                    } else {
                      var j4460 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460);
                        } else {
                          return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460);
                        }
                      } else {
                        var k4461 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461);
                          } else {
                            return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461);
                          }
                        } else {
                          var l4462 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462);
                            } else {
                              return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462);
                            }
                          } else {
                            var m4463 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463);
                              } else {
                                return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463);
                              }
                            } else {
                              var n4464 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464);
                                } else {
                                  return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464);
                                }
                              } else {
                                var o4465 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465);
                                  } else {
                                    return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465);
                                  }
                                } else {
                                  var p4466 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466);
                                    } else {
                                      return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466);
                                    }
                                  } else {
                                    var q4467 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467);
                                      } else {
                                        return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467);
                                      }
                                    } else {
                                      var r4468 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468);
                                        } else {
                                          return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468);
                                        }
                                      } else {
                                        var s4469 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469);
                                          } else {
                                            return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469);
                                          }
                                        } else {
                                          var t4470 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469, t4470);
                                            } else {
                                              return f.call(null, a4451, b4452, c4453, d4454, e4455, f4456, g4457, h4458, i4459, j4460, k4461, l4462, m4463, n4464, o4465, p4466, q4467, r4468, s4469, t4470);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__10737__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__10737 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10737__delegate.call(this, f, a, b, c, d, args);
    };
    G__10737.cljs$lang$maxFixedArity = 5;
    G__10737.cljs$lang$applyTo = function(arglist__10738) {
      var f = cljs.core.first(arglist__10738);
      arglist__10738 = cljs.core.next(arglist__10738);
      var a = cljs.core.first(arglist__10738);
      arglist__10738 = cljs.core.next(arglist__10738);
      var b = cljs.core.first(arglist__10738);
      arglist__10738 = cljs.core.next(arglist__10738);
      var c = cljs.core.first(arglist__10738);
      arglist__10738 = cljs.core.next(arglist__10738);
      var d = cljs.core.first(arglist__10738);
      var args = cljs.core.rest(arglist__10738);
      return G__10737__delegate(f, a, b, c, d, args);
    };
    G__10737.cljs$core$IFn$_invoke$arity$variadic = G__10737__delegate;
    return G__10737;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__10739__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__10739 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10739__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__10739.cljs$lang$maxFixedArity = 6;
    G__10739.cljs$lang$applyTo = function(arglist__10740) {
      var obj = cljs.core.first(arglist__10740);
      arglist__10740 = cljs.core.next(arglist__10740);
      var f = cljs.core.first(arglist__10740);
      arglist__10740 = cljs.core.next(arglist__10740);
      var a = cljs.core.first(arglist__10740);
      arglist__10740 = cljs.core.next(arglist__10740);
      var b = cljs.core.first(arglist__10740);
      arglist__10740 = cljs.core.next(arglist__10740);
      var c = cljs.core.first(arglist__10740);
      arglist__10740 = cljs.core.next(arglist__10740);
      var d = cljs.core.first(arglist__10740);
      var args = cljs.core.rest(arglist__10740);
      return G__10739__delegate(obj, f, a, b, c, d, args);
    };
    G__10739.cljs$core$IFn$_invoke$arity$variadic = G__10739__delegate;
    return G__10739;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__10741__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__10741 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10741__delegate.call(this, x, y, more);
    };
    G__10741.cljs$lang$maxFixedArity = 2;
    G__10741.cljs$lang$applyTo = function(arglist__10742) {
      var x = cljs.core.first(arglist__10742);
      arglist__10742 = cljs.core.next(arglist__10742);
      var y = cljs.core.first(arglist__10742);
      var more = cljs.core.rest(arglist__10742);
      return G__10741__delegate(x, y, more);
    };
    G__10741.cljs$core$IFn$_invoke$arity$variadic = G__10741__delegate;
    return G__10741;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t10746 !== "undefined") {
  } else {
    cljs.core.t10746 = function(nil_iter, meta10747) {
      this.nil_iter = nil_iter;
      this.meta10747 = meta10747;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t10746.cljs$lang$type = true;
    cljs.core.t10746.cljs$lang$ctorStr = "cljs.core/t10746";
    cljs.core.t10746.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/t10746");
    };
    cljs.core.t10746.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t10746.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t10746.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t10746.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10748) {
      var self__ = this;
      var _10748__$1 = this;
      return self__.meta10747;
    };
    cljs.core.t10746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10748, meta10747__$1) {
      var self__ = this;
      var _10748__$1 = this;
      return new cljs.core.t10746(self__.nil_iter, meta10747__$1);
    };
    cljs.core.__GT_t10746 = function __GT_t10746(nil_iter__$1, meta10747) {
      return new cljs.core.t10746(nil_iter__$1, meta10747);
    };
  }
  return new cljs.core.t10746(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.SeqIter = function(seq) {
  this.seq = seq;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return!(self__.seq == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var first = cljs.core.first.call(null, self__.seq);
  self__.seq = cljs.core.next.call(null, self__.seq);
  return first;
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(seq) {
  return new cljs.core.SeqIter(seq);
};
cljs.core.seq_iter = function seq_iter(seq) {
  return new cljs.core.SeqIter(seq);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, cljs.core.seq.call(null, coll));
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = !(lt.stepper == null);
      if (and__3539__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3539__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__10749 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__10749;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4407__auto___10750 = self__.iters.length;
  var i_10751 = 0;
  while (true) {
    if (i_10751 < n__4407__auto___10750) {
      cljs.core.next[i_10751] = self__.iters[i_10751].next();
      var G__10752 = i_10751 + 1;
      i_10751 = G__10752;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var _ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = !(lt.stepper == null);
      if (and__3539__auto__) {
        return cljs.core.iter.hasNext();
      } else {
        return and__3539__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, cljs.core.iter.next()))) {
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform, iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__10753_10757 = cljs.core.seq.call(null, colls);
  var chunk__10754_10758 = null;
  var count__10755_10759 = 0;
  var i__10756_10760 = 0;
  while (true) {
    if (i__10756_10760 < count__10755_10759) {
      var coll_10761 = cljs.core._nth.call(null, chunk__10754_10758, i__10756_10760);
      iters.push(cljs.core.iter.call(null, coll_10761));
      var G__10762 = seq__10753_10757;
      var G__10763 = chunk__10754_10758;
      var G__10764 = count__10755_10759;
      var G__10765 = i__10756_10760 + 1;
      seq__10753_10757 = G__10762;
      chunk__10754_10758 = G__10763;
      count__10755_10759 = G__10764;
      i__10756_10760 = G__10765;
      continue;
    } else {
      var temp__4126__auto___10766 = cljs.core.seq.call(null, seq__10753_10757);
      if (temp__4126__auto___10766) {
        var seq__10753_10767__$1 = temp__4126__auto___10766;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10753_10767__$1)) {
          var c__4307__auto___10768 = cljs.core.chunk_first.call(null, seq__10753_10767__$1);
          var G__10769 = cljs.core.chunk_rest.call(null, seq__10753_10767__$1);
          var G__10770 = c__4307__auto___10768;
          var G__10771 = cljs.core.count.call(null, c__4307__auto___10768);
          var G__10772 = 0;
          seq__10753_10757 = G__10769;
          chunk__10754_10758 = G__10770;
          count__10755_10759 = G__10771;
          i__10756_10760 = G__10772;
          continue;
        } else {
          var coll_10773 = cljs.core.first.call(null, seq__10753_10767__$1);
          iters.push(cljs.core.iter.call(null, coll_10773));
          var G__10774 = cljs.core.next.call(null, seq__10753_10767__$1);
          var G__10775 = null;
          var G__10776 = 0;
          var G__10777 = 0;
          seq__10753_10757 = G__10774;
          chunk__10754_10758 = G__10775;
          count__10755_10759 = G__10776;
          i__10756_10760 = G__10777;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3551__auto__ = cljs.core.seq.call(null, coll);
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__10778__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__10778 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10778__delegate.call(this, xform, coll, colls);
    };
    G__10778.cljs$lang$maxFixedArity = 2;
    G__10778.cljs$lang$applyTo = function(arglist__10779) {
      var xform = cljs.core.first(arglist__10779);
      arglist__10779 = cljs.core.next(arglist__10779);
      var coll = cljs.core.first(arglist__10779);
      var colls = cljs.core.rest(arglist__10779);
      return G__10778__delegate(xform, coll, colls);
    };
    G__10778.cljs$core$IFn$_invoke$arity$variadic = G__10778__delegate;
    return G__10778;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10780 = pred;
        var G__10781 = cljs.core.next.call(null, coll);
        pred = G__10780;
        coll = G__10781;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3551__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        var G__10782 = pred;
        var G__10783 = cljs.core.next.call(null, coll);
        pred = G__10782;
        coll = G__10783;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10784 = null;
    var G__10784__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__10784__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__10784__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__10784__3 = function() {
      var G__10785__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__10785 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__10785__delegate.call(this, x, y, zs);
      };
      G__10785.cljs$lang$maxFixedArity = 2;
      G__10785.cljs$lang$applyTo = function(arglist__10786) {
        var x = cljs.core.first(arglist__10786);
        arglist__10786 = cljs.core.next(arglist__10786);
        var y = cljs.core.first(arglist__10786);
        var zs = cljs.core.rest(arglist__10786);
        return G__10785__delegate(x, y, zs);
      };
      G__10785.cljs$core$IFn$_invoke$arity$variadic = G__10785__delegate;
      return G__10785;
    }();
    G__10784 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10784__0.call(this);
        case 1:
          return G__10784__1.call(this, x);
        case 2:
          return G__10784__2.call(this, x, y);
        default:
          return G__10784__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10784.cljs$lang$maxFixedArity = 2;
    G__10784.cljs$lang$applyTo = G__10784__3.cljs$lang$applyTo;
    G__10784.cljs$core$IFn$_invoke$arity$0 = G__10784__0;
    G__10784.cljs$core$IFn$_invoke$arity$1 = G__10784__1;
    G__10784.cljs$core$IFn$_invoke$arity$2 = G__10784__2;
    G__10784.cljs$core$IFn$_invoke$arity$variadic = G__10784__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__10784;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10787__delegate = function(args) {
      return x;
    };
    var G__10787 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10787__delegate.call(this, args);
    };
    G__10787.cljs$lang$maxFixedArity = 0;
    G__10787.cljs$lang$applyTo = function(arglist__10788) {
      var args = cljs.core.seq(arglist__10788);
      return G__10787__delegate(args);
    };
    G__10787.cljs$core$IFn$_invoke$arity$variadic = G__10787__delegate;
    return G__10787;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10789 = null;
      var G__10789__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__10789__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__10789__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__10789__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__10789__4 = function() {
        var G__10790__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__10790 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10790__delegate.call(this, x, y, z, args);
        };
        G__10790.cljs$lang$maxFixedArity = 3;
        G__10790.cljs$lang$applyTo = function(arglist__10791) {
          var x = cljs.core.first(arglist__10791);
          arglist__10791 = cljs.core.next(arglist__10791);
          var y = cljs.core.first(arglist__10791);
          arglist__10791 = cljs.core.next(arglist__10791);
          var z = cljs.core.first(arglist__10791);
          var args = cljs.core.rest(arglist__10791);
          return G__10790__delegate(x, y, z, args);
        };
        G__10790.cljs$core$IFn$_invoke$arity$variadic = G__10790__delegate;
        return G__10790;
      }();
      G__10789 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10789__0.call(this);
          case 1:
            return G__10789__1.call(this, x);
          case 2:
            return G__10789__2.call(this, x, y);
          case 3:
            return G__10789__3.call(this, x, y, z);
          default:
            return G__10789__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10789.cljs$lang$maxFixedArity = 3;
      G__10789.cljs$lang$applyTo = G__10789__4.cljs$lang$applyTo;
      G__10789.cljs$core$IFn$_invoke$arity$0 = G__10789__0;
      G__10789.cljs$core$IFn$_invoke$arity$1 = G__10789__1;
      G__10789.cljs$core$IFn$_invoke$arity$2 = G__10789__2;
      G__10789.cljs$core$IFn$_invoke$arity$3 = G__10789__3;
      G__10789.cljs$core$IFn$_invoke$arity$variadic = G__10789__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10789;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10792 = null;
      var G__10792__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__10792__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__10792__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__10792__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__10792__4 = function() {
        var G__10793__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__10793 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10793__delegate.call(this, x, y, z, args);
        };
        G__10793.cljs$lang$maxFixedArity = 3;
        G__10793.cljs$lang$applyTo = function(arglist__10794) {
          var x = cljs.core.first(arglist__10794);
          arglist__10794 = cljs.core.next(arglist__10794);
          var y = cljs.core.first(arglist__10794);
          arglist__10794 = cljs.core.next(arglist__10794);
          var z = cljs.core.first(arglist__10794);
          var args = cljs.core.rest(arglist__10794);
          return G__10793__delegate(x, y, z, args);
        };
        G__10793.cljs$core$IFn$_invoke$arity$variadic = G__10793__delegate;
        return G__10793;
      }();
      G__10792 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10792__0.call(this);
          case 1:
            return G__10792__1.call(this, x);
          case 2:
            return G__10792__2.call(this, x, y);
          case 3:
            return G__10792__3.call(this, x, y, z);
          default:
            return G__10792__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10792.cljs$lang$maxFixedArity = 3;
      G__10792.cljs$lang$applyTo = G__10792__4.cljs$lang$applyTo;
      G__10792.cljs$core$IFn$_invoke$arity$0 = G__10792__0;
      G__10792.cljs$core$IFn$_invoke$arity$1 = G__10792__1;
      G__10792.cljs$core$IFn$_invoke$arity$2 = G__10792__2;
      G__10792.cljs$core$IFn$_invoke$arity$3 = G__10792__3;
      G__10792.cljs$core$IFn$_invoke$arity$variadic = G__10792__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10792;
    }();
  };
  var comp__4 = function() {
    var G__10795__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__10796__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__10797 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__10798 = cljs.core.next.call(null, fs__$2);
                ret = G__10797;
                fs__$2 = G__10798;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__10796 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__10796__delegate.call(this, args);
          };
          G__10796.cljs$lang$maxFixedArity = 0;
          G__10796.cljs$lang$applyTo = function(arglist__10799) {
            var args = cljs.core.seq(arglist__10799);
            return G__10796__delegate(args);
          };
          G__10796.cljs$core$IFn$_invoke$arity$variadic = G__10796__delegate;
          return G__10796;
        }();
      }(fs__$1);
    };
    var G__10795 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10795__delegate.call(this, f1, f2, f3, fs);
    };
    G__10795.cljs$lang$maxFixedArity = 3;
    G__10795.cljs$lang$applyTo = function(arglist__10800) {
      var f1 = cljs.core.first(arglist__10800);
      arglist__10800 = cljs.core.next(arglist__10800);
      var f2 = cljs.core.first(arglist__10800);
      arglist__10800 = cljs.core.next(arglist__10800);
      var f3 = cljs.core.first(arglist__10800);
      var fs = cljs.core.rest(arglist__10800);
      return G__10795__delegate(f1, f2, f3, fs);
    };
    G__10795.cljs$core$IFn$_invoke$arity$variadic = G__10795__delegate;
    return G__10795;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10801__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__10801 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10801__delegate.call(this, args);
      };
      G__10801.cljs$lang$maxFixedArity = 0;
      G__10801.cljs$lang$applyTo = function(arglist__10802) {
        var args = cljs.core.seq(arglist__10802);
        return G__10801__delegate(args);
      };
      G__10801.cljs$core$IFn$_invoke$arity$variadic = G__10801__delegate;
      return G__10801;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10803__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__10803 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10803__delegate.call(this, args);
      };
      G__10803.cljs$lang$maxFixedArity = 0;
      G__10803.cljs$lang$applyTo = function(arglist__10804) {
        var args = cljs.core.seq(arglist__10804);
        return G__10803__delegate(args);
      };
      G__10803.cljs$core$IFn$_invoke$arity$variadic = G__10803__delegate;
      return G__10803;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10805__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__10805 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10805__delegate.call(this, args);
      };
      G__10805.cljs$lang$maxFixedArity = 0;
      G__10805.cljs$lang$applyTo = function(arglist__10806) {
        var args = cljs.core.seq(arglist__10806);
        return G__10805__delegate(args);
      };
      G__10805.cljs$core$IFn$_invoke$arity$variadic = G__10805__delegate;
      return G__10805;
    }();
  };
  var partial__5 = function() {
    var G__10807__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10808__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__10808 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__10808__delegate.call(this, args);
        };
        G__10808.cljs$lang$maxFixedArity = 0;
        G__10808.cljs$lang$applyTo = function(arglist__10809) {
          var args = cljs.core.seq(arglist__10809);
          return G__10808__delegate(args);
        };
        G__10808.cljs$core$IFn$_invoke$arity$variadic = G__10808__delegate;
        return G__10808;
      }();
    };
    var G__10807 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10807__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__10807.cljs$lang$maxFixedArity = 4;
    G__10807.cljs$lang$applyTo = function(arglist__10810) {
      var f = cljs.core.first(arglist__10810);
      arglist__10810 = cljs.core.next(arglist__10810);
      var arg1 = cljs.core.first(arglist__10810);
      arglist__10810 = cljs.core.next(arglist__10810);
      var arg2 = cljs.core.first(arglist__10810);
      arglist__10810 = cljs.core.next(arglist__10810);
      var arg3 = cljs.core.first(arglist__10810);
      var more = cljs.core.rest(arglist__10810);
      return G__10807__delegate(f, arg1, arg2, arg3, more);
    };
    G__10807.cljs$core$IFn$_invoke$arity$variadic = G__10807__delegate;
    return G__10807;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10811 = null;
      var G__10811__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__10811__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__10811__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__10811__4 = function() {
        var G__10812__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__10812 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10812__delegate.call(this, a, b, c, ds);
        };
        G__10812.cljs$lang$maxFixedArity = 3;
        G__10812.cljs$lang$applyTo = function(arglist__10813) {
          var a = cljs.core.first(arglist__10813);
          arglist__10813 = cljs.core.next(arglist__10813);
          var b = cljs.core.first(arglist__10813);
          arglist__10813 = cljs.core.next(arglist__10813);
          var c = cljs.core.first(arglist__10813);
          var ds = cljs.core.rest(arglist__10813);
          return G__10812__delegate(a, b, c, ds);
        };
        G__10812.cljs$core$IFn$_invoke$arity$variadic = G__10812__delegate;
        return G__10812;
      }();
      G__10811 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10811__1.call(this, a);
          case 2:
            return G__10811__2.call(this, a, b);
          case 3:
            return G__10811__3.call(this, a, b, c);
          default:
            return G__10811__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10811.cljs$lang$maxFixedArity = 3;
      G__10811.cljs$lang$applyTo = G__10811__4.cljs$lang$applyTo;
      G__10811.cljs$core$IFn$_invoke$arity$1 = G__10811__1;
      G__10811.cljs$core$IFn$_invoke$arity$2 = G__10811__2;
      G__10811.cljs$core$IFn$_invoke$arity$3 = G__10811__3;
      G__10811.cljs$core$IFn$_invoke$arity$variadic = G__10811__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10811;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10814 = null;
      var G__10814__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10814__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__10814__4 = function() {
        var G__10815__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__10815 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10815__delegate.call(this, a, b, c, ds);
        };
        G__10815.cljs$lang$maxFixedArity = 3;
        G__10815.cljs$lang$applyTo = function(arglist__10816) {
          var a = cljs.core.first(arglist__10816);
          arglist__10816 = cljs.core.next(arglist__10816);
          var b = cljs.core.first(arglist__10816);
          arglist__10816 = cljs.core.next(arglist__10816);
          var c = cljs.core.first(arglist__10816);
          var ds = cljs.core.rest(arglist__10816);
          return G__10815__delegate(a, b, c, ds);
        };
        G__10815.cljs$core$IFn$_invoke$arity$variadic = G__10815__delegate;
        return G__10815;
      }();
      G__10814 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10814__2.call(this, a, b);
          case 3:
            return G__10814__3.call(this, a, b, c);
          default:
            return G__10814__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10814.cljs$lang$maxFixedArity = 3;
      G__10814.cljs$lang$applyTo = G__10814__4.cljs$lang$applyTo;
      G__10814.cljs$core$IFn$_invoke$arity$2 = G__10814__2;
      G__10814.cljs$core$IFn$_invoke$arity$3 = G__10814__3;
      G__10814.cljs$core$IFn$_invoke$arity$variadic = G__10814__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10814;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10817 = null;
      var G__10817__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__10817__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__10817__4 = function() {
        var G__10818__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__10818 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10818__delegate.call(this, a, b, c, ds);
        };
        G__10818.cljs$lang$maxFixedArity = 3;
        G__10818.cljs$lang$applyTo = function(arglist__10819) {
          var a = cljs.core.first(arglist__10819);
          arglist__10819 = cljs.core.next(arglist__10819);
          var b = cljs.core.first(arglist__10819);
          arglist__10819 = cljs.core.next(arglist__10819);
          var c = cljs.core.first(arglist__10819);
          var ds = cljs.core.rest(arglist__10819);
          return G__10818__delegate(a, b, c, ds);
        };
        G__10818.cljs$core$IFn$_invoke$arity$variadic = G__10818__delegate;
        return G__10818;
      }();
      G__10817 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10817__2.call(this, a, b);
          case 3:
            return G__10817__3.call(this, a, b, c);
          default:
            return G__10817__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10817.cljs$lang$maxFixedArity = 3;
      G__10817.cljs$lang$applyTo = G__10817__4.cljs$lang$applyTo;
      G__10817.cljs$core$IFn$_invoke$arity$2 = G__10817__2;
      G__10817.cljs$core$IFn$_invoke$arity$3 = G__10817__3;
      G__10817.cljs$core$IFn$_invoke$arity$variadic = G__10817__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10817;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___10820 = size;
          var i_10821 = 0;
          while (true) {
            if (i_10821 < n__4407__auto___10820) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_10821, cljs.core._nth.call(null, c, i_10821)));
              var G__10822 = i_10821 + 1;
              i_10821 = G__10822;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__10823 = null;
        var G__10823__0 = function() {
          return f1.call(null);
        };
        var G__10823__1 = function(result) {
          return f1.call(null, result);
        };
        var G__10823__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__10823 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10823__0.call(this);
            case 1:
              return G__10823__1.call(this, result);
            case 2:
              return G__10823__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10823.cljs$core$IFn$_invoke$arity$0 = G__10823__0;
        G__10823.cljs$core$IFn$_invoke$arity$1 = G__10823__1;
        G__10823.cljs$core$IFn$_invoke$arity$2 = G__10823__2;
        return G__10823;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___10824 = size;
          var i_10825 = 0;
          while (true) {
            if (i_10825 < n__4407__auto___10824) {
              var x_10826 = f.call(null, cljs.core._nth.call(null, c, i_10825));
              if (x_10826 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_10826);
              }
              var G__10827 = i_10825 + 1;
              i_10825 = G__10827;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10828 = cljs.core.seq.call(null, self__.watches);
  var chunk__10829 = null;
  var count__10830 = 0;
  var i__10831 = 0;
  while (true) {
    if (i__10831 < count__10830) {
      var vec__10832 = cljs.core._nth.call(null, chunk__10829, i__10831);
      var key = cljs.core.nth.call(null, vec__10832, 0, null);
      var f = cljs.core.nth.call(null, vec__10832, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10834 = seq__10828;
      var G__10835 = chunk__10829;
      var G__10836 = count__10830;
      var G__10837 = i__10831 + 1;
      seq__10828 = G__10834;
      chunk__10829 = G__10835;
      count__10830 = G__10836;
      i__10831 = G__10837;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__10828);
      if (temp__4126__auto__) {
        var seq__10828__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10828__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__10828__$1);
          var G__10838 = cljs.core.chunk_rest.call(null, seq__10828__$1);
          var G__10839 = c__4307__auto__;
          var G__10840 = cljs.core.count.call(null, c__4307__auto__);
          var G__10841 = 0;
          seq__10828 = G__10838;
          chunk__10829 = G__10839;
          count__10830 = G__10840;
          i__10831 = G__10841;
          continue;
        } else {
          var vec__10833 = cljs.core.first.call(null, seq__10828__$1);
          var key = cljs.core.nth.call(null, vec__10833, 0, null);
          var f = cljs.core.nth.call(null, vec__10833, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10842 = cljs.core.next.call(null, seq__10828__$1);
          var G__10843 = null;
          var G__10844 = 0;
          var G__10845 = 0;
          seq__10828 = G__10842;
          chunk__10829 = G__10843;
          count__10830 = G__10844;
          i__10831 = G__10845;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10849__delegate = function(x, p__10846) {
      var map__10848 = p__10846;
      var map__10848__$1 = cljs.core.seq_QMARK_.call(null, map__10848) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10848) : map__10848;
      var validator = cljs.core.get.call(null, map__10848__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__10848__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10849 = function(x, var_args) {
      var p__10846 = null;
      if (arguments.length > 1) {
        p__10846 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10849__delegate.call(this, x, p__10846);
    };
    G__10849.cljs$lang$maxFixedArity = 1;
    G__10849.cljs$lang$applyTo = function(arglist__10850) {
      var x = cljs.core.first(arglist__10850);
      var p__10846 = cljs.core.rest(arglist__10850);
      return G__10849__delegate(x, p__10846);
    };
    G__10849.cljs$core$IFn$_invoke$arity$variadic = G__10849__delegate;
    return G__10849;
  }();
  atom = function(x, var_args) {
    var p__10846 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__10851__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__10851 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10851__delegate.call(this, a, f, x, y, more);
    };
    G__10851.cljs$lang$maxFixedArity = 4;
    G__10851.cljs$lang$applyTo = function(arglist__10852) {
      var a = cljs.core.first(arglist__10852);
      arglist__10852 = cljs.core.next(arglist__10852);
      var f = cljs.core.first(arglist__10852);
      arglist__10852 = cljs.core.next(arglist__10852);
      var x = cljs.core.first(arglist__10852);
      arglist__10852 = cljs.core.next(arglist__10852);
      var y = cljs.core.first(arglist__10852);
      var more = cljs.core.rest(arglist__10852);
      return G__10851__delegate(a, f, x, y, more);
    };
    G__10851.cljs$core$IFn$_invoke$arity$variadic = G__10851__delegate;
    return G__10851;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__10853 = null;
          var G__10853__0 = function() {
            return f1.call(null);
          };
          var G__10853__1 = function(result) {
            return f1.call(null, result);
          };
          var G__10853__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__10853 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10853__0.call(this);
              case 1:
                return G__10853__1.call(this, result);
              case 2:
                return G__10853__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10853.cljs$core$IFn$_invoke$arity$0 = G__10853__0;
          G__10853.cljs$core$IFn$_invoke$arity$1 = G__10853__1;
          G__10853.cljs$core$IFn$_invoke$arity$2 = G__10853__2;
          return G__10853;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4407__auto___10854 = size;
            var i_10855 = 0;
            while (true) {
              if (i_10855 < n__4407__auto___10854) {
                var x_10856 = f.call(null, idx + i_10855, cljs.core._nth.call(null, c, i_10855));
                if (x_10856 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_10856);
                }
                var G__10857 = i_10855 + 1;
                i_10855 = G__10857;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            return p.call(null, y);
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__10864__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__10864 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10864__delegate.call(this, x, y, z, args);
        };
        G__10864.cljs$lang$maxFixedArity = 3;
        G__10864.cljs$lang$applyTo = function(arglist__10865) {
          var x = cljs.core.first(arglist__10865);
          arglist__10865 = cljs.core.next(arglist__10865);
          var y = cljs.core.first(arglist__10865);
          arglist__10865 = cljs.core.next(arglist__10865);
          var z = cljs.core.first(arglist__10865);
          var args = cljs.core.rest(arglist__10865);
          return G__10864__delegate(x, y, z, args);
        };
        G__10864.cljs$core$IFn$_invoke$arity$variadic = G__10864__delegate;
        return G__10864;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__10866__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10858_SHARP_) {
            var and__3539__auto__ = p1.call(null, p1__10858_SHARP_);
            if (cljs.core.truth_(and__3539__auto__)) {
              return p2.call(null, p1__10858_SHARP_);
            } else {
              return and__3539__auto__;
            }
          }, args));
        };
        var G__10866 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10866__delegate.call(this, x, y, z, args);
        };
        G__10866.cljs$lang$maxFixedArity = 3;
        G__10866.cljs$lang$applyTo = function(arglist__10867) {
          var x = cljs.core.first(arglist__10867);
          arglist__10867 = cljs.core.next(arglist__10867);
          var y = cljs.core.first(arglist__10867);
          arglist__10867 = cljs.core.next(arglist__10867);
          var z = cljs.core.first(arglist__10867);
          var args = cljs.core.rest(arglist__10867);
          return G__10866__delegate(x, y, z, args);
        };
        G__10866.cljs$core$IFn$_invoke$arity$variadic = G__10866__delegate;
        return G__10866;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3539__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3539__auto__)) {
            var and__3539__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3539__auto____$1)) {
              var and__3539__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3539__auto____$2)) {
                var and__3539__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3539__auto____$3)) {
                  var and__3539__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$4)) {
                    var and__3539__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3539__auto____$5)) {
                      var and__3539__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3539__auto____$6)) {
                        var and__3539__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3539__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3539__auto____$7;
                        }
                      } else {
                        return and__3539__auto____$6;
                      }
                    } else {
                      return and__3539__auto____$5;
                    }
                  } else {
                    return and__3539__auto____$4;
                  }
                } else {
                  return and__3539__auto____$3;
                }
              } else {
                return and__3539__auto____$2;
              }
            } else {
              return and__3539__auto____$1;
            }
          } else {
            return and__3539__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__10868__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__10859_SHARP_) {
            var and__3539__auto__ = p1.call(null, p1__10859_SHARP_);
            if (cljs.core.truth_(and__3539__auto__)) {
              var and__3539__auto____$1 = p2.call(null, p1__10859_SHARP_);
              if (cljs.core.truth_(and__3539__auto____$1)) {
                return p3.call(null, p1__10859_SHARP_);
              } else {
                return and__3539__auto____$1;
              }
            } else {
              return and__3539__auto__;
            }
          }, args));
        };
        var G__10868 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10868__delegate.call(this, x, y, z, args);
        };
        G__10868.cljs$lang$maxFixedArity = 3;
        G__10868.cljs$lang$applyTo = function(arglist__10869) {
          var x = cljs.core.first(arglist__10869);
          arglist__10869 = cljs.core.next(arglist__10869);
          var y = cljs.core.first(arglist__10869);
          arglist__10869 = cljs.core.next(arglist__10869);
          var z = cljs.core.first(arglist__10869);
          var args = cljs.core.rest(arglist__10869);
          return G__10868__delegate(x, y, z, args);
        };
        G__10868.cljs$core$IFn$_invoke$arity$variadic = G__10868__delegate;
        return G__10868;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__10870__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__10860_SHARP_) {
                return p1__10860_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__10861_SHARP_) {
                var and__3539__auto__ = p1__10861_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3539__auto__)) {
                  return p1__10861_SHARP_.call(null, y);
                } else {
                  return and__3539__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__10862_SHARP_) {
                var and__3539__auto__ = p1__10862_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3539__auto__)) {
                  var and__3539__auto____$1 = p1__10862_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3539__auto____$1)) {
                    return p1__10862_SHARP_.call(null, z);
                  } else {
                    return and__3539__auto____$1;
                  }
                } else {
                  return and__3539__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__10871__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__10863_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__10863_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__10871 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__10871__delegate.call(this, x, y, z, args);
            };
            G__10871.cljs$lang$maxFixedArity = 3;
            G__10871.cljs$lang$applyTo = function(arglist__10872) {
              var x = cljs.core.first(arglist__10872);
              arglist__10872 = cljs.core.next(arglist__10872);
              var y = cljs.core.first(arglist__10872);
              arglist__10872 = cljs.core.next(arglist__10872);
              var z = cljs.core.first(arglist__10872);
              var args = cljs.core.rest(arglist__10872);
              return G__10871__delegate(x, y, z, args);
            };
            G__10871.cljs$core$IFn$_invoke$arity$variadic = G__10871__delegate;
            return G__10871;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__10870 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10870__delegate.call(this, p1, p2, p3, ps);
    };
    G__10870.cljs$lang$maxFixedArity = 3;
    G__10870.cljs$lang$applyTo = function(arglist__10873) {
      var p1 = cljs.core.first(arglist__10873);
      arglist__10873 = cljs.core.next(arglist__10873);
      var p2 = cljs.core.first(arglist__10873);
      arglist__10873 = cljs.core.next(arglist__10873);
      var p3 = cljs.core.first(arglist__10873);
      var ps = cljs.core.rest(arglist__10873);
      return G__10870__delegate(p1, p2, p3, ps);
    };
    G__10870.cljs$core$IFn$_invoke$arity$variadic = G__10870__delegate;
    return G__10870;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3551__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3551__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__10880__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__10880 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10880__delegate.call(this, x, y, z, args);
        };
        G__10880.cljs$lang$maxFixedArity = 3;
        G__10880.cljs$lang$applyTo = function(arglist__10881) {
          var x = cljs.core.first(arglist__10881);
          arglist__10881 = cljs.core.next(arglist__10881);
          var y = cljs.core.first(arglist__10881);
          arglist__10881 = cljs.core.next(arglist__10881);
          var z = cljs.core.first(arglist__10881);
          var args = cljs.core.rest(arglist__10881);
          return G__10880__delegate(x, y, z, args);
        };
        G__10880.cljs$core$IFn$_invoke$arity$variadic = G__10880__delegate;
        return G__10880;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10882__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3551__auto__) {
              return function(p1__10874_SHARP_) {
                var or__3551__auto____$1 = p1.call(null, p1__10874_SHARP_);
                if (cljs.core.truth_(or__3551__auto____$1)) {
                  return or__3551__auto____$1;
                } else {
                  return p2.call(null, p1__10874_SHARP_);
                }
              };
            }(or__3551__auto__), args);
          }
        };
        var G__10882 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10882__delegate.call(this, x, y, z, args);
        };
        G__10882.cljs$lang$maxFixedArity = 3;
        G__10882.cljs$lang$applyTo = function(arglist__10883) {
          var x = cljs.core.first(arglist__10883);
          arglist__10883 = cljs.core.next(arglist__10883);
          var y = cljs.core.first(arglist__10883);
          arglist__10883 = cljs.core.next(arglist__10883);
          var z = cljs.core.first(arglist__10883);
          var args = cljs.core.rest(arglist__10883);
          return G__10882__delegate(x, y, z, args);
        };
        G__10882.cljs$core$IFn$_invoke$arity$variadic = G__10882__delegate;
        return G__10882;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3551__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            var or__3551__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3551__auto____$2)) {
              return or__3551__auto____$2;
            } else {
              var or__3551__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3551__auto____$3)) {
                return or__3551__auto____$3;
              } else {
                var or__3551__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3551__auto____$4)) {
                  return or__3551__auto____$4;
                } else {
                  var or__3551__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3551__auto____$5)) {
                    return or__3551__auto____$5;
                  } else {
                    var or__3551__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3551__auto____$6)) {
                      return or__3551__auto____$6;
                    } else {
                      var or__3551__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3551__auto____$7)) {
                        return or__3551__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10884__delegate = function(x, y, z, args) {
          var or__3551__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3551__auto__) {
              return function(p1__10875_SHARP_) {
                var or__3551__auto____$1 = p1.call(null, p1__10875_SHARP_);
                if (cljs.core.truth_(or__3551__auto____$1)) {
                  return or__3551__auto____$1;
                } else {
                  var or__3551__auto____$2 = p2.call(null, p1__10875_SHARP_);
                  if (cljs.core.truth_(or__3551__auto____$2)) {
                    return or__3551__auto____$2;
                  } else {
                    return p3.call(null, p1__10875_SHARP_);
                  }
                }
              };
            }(or__3551__auto__), args);
          }
        };
        var G__10884 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10884__delegate.call(this, x, y, z, args);
        };
        G__10884.cljs$lang$maxFixedArity = 3;
        G__10884.cljs$lang$applyTo = function(arglist__10885) {
          var x = cljs.core.first(arglist__10885);
          arglist__10885 = cljs.core.next(arglist__10885);
          var y = cljs.core.first(arglist__10885);
          arglist__10885 = cljs.core.next(arglist__10885);
          var z = cljs.core.first(arglist__10885);
          var args = cljs.core.rest(arglist__10885);
          return G__10884__delegate(x, y, z, args);
        };
        G__10884.cljs$core$IFn$_invoke$arity$variadic = G__10884__delegate;
        return G__10884;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__10886__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__10876_SHARP_) {
                return p1__10876_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__10877_SHARP_) {
                var or__3551__auto__ = p1__10877_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3551__auto__)) {
                  return or__3551__auto__;
                } else {
                  return p1__10877_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__10878_SHARP_) {
                var or__3551__auto__ = p1__10878_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3551__auto__)) {
                  return or__3551__auto__;
                } else {
                  var or__3551__auto____$1 = p1__10878_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3551__auto____$1)) {
                    return or__3551__auto____$1;
                  } else {
                    return p1__10878_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__10887__delegate = function(x, y, z, args) {
              var or__3551__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3551__auto__)) {
                return or__3551__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3551__auto__, ps__$1) {
                  return function(p1__10879_SHARP_) {
                    return cljs.core.some.call(null, p1__10879_SHARP_, args);
                  };
                }(or__3551__auto__, ps__$1), ps__$1);
              }
            };
            var G__10887 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__10887__delegate.call(this, x, y, z, args);
            };
            G__10887.cljs$lang$maxFixedArity = 3;
            G__10887.cljs$lang$applyTo = function(arglist__10888) {
              var x = cljs.core.first(arglist__10888);
              arglist__10888 = cljs.core.next(arglist__10888);
              var y = cljs.core.first(arglist__10888);
              arglist__10888 = cljs.core.next(arglist__10888);
              var z = cljs.core.first(arglist__10888);
              var args = cljs.core.rest(arglist__10888);
              return G__10887__delegate(x, y, z, args);
            };
            G__10887.cljs$core$IFn$_invoke$arity$variadic = G__10887__delegate;
            return G__10887;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__10886 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10886__delegate.call(this, p1, p2, p3, ps);
    };
    G__10886.cljs$lang$maxFixedArity = 3;
    G__10886.cljs$lang$applyTo = function(arglist__10889) {
      var p1 = cljs.core.first(arglist__10889);
      arglist__10889 = cljs.core.next(arglist__10889);
      var p2 = cljs.core.first(arglist__10889);
      arglist__10889 = cljs.core.next(arglist__10889);
      var p3 = cljs.core.first(arglist__10889);
      var ps = cljs.core.rest(arglist__10889);
      return G__10886__delegate(p1, p2, p3, ps);
    };
    G__10886.cljs$core$IFn$_invoke$arity$variadic = G__10886__delegate;
    return G__10886;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__10891 = null;
        var G__10891__0 = function() {
          return f1.call(null);
        };
        var G__10891__1 = function(result) {
          return f1.call(null, result);
        };
        var G__10891__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__10891__3 = function() {
          var G__10892__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__10892 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__10892__delegate.call(this, result, input, inputs);
          };
          G__10892.cljs$lang$maxFixedArity = 2;
          G__10892.cljs$lang$applyTo = function(arglist__10893) {
            var result = cljs.core.first(arglist__10893);
            arglist__10893 = cljs.core.next(arglist__10893);
            var input = cljs.core.first(arglist__10893);
            var inputs = cljs.core.rest(arglist__10893);
            return G__10892__delegate(result, input, inputs);
          };
          G__10892.cljs$core$IFn$_invoke$arity$variadic = G__10892__delegate;
          return G__10892;
        }();
        G__10891 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__10891__0.call(this);
            case 1:
              return G__10891__1.call(this, result);
            case 2:
              return G__10891__2.call(this, result, input);
            default:
              return G__10891__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10891.cljs$lang$maxFixedArity = 2;
        G__10891.cljs$lang$applyTo = G__10891__3.cljs$lang$applyTo;
        G__10891.cljs$core$IFn$_invoke$arity$0 = G__10891__0;
        G__10891.cljs$core$IFn$_invoke$arity$1 = G__10891__1;
        G__10891.cljs$core$IFn$_invoke$arity$2 = G__10891__2;
        G__10891.cljs$core$IFn$_invoke$arity$variadic = G__10891__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__10891;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___10894 = size;
          var i_10895 = 0;
          while (true) {
            if (i_10895 < n__4407__auto___10894) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_10895)));
              var G__10896 = i_10895 + 1;
              i_10895 = G__10896;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__10897__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__10890_SHARP_) {
          return cljs.core.apply.call(null, f, p1__10890_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__10897 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10897__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10897.cljs$lang$maxFixedArity = 4;
    G__10897.cljs$lang$applyTo = function(arglist__10898) {
      var f = cljs.core.first(arglist__10898);
      arglist__10898 = cljs.core.next(arglist__10898);
      var c1 = cljs.core.first(arglist__10898);
      arglist__10898 = cljs.core.next(arglist__10898);
      var c2 = cljs.core.first(arglist__10898);
      arglist__10898 = cljs.core.next(arglist__10898);
      var c3 = cljs.core.first(arglist__10898);
      var colls = cljs.core.rest(arglist__10898);
      return G__10897__delegate(f, c1, c2, c3, colls);
    };
    G__10897.cljs$core$IFn$_invoke$arity$variadic = G__10897__delegate;
    return G__10897;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__10899 = null;
          var G__10899__0 = function() {
            return f1.call(null);
          };
          var G__10899__1 = function(result) {
            return f1.call(null, result);
          };
          var G__10899__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__10899 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10899__0.call(this);
              case 1:
                return G__10899__1.call(this, result);
              case 2:
                return G__10899__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10899.cljs$core$IFn$_invoke$arity$0 = G__10899__0;
          G__10899.cljs$core$IFn$_invoke$arity$1 = G__10899__1;
          G__10899.cljs$core$IFn$_invoke$arity$2 = G__10899__2;
          return G__10899;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__10900 = null;
          var G__10900__0 = function() {
            return f1.call(null);
          };
          var G__10900__1 = function(result) {
            return f1.call(null, result);
          };
          var G__10900__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__10900 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10900__0.call(this);
              case 1:
                return G__10900__1.call(this, result);
              case 2:
                return G__10900__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10900.cljs$core$IFn$_invoke$arity$0 = G__10900__0;
          G__10900.cljs$core$IFn$_invoke$arity$1 = G__10900__1;
          G__10900.cljs$core$IFn$_invoke$arity$2 = G__10900__2;
          return G__10900;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__10901 = n__$1 - 1;
          var G__10902 = cljs.core.rest.call(null, s);
          n__$1 = G__10901;
          coll__$1 = G__10902;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__10903 = cljs.core.next.call(null, s);
      var G__10904 = cljs.core.next.call(null, lead);
      s = G__10903;
      lead = G__10904;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__10905 = null;
          var G__10905__0 = function() {
            return f1.call(null);
          };
          var G__10905__1 = function(result) {
            return f1.call(null, result);
          };
          var G__10905__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3539__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3539__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3539__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__10905 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10905__0.call(this);
              case 1:
                return G__10905__1.call(this, result);
              case 2:
                return G__10905__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10905.cljs$core$IFn$_invoke$arity$0 = G__10905__0;
          G__10905.cljs$core$IFn$_invoke$arity$1 = G__10905__1;
          G__10905.cljs$core$IFn$_invoke$arity$2 = G__10905__2;
          return G__10905;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = s;
          if (and__3539__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3539__auto__;
          }
        }())) {
          var G__10906 = pred__$1;
          var G__10907 = cljs.core.rest.call(null, s);
          pred__$1 = G__10906;
          coll__$1 = G__10907;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__10908__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__10908 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10908__delegate.call(this, c1, c2, colls);
    };
    G__10908.cljs$lang$maxFixedArity = 2;
    G__10908.cljs$lang$applyTo = function(arglist__10909) {
      var c1 = cljs.core.first(arglist__10909);
      arglist__10909 = cljs.core.next(arglist__10909);
      var c2 = cljs.core.first(arglist__10909);
      var colls = cljs.core.rest(arglist__10909);
      return G__10908__delegate(c1, c2, colls);
    };
    G__10908.cljs$core$IFn$_invoke$arity$variadic = G__10908__delegate;
    return G__10908;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__10910__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__10910 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10910__delegate.call(this, f, coll, colls);
    };
    G__10910.cljs$lang$maxFixedArity = 2;
    G__10910.cljs$lang$applyTo = function(arglist__10911) {
      var f = cljs.core.first(arglist__10911);
      arglist__10911 = cljs.core.next(arglist__10911);
      var coll = cljs.core.first(arglist__10911);
      var colls = cljs.core.rest(arglist__10911);
      return G__10910__delegate(f, coll, colls);
    };
    G__10910.cljs$core$IFn$_invoke$arity$variadic = G__10910__delegate;
    return G__10910;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__10912 = null;
        var G__10912__0 = function() {
          return f1.call(null);
        };
        var G__10912__1 = function(result) {
          return f1.call(null, result);
        };
        var G__10912__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__10912 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10912__0.call(this);
            case 1:
              return G__10912__1.call(this, result);
            case 2:
              return G__10912__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10912.cljs$core$IFn$_invoke$arity$0 = G__10912__0;
        G__10912.cljs$core$IFn$_invoke$arity$1 = G__10912__1;
        G__10912.cljs$core$IFn$_invoke$arity$2 = G__10912__2;
        return G__10912;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4407__auto___10913 = size;
          var i_10914 = 0;
          while (true) {
            if (i_10914 < n__4407__auto___10913) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_10914)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_10914));
              } else {
              }
              var G__10915 = i_10914 + 1;
              i_10914 = G__10915;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10916_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10916_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__10919 = to;
        if (G__10919) {
          var bit__4194__auto__ = G__10919.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4194__auto__ || G__10919.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__10920 = to;
      if (G__10920) {
        var bit__4194__auto__ = G__10920.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4194__auto__ || G__10920.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__10921__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__10921 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10921__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10921.cljs$lang$maxFixedArity = 4;
    G__10921.cljs$lang$applyTo = function(arglist__10922) {
      var f = cljs.core.first(arglist__10922);
      arglist__10922 = cljs.core.next(arglist__10922);
      var c1 = cljs.core.first(arglist__10922);
      arglist__10922 = cljs.core.next(arglist__10922);
      var c2 = cljs.core.first(arglist__10922);
      arglist__10922 = cljs.core.next(arglist__10922);
      var c3 = cljs.core.first(arglist__10922);
      var colls = cljs.core.rest(arglist__10922);
      return G__10921__delegate(f, c1, c2, c3, colls);
    };
    G__10921.cljs$core$IFn$_invoke$arity$variadic = G__10921__delegate;
    return G__10921;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__10924 = m__$1;
          if (G__10924) {
            var bit__4201__auto__ = G__10924.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4201__auto__ || G__10924.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__10924.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10924);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10924);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__10925 = sentinel;
            var G__10926 = m__$2;
            var G__10927 = cljs.core.next.call(null, ks__$1);
            sentinel = G__10925;
            m__$1 = G__10926;
            ks__$1 = G__10927;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__10928, v) {
  var vec__10930 = p__10928;
  var k = cljs.core.nth.call(null, vec__10930, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10930, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__10931, f) {
    var vec__10941 = p__10931;
    var k = cljs.core.nth.call(null, vec__10941, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10941, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__10932, f, a) {
    var vec__10942 = p__10932;
    var k = cljs.core.nth.call(null, vec__10942, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10942, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__10933, f, a, b) {
    var vec__10943 = p__10933;
    var k = cljs.core.nth.call(null, vec__10943, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10943, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__10934, f, a, b, c) {
    var vec__10944 = p__10934;
    var k = cljs.core.nth.call(null, vec__10944, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10944, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__10946__delegate = function(m, p__10935, f, a, b, c, args) {
      var vec__10945 = p__10935;
      var k = cljs.core.nth.call(null, vec__10945, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__10945, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__10946 = function(m, p__10935, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10946__delegate.call(this, m, p__10935, f, a, b, c, args);
    };
    G__10946.cljs$lang$maxFixedArity = 6;
    G__10946.cljs$lang$applyTo = function(arglist__10947) {
      var m = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var p__10935 = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var f = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var a = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var b = cljs.core.first(arglist__10947);
      arglist__10947 = cljs.core.next(arglist__10947);
      var c = cljs.core.first(arglist__10947);
      var args = cljs.core.rest(arglist__10947);
      return G__10946__delegate(m, p__10935, f, a, b, c, args);
    };
    G__10946.cljs$core$IFn$_invoke$arity$variadic = G__10946__delegate;
    return G__10946;
  }();
  update_in = function(m, p__10935, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__10935, f);
      case 4:
        return update_in__4.call(this, m, p__10935, f, a);
      case 5:
        return update_in__5.call(this, m, p__10935, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__10935, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__10935, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__10948 = ll - 5;
      var G__10949 = r;
      ll = G__10948;
      ret = G__10949;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__10950 = cljs.core.pv_aget.call(null, node, 0);
      var G__10951 = level - 5;
      node = G__10950;
      level = G__10951;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__10952 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__10953 = level - 5;
        node = G__10952;
        level = G__10953;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__10955 = j + 1;
              var G__10956 = init__$2;
              j = G__10955;
              init__$1 = G__10956;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__10957 = i + step_init[0];
        i = G__10957;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4407__auto___10958 = len;
    var i_10959 = 0;
    while (true) {
      if (i_10959 < n__4407__auto___10958) {
        new_tail[i_10959] = self__.tail[i_10959];
        var G__10960 = i_10959 + 1;
        i_10959 = G__10960;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10961 = null;
  var G__10961__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10961__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10961 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10961__2.call(this, self__, k);
      case 3:
        return G__10961__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10961.cljs$core$IFn$_invoke$arity$2 = G__10961__2;
  G__10961.cljs$core$IFn$_invoke$arity$3 = G__10961__3;
  return G__10961;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10954) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10954)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__10962 = i + 1;
        var G__10963 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__10962;
        out = G__10963;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10964) {
    var args = cljs.core.seq(arglist__10964);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3858__auto__ = self__.end;
    var y__3859__auto__ = v_pos + 1;
    return x__3858__auto__ > y__3859__auto__ ? x__3858__auto__ : y__3859__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__10966 = null;
  var G__10966__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10966__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10966 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10966__2.call(this, self__, k);
      case 3:
        return G__10966__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10966.cljs$core$IFn$_invoke$arity$2 = G__10966__2;
  G__10966.cljs$core$IFn$_invoke$arity$3 = G__10966__3;
  return G__10966;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10965) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10965)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10967 = meta;
      var G__10968 = v.v;
      var G__10969 = v.start + start;
      var G__10970 = v.start + end;
      var G__10971 = __hash;
      meta = G__10967;
      v = G__10968;
      start = G__10969;
      end = G__10970;
      __hash = G__10971;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj10975 = {};
    return obj10975;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__10976 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__10977 = level - 5;
        node = G__10976;
        level = G__10977;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10979 = null;
  var G__10979__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10979__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10979 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10979__2.call(this, self__, k);
      case 3:
        return G__10979__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10979.cljs$core$IFn$_invoke$arity$2 = G__10979__2;
  G__10979.cljs$core$IFn$_invoke$arity$3 = G__10979__3;
  return G__10979;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10978) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10978)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3551__auto__ = self__.front;
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3551__auto__ = self__.rear;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10980 = i + incr;
        i = G__10980;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10981 = i + 1;
      var G__10982 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__10981;
      out = G__10982;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj10986 = {};
    return obj10986;
  }();
  var l = ks.length;
  var i_10987 = 0;
  while (true) {
    if (i_10987 < l) {
      var k_10988 = ks[i_10987];
      new_obj[k_10988] = obj[k_10988];
      var G__10989 = i_10987 + 1;
      i_10987 = G__10989;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10992 = cljs.core.rest.call(null, keys__$1);
        var G__10993 = init__$2;
        keys__$1 = G__10992;
        init__$1 = G__10993;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__10990_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10990_SHARP_, self__.strobj[p1__10990_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10994 = null;
  var G__10994__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10994__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10994 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10994__2.call(this, self__, k);
      case 3:
        return G__10994__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10994.cljs$core$IFn$_invoke$arity$2 = G__10994__2;
  G__10994.cljs$core$IFn$_invoke$arity$3 = G__10994__3;
  return G__10994;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10991) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10991)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj10996 = {};
  return obj10996;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__10997 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__10997, 0, null);
    var v = cljs.core.nth.call(null, vec__10997, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__10998 = i + 2;
        i = G__10998;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__10999 = i + 2;
        i = G__10999;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__11000 = i + 2;
        i = G__11000;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11001 = i + 2;
        i = G__11001;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__11002 = i + 2;
        i = G__11002;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11003 = 0;
  while (true) {
    if (i_11003 < l) {
      narr[i_11003] = arr[i_11003];
      var G__11004 = i_11003 + 1;
      i_11003 = G__11004;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11006 = cljs.core.seq.call(null, coll);
  var chunk__11007 = null;
  var count__11008 = 0;
  var i__11009 = 0;
  while (true) {
    if (i__11009 < count__11008) {
      var vec__11010 = cljs.core._nth.call(null, chunk__11007, i__11009);
      var k = cljs.core.nth.call(null, vec__11010, 0, null);
      var v = cljs.core.nth.call(null, vec__11010, 1, null);
      f.call(null, v, k);
      var G__11015 = seq__11006;
      var G__11016 = chunk__11007;
      var G__11017 = count__11008;
      var G__11018 = i__11009 + 1;
      seq__11006 = G__11015;
      chunk__11007 = G__11016;
      count__11008 = G__11017;
      i__11009 = G__11018;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11006);
      if (temp__4126__auto__) {
        var seq__11006__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11006__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11006__$1);
          var G__11019 = cljs.core.chunk_rest.call(null, seq__11006__$1);
          var G__11020 = c__4307__auto__;
          var G__11021 = cljs.core.count.call(null, c__4307__auto__);
          var G__11022 = 0;
          seq__11006 = G__11019;
          chunk__11007 = G__11020;
          count__11008 = G__11021;
          i__11009 = G__11022;
          continue;
        } else {
          var vec__11011 = cljs.core.first.call(null, seq__11006__$1);
          var k = cljs.core.nth.call(null, vec__11011, 0, null);
          var v = cljs.core.nth.call(null, vec__11011, 1, null);
          f.call(null, v, k);
          var G__11023 = cljs.core.next.call(null, seq__11006__$1);
          var G__11024 = null;
          var G__11025 = 0;
          var G__11026 = 0;
          seq__11006 = G__11023;
          chunk__11007 = G__11024;
          count__11008 = G__11025;
          i__11009 = G__11026;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11027 = i + 2;
        var G__11028 = init__$2;
        i = G__11027;
        init__$1 = G__11028;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11013 = {};
    return obj11013;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__11029 = s + 2;
            var G__11030 = d;
            s = G__11029;
            d = G__11030;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11031 = s + 2;
            var G__11032 = d + 2;
            s = G__11031;
            d = G__11032;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11014 = cljs.core.aclone.call(null, self__.arr);
        G__11014[idx + 1] = v;
        return G__11014;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11033 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11034 = cljs.core.next.call(null, es);
          ret = G__11033;
          es = G__11034;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11035 = null;
  var G__11035__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11035__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11035 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11035__2.call(this, self__, k);
      case 3:
        return G__11035__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11035.cljs$core$IFn$_invoke$arity$2 = G__11035__2;
  G__11035.cljs$core$IFn$_invoke$arity$3 = G__11035__3;
  return G__11035;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11005) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11005)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11036 = i + 2;
        var G__11037 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__11036;
        ret = G__11037;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11038_11040 = self__.arr;
      G__11038_11040.pop();
      G__11038_11040.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11039 = o;
      if (G__11039) {
        var bit__4201__auto__ = G__11039.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4201__auto__ || G__11039.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11039.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11039);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11039);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11041 = cljs.core.next.call(null, es);
          var G__11042 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11041;
          tcoll__$2 = G__11042;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11043 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__11044 = i + 2;
      out = G__11043;
      i = G__11044;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11047 = cljs.core.aclone.call(null, arr);
    G__11047[i] = a;
    return G__11047;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11048 = cljs.core.aclone.call(null, arr);
    G__11048[i] = a;
    G__11048[j] = b;
    return G__11048;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11049 = i + 2;
        var G__11050 = init__$2;
        i = G__11049;
        init__$1 = G__11050;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11051 = 0;
        var j_11052 = 0;
        while (true) {
          if (i_11051 < 32) {
            if ((self__.bitmap >>> i_11051 & 1) === 0) {
              var G__11053 = i_11051 + 1;
              var G__11054 = j_11052;
              i_11051 = G__11053;
              j_11052 = G__11054;
              continue;
            } else {
              nodes[i_11051] = !(self__.arr[j_11052] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_11052]), self__.arr[j_11052], self__.arr[j_11052 + 1], added_leaf_QMARK_) : self__.arr[j_11052 + 1];
              var G__11055 = i_11051 + 1;
              var G__11056 = j_11052 + 2;
              i_11051 = G__11055;
              j_11052 = G__11056;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11057 = 0;
      var j_11058 = 0;
      while (true) {
        if (i_11057 < 32) {
          if ((self__.bitmap >>> i_11057 & 1) === 0) {
            var G__11059 = i_11057 + 1;
            var G__11060 = j_11058;
            i_11057 = G__11059;
            j_11058 = G__11060;
            continue;
          } else {
            nodes[i_11057] = !(self__.arr[j_11058] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_11058]), self__.arr[j_11058], self__.arr[j_11058 + 1], added_leaf_QMARK_) : self__.arr[j_11058 + 1];
            var G__11061 = i_11057 + 1;
            var G__11062 = j_11058 + 2;
            i_11057 = G__11061;
            j_11058 = G__11062;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11063 = i + 1;
        var G__11064 = j + 2;
        var G__11065 = bitmap | 1 << i;
        i = G__11063;
        j = G__11064;
        bitmap = G__11065;
        continue;
      } else {
        var G__11066 = i + 1;
        var G__11067 = j;
        var G__11068 = bitmap;
        i = G__11066;
        j = G__11067;
        bitmap = G__11068;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__11069 = i + 1;
          var G__11070 = init__$2;
          i = G__11069;
          init__$1 = G__11070;
          continue;
        }
      } else {
        var G__11071 = i + 1;
        var G__11072 = init__$1;
        i = G__11071;
        init__$1 = G__11072;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__11073 = i + 2;
        i = G__11073;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__11074 = j + 2;
                j = G__11074;
                continue;
              }
            } else {
              var G__11075 = j + 2;
              j = G__11075;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__11076 = j + 1;
              j = G__11076;
              continue;
            }
          } else {
            var G__11077 = j + 1;
            j = G__11077;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11079 = cljs.core.seq.call(null, coll);
  var chunk__11080 = null;
  var count__11081 = 0;
  var i__11082 = 0;
  while (true) {
    if (i__11082 < count__11081) {
      var vec__11083 = cljs.core._nth.call(null, chunk__11080, i__11082);
      var k = cljs.core.nth.call(null, vec__11083, 0, null);
      var v = cljs.core.nth.call(null, vec__11083, 1, null);
      f.call(null, v, k);
      var G__11087 = seq__11079;
      var G__11088 = chunk__11080;
      var G__11089 = count__11081;
      var G__11090 = i__11082 + 1;
      seq__11079 = G__11087;
      chunk__11080 = G__11088;
      count__11081 = G__11089;
      i__11082 = G__11090;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11079);
      if (temp__4126__auto__) {
        var seq__11079__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11079__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11079__$1);
          var G__11091 = cljs.core.chunk_rest.call(null, seq__11079__$1);
          var G__11092 = c__4307__auto__;
          var G__11093 = cljs.core.count.call(null, c__4307__auto__);
          var G__11094 = 0;
          seq__11079 = G__11091;
          chunk__11080 = G__11092;
          count__11081 = G__11093;
          i__11082 = G__11094;
          continue;
        } else {
          var vec__11084 = cljs.core.first.call(null, seq__11079__$1);
          var k = cljs.core.nth.call(null, vec__11084, 0, null);
          var v = cljs.core.nth.call(null, vec__11084, 1, null);
          f.call(null, v, k);
          var G__11095 = cljs.core.next.call(null, seq__11079__$1);
          var G__11096 = null;
          var G__11097 = 0;
          var G__11098 = 0;
          seq__11079 = G__11095;
          chunk__11080 = G__11096;
          count__11081 = G__11097;
          i__11082 = G__11098;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11086 = {};
    return obj11086;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11099 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11100 = cljs.core.next.call(null, es);
          ret = G__11099;
          es = G__11100;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11101 = null;
  var G__11101__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11101__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11101 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11101__2.call(this, self__, k);
      case 3:
        return G__11101__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11101.cljs$core$IFn$_invoke$arity$2 = G__11101__2;
  G__11101.cljs$core$IFn$_invoke$arity$3 = G__11101__3;
  return G__11101;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11078) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11078)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11102 = i + 1;
      var G__11103 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__11102;
      out = G__11103;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11104 = o;
      if (G__11104) {
        var bit__4201__auto__ = G__11104.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4201__auto__ || G__11104.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11104.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11104);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11104);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11105 = cljs.core.next.call(null, es);
          var G__11106 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11105;
          tcoll__$1 = G__11106;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11107 = ascending_QMARK_ ? t.left : t.right;
      var G__11108 = cljs.core.conj.call(null, stack__$1, t);
      t = G__11107;
      stack__$1 = G__11108;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11110 = null;
  var G__11110__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11110__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11110 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11110__2.call(this, self__, k);
      case 3:
        return G__11110__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11110.cljs$core$IFn$_invoke$arity$2 = G__11110__2;
  G__11110.cljs$core$IFn$_invoke$arity$3 = G__11110__3;
  return G__11110;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11109) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11109)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11112 = null;
  var G__11112__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11112__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11112 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11112__2.call(this, self__, k);
      case 3:
        return G__11112__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11112.cljs$core$IFn$_invoke$arity$2 = G__11112__2;
  G__11112.cljs$core$IFn$_invoke$arity$3 = G__11112__3;
  return G__11112;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11111) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11111)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11114 = cljs.core.seq.call(null, coll);
  var chunk__11115 = null;
  var count__11116 = 0;
  var i__11117 = 0;
  while (true) {
    if (i__11117 < count__11116) {
      var vec__11118 = cljs.core._nth.call(null, chunk__11115, i__11117);
      var k = cljs.core.nth.call(null, vec__11118, 0, null);
      var v = cljs.core.nth.call(null, vec__11118, 1, null);
      f.call(null, v, k);
      var G__11120 = seq__11114;
      var G__11121 = chunk__11115;
      var G__11122 = count__11116;
      var G__11123 = i__11117 + 1;
      seq__11114 = G__11120;
      chunk__11115 = G__11121;
      count__11116 = G__11122;
      i__11117 = G__11123;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11114);
      if (temp__4126__auto__) {
        var seq__11114__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11114__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11114__$1);
          var G__11124 = cljs.core.chunk_rest.call(null, seq__11114__$1);
          var G__11125 = c__4307__auto__;
          var G__11126 = cljs.core.count.call(null, c__4307__auto__);
          var G__11127 = 0;
          seq__11114 = G__11124;
          chunk__11115 = G__11125;
          count__11116 = G__11126;
          i__11117 = G__11127;
          continue;
        } else {
          var vec__11119 = cljs.core.first.call(null, seq__11114__$1);
          var k = cljs.core.nth.call(null, vec__11119, 0, null);
          var v = cljs.core.nth.call(null, vec__11119, 1, null);
          f.call(null, v, k);
          var G__11128 = cljs.core.next.call(null, seq__11114__$1);
          var G__11129 = null;
          var G__11130 = 0;
          var G__11131 = 0;
          seq__11114 = G__11128;
          chunk__11115 = G__11129;
          count__11116 = G__11130;
          i__11117 = G__11131;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11132 = t.left;
          t = G__11132;
          continue;
        } else {
          var G__11133 = t.right;
          t = G__11133;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11134 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11135 = cljs.core.next.call(null, es);
          ret = G__11134;
          es = G__11135;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11136 = null;
  var G__11136__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11136__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11136 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11136__2.call(this, self__, k);
      case 3:
        return G__11136__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11136.cljs$core$IFn$_invoke$arity$2 = G__11136__2;
  G__11136.cljs$core$IFn$_invoke$arity$3 = G__11136__3;
  return G__11136;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11113) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11113)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11137 = cljs.core.conj.call(null, stack, t);
              var G__11138 = t.left;
              stack = G__11137;
              t = G__11138;
              continue;
            } else {
              var G__11139 = stack;
              var G__11140 = t.right;
              stack = G__11139;
              t = G__11140;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11141 = cljs.core.conj.call(null, stack, t);
              var G__11142 = t.right;
              stack = G__11141;
              t = G__11142;
              continue;
            } else {
              var G__11143 = stack;
              var G__11144 = t.left;
              stack = G__11143;
              t = G__11144;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__11145 = cljs.core.nnext.call(null, in$);
        var G__11146 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11145;
        out = G__11146;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11147) {
    var keyvals = cljs.core.seq(arglist__11147);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11148) {
    var keyvals = cljs.core.seq(arglist__11148);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj11152 = {};
      return obj11152;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__11153 = cljs.core.nnext.call(null, kvs);
        kvs = G__11153;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11154) {
    var keyvals = cljs.core.seq(arglist__11154);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__11155 = cljs.core.nnext.call(null, in$);
        var G__11156 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11155;
        out = G__11156;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11157) {
    var keyvals = cljs.core.seq(arglist__11157);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__11158 = cljs.core.nnext.call(null, in$);
        var G__11159 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11158;
        out = G__11159;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11160) {
    var comparator = cljs.core.first(arglist__11160);
    var keyvals = cljs.core.rest(arglist__11160);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11161 = self__.mseq;
    if (G__11161) {
      var bit__4201__auto__ = G__11161.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__11161.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11161.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11161);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11161);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11162 = self__.mseq;
    if (G__11162) {
      var bit__4201__auto__ = G__11162.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__11162.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11162.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11162);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11162);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11163 = self__.mseq;
    if (G__11163) {
      var bit__4201__auto__ = G__11163.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__11163.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11163.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11163);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11163);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11164 = self__.mseq;
    if (G__11164) {
      var bit__4201__auto__ = G__11164.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4201__auto__ || G__11164.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11164.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11164);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11164);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11165_SHARP_, p2__11166_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3551__auto__ = p1__11165_SHARP_;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__11166_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11167) {
    var maps = cljs.core.seq(arglist__11167);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3551__auto__ = m1;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11168) {
    var f = cljs.core.first(arglist__11168);
    var maps = cljs.core.rest(arglist__11168);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11169 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__11170 = cljs.core.next.call(null, keys);
      ret = G__11169;
      keys = G__11170;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11173 = cljs.core.seq.call(null, coll);
  var chunk__11174 = null;
  var count__11175 = 0;
  var i__11176 = 0;
  while (true) {
    if (i__11176 < count__11175) {
      var vec__11177 = cljs.core._nth.call(null, chunk__11174, i__11176);
      var k = cljs.core.nth.call(null, vec__11177, 0, null);
      var v = cljs.core.nth.call(null, vec__11177, 1, null);
      f.call(null, v, k);
      var G__11179 = seq__11173;
      var G__11180 = chunk__11174;
      var G__11181 = count__11175;
      var G__11182 = i__11176 + 1;
      seq__11173 = G__11179;
      chunk__11174 = G__11180;
      count__11175 = G__11181;
      i__11176 = G__11182;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11173);
      if (temp__4126__auto__) {
        var seq__11173__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11173__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11173__$1);
          var G__11183 = cljs.core.chunk_rest.call(null, seq__11173__$1);
          var G__11184 = c__4307__auto__;
          var G__11185 = cljs.core.count.call(null, c__4307__auto__);
          var G__11186 = 0;
          seq__11173 = G__11183;
          chunk__11174 = G__11184;
          count__11175 = G__11185;
          i__11176 = G__11186;
          continue;
        } else {
          var vec__11178 = cljs.core.first.call(null, seq__11173__$1);
          var k = cljs.core.nth.call(null, vec__11178, 0, null);
          var v = cljs.core.nth.call(null, vec__11178, 1, null);
          f.call(null, v, k);
          var G__11187 = cljs.core.next.call(null, seq__11173__$1);
          var G__11188 = null;
          var G__11189 = 0;
          var G__11190 = 0;
          seq__11173 = G__11187;
          chunk__11174 = G__11188;
          count__11175 = G__11189;
          i__11176 = G__11190;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11171_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11171_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11191 = null;
  var G__11191__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11191__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11191 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11191__2.call(this, self__, k);
      case 3:
        return G__11191__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11191.cljs$core$IFn$_invoke$arity$2 = G__11191__2;
  G__11191.cljs$core$IFn$_invoke$arity$3 = G__11191__3;
  return G__11191;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11172) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11172)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11192 = i + 1;
        var G__11193 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__11192;
        out = G__11193;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11194 = i + 1;
        var G__11195 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__11194;
        out = G__11195;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11197 = null;
  var G__11197__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11197__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11197 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11197__2.call(this, self__, k);
      case 3:
        return G__11197__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11197.cljs$core$IFn$_invoke$arity$2 = G__11197__2;
  G__11197.cljs$core$IFn$_invoke$arity$3 = G__11197__3;
  return G__11197;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11196) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11196)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11200 = cljs.core.seq.call(null, coll);
  var chunk__11201 = null;
  var count__11202 = 0;
  var i__11203 = 0;
  while (true) {
    if (i__11203 < count__11202) {
      var vec__11204 = cljs.core._nth.call(null, chunk__11201, i__11203);
      var k = cljs.core.nth.call(null, vec__11204, 0, null);
      var v = cljs.core.nth.call(null, vec__11204, 1, null);
      f.call(null, v, k);
      var G__11206 = seq__11200;
      var G__11207 = chunk__11201;
      var G__11208 = count__11202;
      var G__11209 = i__11203 + 1;
      seq__11200 = G__11206;
      chunk__11201 = G__11207;
      count__11202 = G__11208;
      i__11203 = G__11209;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11200);
      if (temp__4126__auto__) {
        var seq__11200__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11200__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11200__$1);
          var G__11210 = cljs.core.chunk_rest.call(null, seq__11200__$1);
          var G__11211 = c__4307__auto__;
          var G__11212 = cljs.core.count.call(null, c__4307__auto__);
          var G__11213 = 0;
          seq__11200 = G__11210;
          chunk__11201 = G__11211;
          count__11202 = G__11212;
          i__11203 = G__11213;
          continue;
        } else {
          var vec__11205 = cljs.core.first.call(null, seq__11200__$1);
          var k = cljs.core.nth.call(null, vec__11205, 0, null);
          var v = cljs.core.nth.call(null, vec__11205, 1, null);
          f.call(null, v, k);
          var G__11214 = cljs.core.next.call(null, seq__11200__$1);
          var G__11215 = null;
          var G__11216 = 0;
          var G__11217 = 0;
          seq__11200 = G__11214;
          chunk__11201 = G__11215;
          count__11202 = G__11216;
          i__11203 = G__11217;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11198_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11198_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11218 = null;
  var G__11218__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11218__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11218 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11218__2.call(this, self__, k);
      case 3:
        return G__11218__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11218.cljs$core$IFn$_invoke$arity$2 = G__11218__2;
  G__11218.cljs$core$IFn$_invoke$arity$3 = G__11218__3;
  return G__11218;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11199) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11199)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4401__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4401__auto__.length) {
        var G__11219 = i + 1;
        var G__11220 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__11219;
        res = G__11220;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11221 = cljs.core._next.call(null, in$__$1);
          var G__11222 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__11221;
          out = G__11222;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__11223__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__11223 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11223__delegate.call(this, keys);
    };
    G__11223.cljs$lang$maxFixedArity = 0;
    G__11223.cljs$lang$applyTo = function(arglist__11224) {
      var keys = cljs.core.seq(arglist__11224);
      return G__11223__delegate(keys);
    };
    G__11223.cljs$core$IFn$_invoke$arity$variadic = G__11223__delegate;
    return G__11223;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11225) {
    var keys = cljs.core.seq(arglist__11225);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11226) {
    var comparator = cljs.core.first(arglist__11226);
    var keys = cljs.core.rest(arglist__11226);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__11227_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11227_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__11227_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__11228_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11228_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__11228_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11235, seen__$1) {
        while (true) {
          var vec__11236 = p__11235;
          var f = cljs.core.nth.call(null, vec__11236, 0, null);
          var xs__$1 = vec__11236;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__11237 = cljs.core.rest.call(null, s);
              var G__11238 = seen__$1;
              p__11235 = G__11237;
              seen__$1 = G__11238;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__11239 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__11240 = cljs.core.next.call(null, s__$1);
      ret = G__11239;
      s__$1 = G__11240;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__11242 = x;
    if (G__11242) {
      var bit__4194__auto__ = G__11242.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4194__auto__ || G__11242.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__11243 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__11244 = cljs.core.next.call(null, ks);
      var G__11245 = cljs.core.next.call(null, vs);
      map = G__11243;
      ks = G__11244;
      vs = G__11245;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__11248__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11246_SHARP_, p2__11247_SHARP_) {
        return max_key.call(null, k, p1__11246_SHARP_, p2__11247_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__11248 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11248__delegate.call(this, k, x, y, more);
    };
    G__11248.cljs$lang$maxFixedArity = 3;
    G__11248.cljs$lang$applyTo = function(arglist__11249) {
      var k = cljs.core.first(arglist__11249);
      arglist__11249 = cljs.core.next(arglist__11249);
      var x = cljs.core.first(arglist__11249);
      arglist__11249 = cljs.core.next(arglist__11249);
      var y = cljs.core.first(arglist__11249);
      var more = cljs.core.rest(arglist__11249);
      return G__11248__delegate(k, x, y, more);
    };
    G__11248.cljs$core$IFn$_invoke$arity$variadic = G__11248__delegate;
    return G__11248;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__11252__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11250_SHARP_, p2__11251_SHARP_) {
        return min_key.call(null, k, p1__11250_SHARP_, p2__11251_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__11252 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11252__delegate.call(this, k, x, y, more);
    };
    G__11252.cljs$lang$maxFixedArity = 3;
    G__11252.cljs$lang$applyTo = function(arglist__11253) {
      var k = cljs.core.first(arglist__11253);
      arglist__11253 = cljs.core.next(arglist__11253);
      var x = cljs.core.first(arglist__11253);
      arglist__11253 = cljs.core.next(arglist__11253);
      var y = cljs.core.first(arglist__11253);
      var more = cljs.core.rest(arglist__11253);
      return G__11252__delegate(k, x, y, more);
    };
    G__11252.cljs$core$IFn$_invoke$arity$variadic = G__11252__delegate;
    return G__11252;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__11254 = null;
          var G__11254__0 = function() {
            return f1.call(null);
          };
          var G__11254__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11254__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__11254 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11254__0.call(this);
              case 1:
                return G__11254__1.call(this, result);
              case 2:
                return G__11254__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11254.cljs$core$IFn$_invoke$arity$0 = G__11254__0;
          G__11254.cljs$core$IFn$_invoke$arity$1 = G__11254__1;
          G__11254.cljs$core$IFn$_invoke$arity$2 = G__11254__2;
          return G__11254;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__11255 = null;
        var G__11255__0 = function() {
          return f1.call(null);
        };
        var G__11255__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11255__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__11255 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11255__0.call(this);
            case 1:
              return G__11255__1.call(this, result);
            case 2:
              return G__11255__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11255.cljs$core$IFn$_invoke$arity$0 = G__11255__0;
        G__11255.cljs$core$IFn$_invoke$arity$1 = G__11255__1;
        G__11255.cljs$core$IFn$_invoke$arity$2 = G__11255__2;
        return G__11255;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11258 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11258, 0, null);
        var s = vec__11258;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11259 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11259, 0, null);
      var s = vec__11259;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11262 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11262, 0, null);
        var s = vec__11262;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11263 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11263, 0, null);
      var s = vec__11263;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__11264 = null;
          var G__11264__0 = function() {
            return f1.call(null);
          };
          var G__11264__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11264__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__11264 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11264__0.call(this);
              case 1:
                return G__11264__1.call(this, result);
              case 2:
                return G__11264__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11264.cljs$core$IFn$_invoke$arity$0 = G__11264__0;
          G__11264.cljs$core$IFn$_invoke$arity$1 = G__11264__1;
          G__11264.cljs$core$IFn$_invoke$arity$2 = G__11264__2;
          return G__11264;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__11266 = null;
          var G__11266__0 = function() {
            return f1.call(null);
          };
          var G__11266__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11266__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__11266 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11266__0.call(this);
              case 1:
                return G__11266__1.call(this, result);
              case 2:
                return G__11266__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11266.cljs$core$IFn$_invoke$arity$0 = G__11266__0;
          G__11266.cljs$core$IFn$_invoke$arity$1 = G__11266__1;
          G__11266.cljs$core$IFn$_invoke$arity$2 = G__11266__2;
          return G__11266;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__11265_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__11265_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11277 = null;
      var G__11277__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__11277__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__11277__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__11277__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__11277__4 = function() {
        var G__11278__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__11278 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11278__delegate.call(this, x, y, z, args);
        };
        G__11278.cljs$lang$maxFixedArity = 3;
        G__11278.cljs$lang$applyTo = function(arglist__11279) {
          var x = cljs.core.first(arglist__11279);
          arglist__11279 = cljs.core.next(arglist__11279);
          var y = cljs.core.first(arglist__11279);
          arglist__11279 = cljs.core.next(arglist__11279);
          var z = cljs.core.first(arglist__11279);
          var args = cljs.core.rest(arglist__11279);
          return G__11278__delegate(x, y, z, args);
        };
        G__11278.cljs$core$IFn$_invoke$arity$variadic = G__11278__delegate;
        return G__11278;
      }();
      G__11277 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11277__0.call(this);
          case 1:
            return G__11277__1.call(this, x);
          case 2:
            return G__11277__2.call(this, x, y);
          case 3:
            return G__11277__3.call(this, x, y, z);
          default:
            return G__11277__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11277.cljs$lang$maxFixedArity = 3;
      G__11277.cljs$lang$applyTo = G__11277__4.cljs$lang$applyTo;
      G__11277.cljs$core$IFn$_invoke$arity$0 = G__11277__0;
      G__11277.cljs$core$IFn$_invoke$arity$1 = G__11277__1;
      G__11277.cljs$core$IFn$_invoke$arity$2 = G__11277__2;
      G__11277.cljs$core$IFn$_invoke$arity$3 = G__11277__3;
      G__11277.cljs$core$IFn$_invoke$arity$variadic = G__11277__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11277;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11280 = null;
      var G__11280__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__11280__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__11280__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__11280__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__11280__4 = function() {
        var G__11281__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__11281 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11281__delegate.call(this, x, y, z, args);
        };
        G__11281.cljs$lang$maxFixedArity = 3;
        G__11281.cljs$lang$applyTo = function(arglist__11282) {
          var x = cljs.core.first(arglist__11282);
          arglist__11282 = cljs.core.next(arglist__11282);
          var y = cljs.core.first(arglist__11282);
          arglist__11282 = cljs.core.next(arglist__11282);
          var z = cljs.core.first(arglist__11282);
          var args = cljs.core.rest(arglist__11282);
          return G__11281__delegate(x, y, z, args);
        };
        G__11281.cljs$core$IFn$_invoke$arity$variadic = G__11281__delegate;
        return G__11281;
      }();
      G__11280 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11280__0.call(this);
          case 1:
            return G__11280__1.call(this, x);
          case 2:
            return G__11280__2.call(this, x, y);
          case 3:
            return G__11280__3.call(this, x, y, z);
          default:
            return G__11280__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11280.cljs$lang$maxFixedArity = 3;
      G__11280.cljs$lang$applyTo = G__11280__4.cljs$lang$applyTo;
      G__11280.cljs$core$IFn$_invoke$arity$0 = G__11280__0;
      G__11280.cljs$core$IFn$_invoke$arity$1 = G__11280__1;
      G__11280.cljs$core$IFn$_invoke$arity$2 = G__11280__2;
      G__11280.cljs$core$IFn$_invoke$arity$3 = G__11280__3;
      G__11280.cljs$core$IFn$_invoke$arity$variadic = G__11280__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11280;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11283 = null;
      var G__11283__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__11283__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__11283__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__11283__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__11283__4 = function() {
        var G__11284__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__11284 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11284__delegate.call(this, x, y, z, args);
        };
        G__11284.cljs$lang$maxFixedArity = 3;
        G__11284.cljs$lang$applyTo = function(arglist__11285) {
          var x = cljs.core.first(arglist__11285);
          arglist__11285 = cljs.core.next(arglist__11285);
          var y = cljs.core.first(arglist__11285);
          arglist__11285 = cljs.core.next(arglist__11285);
          var z = cljs.core.first(arglist__11285);
          var args = cljs.core.rest(arglist__11285);
          return G__11284__delegate(x, y, z, args);
        };
        G__11284.cljs$core$IFn$_invoke$arity$variadic = G__11284__delegate;
        return G__11284;
      }();
      G__11283 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11283__0.call(this);
          case 1:
            return G__11283__1.call(this, x);
          case 2:
            return G__11283__2.call(this, x, y);
          case 3:
            return G__11283__3.call(this, x, y, z);
          default:
            return G__11283__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11283.cljs$lang$maxFixedArity = 3;
      G__11283.cljs$lang$applyTo = G__11283__4.cljs$lang$applyTo;
      G__11283.cljs$core$IFn$_invoke$arity$0 = G__11283__0;
      G__11283.cljs$core$IFn$_invoke$arity$1 = G__11283__1;
      G__11283.cljs$core$IFn$_invoke$arity$2 = G__11283__2;
      G__11283.cljs$core$IFn$_invoke$arity$3 = G__11283__3;
      G__11283.cljs$core$IFn$_invoke$arity$variadic = G__11283__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11283;
    }();
  };
  var juxt__4 = function() {
    var G__11286__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__11287 = null;
          var G__11287__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11267_SHARP_, p2__11268_SHARP_) {
                return cljs.core.conj.call(null, p1__11267_SHARP_, p2__11268_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11287__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11269_SHARP_, p2__11270_SHARP_) {
                return cljs.core.conj.call(null, p1__11269_SHARP_, p2__11270_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11287__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11271_SHARP_, p2__11272_SHARP_) {
                return cljs.core.conj.call(null, p1__11271_SHARP_, p2__11272_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11287__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11273_SHARP_, p2__11274_SHARP_) {
                return cljs.core.conj.call(null, p1__11273_SHARP_, p2__11274_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11287__4 = function() {
            var G__11288__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__11275_SHARP_, p2__11276_SHARP_) {
                  return cljs.core.conj.call(null, p1__11275_SHARP_, cljs.core.apply.call(null, p2__11276_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__11288 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11288__delegate.call(this, x, y, z, args);
            };
            G__11288.cljs$lang$maxFixedArity = 3;
            G__11288.cljs$lang$applyTo = function(arglist__11289) {
              var x = cljs.core.first(arglist__11289);
              arglist__11289 = cljs.core.next(arglist__11289);
              var y = cljs.core.first(arglist__11289);
              arglist__11289 = cljs.core.next(arglist__11289);
              var z = cljs.core.first(arglist__11289);
              var args = cljs.core.rest(arglist__11289);
              return G__11288__delegate(x, y, z, args);
            };
            G__11288.cljs$core$IFn$_invoke$arity$variadic = G__11288__delegate;
            return G__11288;
          }();
          G__11287 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__11287__0.call(this);
              case 1:
                return G__11287__1.call(this, x);
              case 2:
                return G__11287__2.call(this, x, y);
              case 3:
                return G__11287__3.call(this, x, y, z);
              default:
                return G__11287__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11287.cljs$lang$maxFixedArity = 3;
          G__11287.cljs$lang$applyTo = G__11287__4.cljs$lang$applyTo;
          G__11287.cljs$core$IFn$_invoke$arity$0 = G__11287__0;
          G__11287.cljs$core$IFn$_invoke$arity$1 = G__11287__1;
          G__11287.cljs$core$IFn$_invoke$arity$2 = G__11287__2;
          G__11287.cljs$core$IFn$_invoke$arity$3 = G__11287__3;
          G__11287.cljs$core$IFn$_invoke$arity$variadic = G__11287__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__11287;
        }();
      }(fs__$1);
    };
    var G__11286 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11286__delegate.call(this, f, g, h, fs);
    };
    G__11286.cljs$lang$maxFixedArity = 3;
    G__11286.cljs$lang$applyTo = function(arglist__11290) {
      var f = cljs.core.first(arglist__11290);
      arglist__11290 = cljs.core.next(arglist__11290);
      var g = cljs.core.first(arglist__11290);
      arglist__11290 = cljs.core.next(arglist__11290);
      var h = cljs.core.first(arglist__11290);
      var fs = cljs.core.rest(arglist__11290);
      return G__11286__delegate(f, g, h, fs);
    };
    G__11286.cljs$core$IFn$_invoke$arity$variadic = G__11286__delegate;
    return G__11286;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__11291 = cljs.core.next.call(null, coll);
        coll = G__11291;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__11292 = n - 1;
        var G__11293 = cljs.core.next.call(null, coll);
        n = G__11292;
        coll = G__11293;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11295 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__11295, 0, null);
  var flags = cljs.core.nth.call(null, vec__11295, 1, null);
  var pattern = cljs.core.nth.call(null, vec__11295, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11297 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_11298__$1 = cljs.core.next.call(null, coll);
      var n_11299 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_11298__$1 && (n_11299 == null || !(n_11299 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_11298__$1), writer, opts);
          var G__11300 = cljs.core.next.call(null, coll_11298__$1);
          var G__11301 = n_11299 - 1;
          coll_11298__$1 = G__11300;
          n_11299 = G__11301;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_11298__$1) && n_11299 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11297;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__11306 = cljs.core.seq.call(null, ss);
    var chunk__11307 = null;
    var count__11308 = 0;
    var i__11309 = 0;
    while (true) {
      if (i__11309 < count__11308) {
        var s = cljs.core._nth.call(null, chunk__11307, i__11309);
        cljs.core._write.call(null, writer, s);
        var G__11310 = seq__11306;
        var G__11311 = chunk__11307;
        var G__11312 = count__11308;
        var G__11313 = i__11309 + 1;
        seq__11306 = G__11310;
        chunk__11307 = G__11311;
        count__11308 = G__11312;
        i__11309 = G__11313;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__11306);
        if (temp__4126__auto__) {
          var seq__11306__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11306__$1)) {
            var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11306__$1);
            var G__11314 = cljs.core.chunk_rest.call(null, seq__11306__$1);
            var G__11315 = c__4307__auto__;
            var G__11316 = cljs.core.count.call(null, c__4307__auto__);
            var G__11317 = 0;
            seq__11306 = G__11314;
            chunk__11307 = G__11315;
            count__11308 = G__11316;
            i__11309 = G__11317;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__11306__$1);
            cljs.core._write.call(null, writer, s);
            var G__11318 = cljs.core.next.call(null, seq__11306__$1);
            var G__11319 = null;
            var G__11320 = 0;
            var G__11321 = 0;
            seq__11306 = G__11318;
            chunk__11307 = G__11319;
            count__11308 = G__11320;
            i__11309 = G__11321;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__11322) {
    var writer = cljs.core.first(arglist__11322);
    var ss = cljs.core.rest(arglist__11322);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11324 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11324;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3539__auto__)) {
          var and__3539__auto____$1 = function() {
            var G__11330 = obj;
            if (G__11330) {
              var bit__4201__auto__ = G__11330.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4201__auto__ || G__11330.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__11330.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11330);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11330);
            }
          }();
          if (and__3539__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__11331 = obj;
            if (G__11331) {
              var bit__4194__auto__ = G__11331.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4194__auto__ || G__11331.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__11333 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__11333;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__11332 = obj;
                            if (G__11332) {
                              var bit__4201__auto__ = G__11332.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4201__auto__ || G__11332.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__11332.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11332);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11332);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__11338 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__11339 = null;
  var count__11340 = 0;
  var i__11341 = 0;
  while (true) {
    if (i__11341 < count__11340) {
      var obj = cljs.core._nth.call(null, chunk__11339, i__11341);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__11342 = seq__11338;
      var G__11343 = chunk__11339;
      var G__11344 = count__11340;
      var G__11345 = i__11341 + 1;
      seq__11338 = G__11342;
      chunk__11339 = G__11343;
      count__11340 = G__11344;
      i__11341 = G__11345;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11338);
      if (temp__4126__auto__) {
        var seq__11338__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11338__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__11338__$1);
          var G__11346 = cljs.core.chunk_rest.call(null, seq__11338__$1);
          var G__11347 = c__4307__auto__;
          var G__11348 = cljs.core.count.call(null, c__4307__auto__);
          var G__11349 = 0;
          seq__11338 = G__11346;
          chunk__11339 = G__11347;
          count__11340 = G__11348;
          i__11341 = G__11349;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__11338__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__11350 = cljs.core.next.call(null, seq__11338__$1);
          var G__11351 = null;
          var G__11352 = 0;
          var G__11353 = 0;
          seq__11338 = G__11350;
          chunk__11339 = G__11351;
          count__11340 = G__11352;
          i__11341 = G__11353;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11354) {
    var objs = cljs.core.seq(arglist__11354);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11355) {
    var objs = cljs.core.seq(arglist__11355);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11356) {
    var objs = cljs.core.seq(arglist__11356);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11357) {
    var objs = cljs.core.seq(arglist__11357);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11358) {
    var objs = cljs.core.seq(arglist__11358);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11359) {
    var objs = cljs.core.seq(arglist__11359);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11360) {
    var objs = cljs.core.seq(arglist__11360);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11361) {
    var objs = cljs.core.seq(arglist__11361);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11362) {
    var iref = cljs.core.first(arglist__11362);
    arglist__11362 = cljs.core.next(arglist__11362);
    var f = cljs.core.first(arglist__11362);
    var args = cljs.core.rest(arglist__11362);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__11363_SHARP_, p2__11364_SHARP_) {
    var ret = f1.call(null, p1__11363_SHARP_, p2__11364_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11365 = null;
        var G__11365__0 = function() {
          return f1.call(null);
        };
        var G__11365__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11365__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__11365 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11365__0.call(this);
            case 1:
              return G__11365__1.call(this, result);
            case 2:
              return G__11365__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11365.cljs$core$IFn$_invoke$arity$0 = G__11365__0;
        G__11365.cljs$core$IFn$_invoke$arity$1 = G__11365__1;
        G__11365.cljs$core$IFn$_invoke$arity$2 = G__11365__2;
        return G__11365;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__11366 = null;
          var G__11366__0 = function() {
            return f1.call(null);
          };
          var G__11366__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11366__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__11366 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11366__0.call(this);
              case 1:
                return G__11366__1.call(this, result);
              case 2:
                return G__11366__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11366.cljs$core$IFn$_invoke$arity$0 = G__11366__0;
          G__11366.cljs$core$IFn$_invoke$arity$1 = G__11366__1;
          G__11366.cljs$core$IFn$_invoke$arity$2 = G__11366__2;
          return G__11366;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__11368_SHARP_, p2__11367_SHARP_) {
    return proc.call(null, p2__11367_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj11370 = {};
  return obj11370;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__11372 = k;
    if (G__11372) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__11372.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__11372.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11372);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11372);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__11386 = x;
      if (G__11386) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__11386.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__11386.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11386);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11386);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj11388 = {};
              return obj11388;
            }();
            var seq__11389_11399 = cljs.core.seq.call(null, x);
            var chunk__11390_11400 = null;
            var count__11391_11401 = 0;
            var i__11392_11402 = 0;
            while (true) {
              if (i__11392_11402 < count__11391_11401) {
                var vec__11393_11403 = cljs.core._nth.call(null, chunk__11390_11400, i__11392_11402);
                var k_11404 = cljs.core.nth.call(null, vec__11393_11403, 0, null);
                var v_11405 = cljs.core.nth.call(null, vec__11393_11403, 1, null);
                m[cljs.core.key__GT_js.call(null, k_11404)] = clj__GT_js.call(null, v_11405);
                var G__11406 = seq__11389_11399;
                var G__11407 = chunk__11390_11400;
                var G__11408 = count__11391_11401;
                var G__11409 = i__11392_11402 + 1;
                seq__11389_11399 = G__11406;
                chunk__11390_11400 = G__11407;
                count__11391_11401 = G__11408;
                i__11392_11402 = G__11409;
                continue;
              } else {
                var temp__4126__auto___11410 = cljs.core.seq.call(null, seq__11389_11399);
                if (temp__4126__auto___11410) {
                  var seq__11389_11411__$1 = temp__4126__auto___11410;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11389_11411__$1)) {
                    var c__4307__auto___11412 = cljs.core.chunk_first.call(null, seq__11389_11411__$1);
                    var G__11413 = cljs.core.chunk_rest.call(null, seq__11389_11411__$1);
                    var G__11414 = c__4307__auto___11412;
                    var G__11415 = cljs.core.count.call(null, c__4307__auto___11412);
                    var G__11416 = 0;
                    seq__11389_11399 = G__11413;
                    chunk__11390_11400 = G__11414;
                    count__11391_11401 = G__11415;
                    i__11392_11402 = G__11416;
                    continue;
                  } else {
                    var vec__11394_11417 = cljs.core.first.call(null, seq__11389_11411__$1);
                    var k_11418 = cljs.core.nth.call(null, vec__11394_11417, 0, null);
                    var v_11419 = cljs.core.nth.call(null, vec__11394_11417, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_11418)] = clj__GT_js.call(null, v_11419);
                    var G__11420 = cljs.core.next.call(null, seq__11389_11411__$1);
                    var G__11421 = null;
                    var G__11422 = 0;
                    var G__11423 = 0;
                    seq__11389_11399 = G__11420;
                    chunk__11390_11400 = G__11421;
                    count__11391_11401 = G__11422;
                    i__11392_11402 = G__11423;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__11395_11424 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__11396_11425 = null;
              var count__11397_11426 = 0;
              var i__11398_11427 = 0;
              while (true) {
                if (i__11398_11427 < count__11397_11426) {
                  var x_11428__$1 = cljs.core._nth.call(null, chunk__11396_11425, i__11398_11427);
                  arr.push(x_11428__$1);
                  var G__11429 = seq__11395_11424;
                  var G__11430 = chunk__11396_11425;
                  var G__11431 = count__11397_11426;
                  var G__11432 = i__11398_11427 + 1;
                  seq__11395_11424 = G__11429;
                  chunk__11396_11425 = G__11430;
                  count__11397_11426 = G__11431;
                  i__11398_11427 = G__11432;
                  continue;
                } else {
                  var temp__4126__auto___11433 = cljs.core.seq.call(null, seq__11395_11424);
                  if (temp__4126__auto___11433) {
                    var seq__11395_11434__$1 = temp__4126__auto___11433;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__11395_11434__$1)) {
                      var c__4307__auto___11435 = cljs.core.chunk_first.call(null, seq__11395_11434__$1);
                      var G__11436 = cljs.core.chunk_rest.call(null, seq__11395_11434__$1);
                      var G__11437 = c__4307__auto___11435;
                      var G__11438 = cljs.core.count.call(null, c__4307__auto___11435);
                      var G__11439 = 0;
                      seq__11395_11424 = G__11436;
                      chunk__11396_11425 = G__11437;
                      count__11397_11426 = G__11438;
                      i__11398_11427 = G__11439;
                      continue;
                    } else {
                      var x_11440__$1 = cljs.core.first.call(null, seq__11395_11434__$1);
                      arr.push(x_11440__$1);
                      var G__11441 = cljs.core.next.call(null, seq__11395_11434__$1);
                      var G__11442 = null;
                      var G__11443 = 0;
                      var G__11444 = 0;
                      seq__11395_11424 = G__11441;
                      chunk__11396_11425 = G__11442;
                      count__11397_11426 = G__11443;
                      i__11398_11427 = G__11444;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj11446 = {};
  return obj11446;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__11467__delegate = function(x, opts) {
      if (function() {
        var G__11457 = x;
        if (G__11457) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__11457.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__11457.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11457);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11457);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__11458 = opts;
          var map__11458__$1 = cljs.core.seq_QMARK_.call(null, map__11458) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11458) : map__11458;
          var keywordize_keys = cljs.core.get.call(null, map__11458__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__11458, map__11458__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4276__auto__ = function(map__11458, map__11458__$1, keywordize_keys, keyfn) {
                          return function iter__11463(s__11464) {
                            return new cljs.core.LazySeq(null, function(map__11458, map__11458__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__11464__$1 = s__11464;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__11464__$1);
                                  if (temp__4126__auto__) {
                                    var s__11464__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11464__$2)) {
                                      var c__4274__auto__ = cljs.core.chunk_first.call(null, s__11464__$2);
                                      var size__4275__auto__ = cljs.core.count.call(null, c__4274__auto__);
                                      var b__11466 = cljs.core.chunk_buffer.call(null, size__4275__auto__);
                                      if (function() {
                                        var i__11465 = 0;
                                        while (true) {
                                          if (i__11465 < size__4275__auto__) {
                                            var k = cljs.core._nth.call(null, c__4274__auto__, i__11465);
                                            cljs.core.chunk_append.call(null, b__11466, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__11468 = i__11465 + 1;
                                            i__11465 = G__11468;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11466), iter__11463.call(null, cljs.core.chunk_rest.call(null, s__11464__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11466), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__11464__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__11463.call(null, cljs.core.rest.call(null, s__11464__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__11458, map__11458__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__11458, map__11458__$1, keywordize_keys, keyfn);
                        return iter__4276__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__11458, map__11458__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__11467 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11467__delegate.call(this, x, opts);
    };
    G__11467.cljs$lang$maxFixedArity = 1;
    G__11467.cljs$lang$applyTo = function(arglist__11469) {
      var x = cljs.core.first(arglist__11469);
      var opts = cljs.core.rest(arglist__11469);
      return G__11467__delegate(x, opts);
    };
    G__11467.cljs$core$IFn$_invoke$arity$variadic = G__11467__delegate;
    return G__11467;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__11470__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__11470 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11470__delegate.call(this, args);
      };
      G__11470.cljs$lang$maxFixedArity = 0;
      G__11470.cljs$lang$applyTo = function(arglist__11471) {
        var args = cljs.core.seq(arglist__11471);
        return G__11470__delegate(args);
      };
      G__11470.cljs$core$IFn$_invoke$arity$variadic = G__11470__delegate;
      return G__11470;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__11472 = ret;
        f = G__11472;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__11473__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__11473 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11473__delegate.call(this, f, args);
    };
    G__11473.cljs$lang$maxFixedArity = 1;
    G__11473.cljs$lang$applyTo = function(arglist__11474) {
      var f = cljs.core.first(arglist__11474);
      var args = cljs.core.rest(arglist__11474);
      return G__11473__delegate(f, args);
    };
    G__11473.cljs$core$IFn$_invoke$arity$variadic = G__11473__delegate;
    return G__11473;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__11475) {
    var f = cljs.core.first(arglist__11475);
    var args = cljs.core.rest(arglist__11475);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3551__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var or__3551__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3551__auto____$1) {
        return or__3551__auto____$1;
      } else {
        var and__3539__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3539__auto__) {
          var and__3539__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3539__auto____$1) {
            var and__3539__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3539__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__11476 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__11477 = i + 1;
                  ret = G__11476;
                  i = G__11477;
                  continue;
                }
                break;
              }
            } else {
              return and__3539__auto____$2;
            }
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3551__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__11478_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11478_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11478_SHARP_), cljs.core.second.call(null, p1__11478_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__11479_SHARP_, p2__11480_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__11479_SHARP_, p2__11480_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3551__auto__ = cljs.core.truth_(function() {
    var and__3539__auto__ = xprefs;
    if (cljs.core.truth_(and__3539__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3539__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    var or__3551__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__11481 = cljs.core.rest.call(null, ps);
          ps = G__11481;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3551__auto____$1)) {
      return or__3551__auto____$1;
    } else {
      var or__3551__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__11482 = cljs.core.rest.call(null, ps);
            ps = G__11482;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3551__auto____$2)) {
        return or__3551__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3551__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__11485) {
    var vec__11486 = p__11485;
    var k = cljs.core.nth.call(null, vec__11486, 0, null);
    var _ = cljs.core.nth.call(null, vec__11486, 1, null);
    var e = vec__11486;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3551__auto__ = be == null;
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj11488 = {};
  return obj11488;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._reset[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._reset["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._add_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._add_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._remove_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._remove_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._prefer_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._get_method[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._get_method["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._methods[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._methods["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3539__auto__ = mf;
    if (and__3539__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4178__auto__ = mf == null ? null : mf;
    return function() {
      var or__3551__auto__ = cljs.core._prefers[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core._prefers["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11490 = null;
  var G__11490__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__11490__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__11490__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__11490__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__11490__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__11490__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__11490__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__11490__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11490__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11490__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11490__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11490__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11490__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11490__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11490__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11490__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11490__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11490__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11490__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11490__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11490__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__11490 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__11490__2.call(this, self__, a);
      case 3:
        return G__11490__3.call(this, self__, a, b);
      case 4:
        return G__11490__4.call(this, self__, a, b, c);
      case 5:
        return G__11490__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11490__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11490__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11490__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11490__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11490__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11490__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11490__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11490__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11490__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11490__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11490__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11490__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11490__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11490__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11490__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11490__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11490__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11490.cljs$core$IFn$_invoke$arity$2 = G__11490__2;
  G__11490.cljs$core$IFn$_invoke$arity$3 = G__11490__3;
  G__11490.cljs$core$IFn$_invoke$arity$4 = G__11490__4;
  G__11490.cljs$core$IFn$_invoke$arity$5 = G__11490__5;
  G__11490.cljs$core$IFn$_invoke$arity$6 = G__11490__6;
  G__11490.cljs$core$IFn$_invoke$arity$7 = G__11490__7;
  G__11490.cljs$core$IFn$_invoke$arity$8 = G__11490__8;
  G__11490.cljs$core$IFn$_invoke$arity$9 = G__11490__9;
  G__11490.cljs$core$IFn$_invoke$arity$10 = G__11490__10;
  G__11490.cljs$core$IFn$_invoke$arity$11 = G__11490__11;
  G__11490.cljs$core$IFn$_invoke$arity$12 = G__11490__12;
  G__11490.cljs$core$IFn$_invoke$arity$13 = G__11490__13;
  G__11490.cljs$core$IFn$_invoke$arity$14 = G__11490__14;
  G__11490.cljs$core$IFn$_invoke$arity$15 = G__11490__15;
  G__11490.cljs$core$IFn$_invoke$arity$16 = G__11490__16;
  G__11490.cljs$core$IFn$_invoke$arity$17 = G__11490__17;
  G__11490.cljs$core$IFn$_invoke$arity$18 = G__11490__18;
  G__11490.cljs$core$IFn$_invoke$arity$19 = G__11490__19;
  G__11490.cljs$core$IFn$_invoke$arity$20 = G__11490__20;
  G__11490.cljs$core$IFn$_invoke$arity$21 = G__11490__21;
  G__11490.cljs$core$IFn$_invoke$arity$22 = G__11490__22;
  return G__11490;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11489) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11489)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var a = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__11491) {
    var opts__5111__auto__ = cljs.core.first(arglist__11491);
    var children__5112__auto__ = cljs.core.rest(arglist__11491);
    return a__delegate(opts__5111__auto__, children__5112__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var abbr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__11492) {
    var opts__5111__auto__ = cljs.core.first(arglist__11492);
    var children__5112__auto__ = cljs.core.rest(arglist__11492);
    return abbr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var address = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__11493) {
    var opts__5111__auto__ = cljs.core.first(arglist__11493);
    var children__5112__auto__ = cljs.core.rest(arglist__11493);
    return address__delegate(opts__5111__auto__, children__5112__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var area = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__11494) {
    var opts__5111__auto__ = cljs.core.first(arglist__11494);
    var children__5112__auto__ = cljs.core.rest(arglist__11494);
    return area__delegate(opts__5111__auto__, children__5112__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var article = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__11495) {
    var opts__5111__auto__ = cljs.core.first(arglist__11495);
    var children__5112__auto__ = cljs.core.rest(arglist__11495);
    return article__delegate(opts__5111__auto__, children__5112__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var aside = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__11496) {
    var opts__5111__auto__ = cljs.core.first(arglist__11496);
    var children__5112__auto__ = cljs.core.rest(arglist__11496);
    return aside__delegate(opts__5111__auto__, children__5112__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var audio = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__11497) {
    var opts__5111__auto__ = cljs.core.first(arglist__11497);
    var children__5112__auto__ = cljs.core.rest(arglist__11497);
    return audio__delegate(opts__5111__auto__, children__5112__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var b = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__11498) {
    var opts__5111__auto__ = cljs.core.first(arglist__11498);
    var children__5112__auto__ = cljs.core.rest(arglist__11498);
    return b__delegate(opts__5111__auto__, children__5112__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var base = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__11499) {
    var opts__5111__auto__ = cljs.core.first(arglist__11499);
    var children__5112__auto__ = cljs.core.rest(arglist__11499);
    return base__delegate(opts__5111__auto__, children__5112__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var bdi = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__11500) {
    var opts__5111__auto__ = cljs.core.first(arglist__11500);
    var children__5112__auto__ = cljs.core.rest(arglist__11500);
    return bdi__delegate(opts__5111__auto__, children__5112__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var bdo = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__11501) {
    var opts__5111__auto__ = cljs.core.first(arglist__11501);
    var children__5112__auto__ = cljs.core.rest(arglist__11501);
    return bdo__delegate(opts__5111__auto__, children__5112__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var big = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__11502) {
    var opts__5111__auto__ = cljs.core.first(arglist__11502);
    var children__5112__auto__ = cljs.core.rest(arglist__11502);
    return big__delegate(opts__5111__auto__, children__5112__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var blockquote = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__11503) {
    var opts__5111__auto__ = cljs.core.first(arglist__11503);
    var children__5112__auto__ = cljs.core.rest(arglist__11503);
    return blockquote__delegate(opts__5111__auto__, children__5112__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var body = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__11504) {
    var opts__5111__auto__ = cljs.core.first(arglist__11504);
    var children__5112__auto__ = cljs.core.rest(arglist__11504);
    return body__delegate(opts__5111__auto__, children__5112__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var br = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__11505) {
    var opts__5111__auto__ = cljs.core.first(arglist__11505);
    var children__5112__auto__ = cljs.core.rest(arglist__11505);
    return br__delegate(opts__5111__auto__, children__5112__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var button = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__11506) {
    var opts__5111__auto__ = cljs.core.first(arglist__11506);
    var children__5112__auto__ = cljs.core.rest(arglist__11506);
    return button__delegate(opts__5111__auto__, children__5112__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var canvas = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__11507) {
    var opts__5111__auto__ = cljs.core.first(arglist__11507);
    var children__5112__auto__ = cljs.core.rest(arglist__11507);
    return canvas__delegate(opts__5111__auto__, children__5112__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var caption = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__11508) {
    var opts__5111__auto__ = cljs.core.first(arglist__11508);
    var children__5112__auto__ = cljs.core.rest(arglist__11508);
    return caption__delegate(opts__5111__auto__, children__5112__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var cite = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__11509) {
    var opts__5111__auto__ = cljs.core.first(arglist__11509);
    var children__5112__auto__ = cljs.core.rest(arglist__11509);
    return cite__delegate(opts__5111__auto__, children__5112__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var code = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__11510) {
    var opts__5111__auto__ = cljs.core.first(arglist__11510);
    var children__5112__auto__ = cljs.core.rest(arglist__11510);
    return code__delegate(opts__5111__auto__, children__5112__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var col = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__11511) {
    var opts__5111__auto__ = cljs.core.first(arglist__11511);
    var children__5112__auto__ = cljs.core.rest(arglist__11511);
    return col__delegate(opts__5111__auto__, children__5112__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var colgroup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__11512) {
    var opts__5111__auto__ = cljs.core.first(arglist__11512);
    var children__5112__auto__ = cljs.core.rest(arglist__11512);
    return colgroup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var data = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__11513) {
    var opts__5111__auto__ = cljs.core.first(arglist__11513);
    var children__5112__auto__ = cljs.core.rest(arglist__11513);
    return data__delegate(opts__5111__auto__, children__5112__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var datalist = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__11514) {
    var opts__5111__auto__ = cljs.core.first(arglist__11514);
    var children__5112__auto__ = cljs.core.rest(arglist__11514);
    return datalist__delegate(opts__5111__auto__, children__5112__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dd = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__11515) {
    var opts__5111__auto__ = cljs.core.first(arglist__11515);
    var children__5112__auto__ = cljs.core.rest(arglist__11515);
    return dd__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var del = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__11516) {
    var opts__5111__auto__ = cljs.core.first(arglist__11516);
    var children__5112__auto__ = cljs.core.rest(arglist__11516);
    return del__delegate(opts__5111__auto__, children__5112__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dfn = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__11517) {
    var opts__5111__auto__ = cljs.core.first(arglist__11517);
    var children__5112__auto__ = cljs.core.rest(arglist__11517);
    return dfn__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var div = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__11518) {
    var opts__5111__auto__ = cljs.core.first(arglist__11518);
    var children__5112__auto__ = cljs.core.rest(arglist__11518);
    return div__delegate(opts__5111__auto__, children__5112__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dl = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__11519) {
    var opts__5111__auto__ = cljs.core.first(arglist__11519);
    var children__5112__auto__ = cljs.core.rest(arglist__11519);
    return dl__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var dt = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__11520) {
    var opts__5111__auto__ = cljs.core.first(arglist__11520);
    var children__5112__auto__ = cljs.core.rest(arglist__11520);
    return dt__delegate(opts__5111__auto__, children__5112__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var em = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__11521) {
    var opts__5111__auto__ = cljs.core.first(arglist__11521);
    var children__5112__auto__ = cljs.core.rest(arglist__11521);
    return em__delegate(opts__5111__auto__, children__5112__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var embed = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__11522) {
    var opts__5111__auto__ = cljs.core.first(arglist__11522);
    var children__5112__auto__ = cljs.core.rest(arglist__11522);
    return embed__delegate(opts__5111__auto__, children__5112__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var fieldset = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__11523) {
    var opts__5111__auto__ = cljs.core.first(arglist__11523);
    var children__5112__auto__ = cljs.core.rest(arglist__11523);
    return fieldset__delegate(opts__5111__auto__, children__5112__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var figcaption = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__11524) {
    var opts__5111__auto__ = cljs.core.first(arglist__11524);
    var children__5112__auto__ = cljs.core.rest(arglist__11524);
    return figcaption__delegate(opts__5111__auto__, children__5112__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var figure = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__11525) {
    var opts__5111__auto__ = cljs.core.first(arglist__11525);
    var children__5112__auto__ = cljs.core.rest(arglist__11525);
    return figure__delegate(opts__5111__auto__, children__5112__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var footer = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__11526) {
    var opts__5111__auto__ = cljs.core.first(arglist__11526);
    var children__5112__auto__ = cljs.core.rest(arglist__11526);
    return footer__delegate(opts__5111__auto__, children__5112__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var form = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__11527) {
    var opts__5111__auto__ = cljs.core.first(arglist__11527);
    var children__5112__auto__ = cljs.core.rest(arglist__11527);
    return form__delegate(opts__5111__auto__, children__5112__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h1 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__11528) {
    var opts__5111__auto__ = cljs.core.first(arglist__11528);
    var children__5112__auto__ = cljs.core.rest(arglist__11528);
    return h1__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h2 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__11529) {
    var opts__5111__auto__ = cljs.core.first(arglist__11529);
    var children__5112__auto__ = cljs.core.rest(arglist__11529);
    return h2__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h3 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__11530) {
    var opts__5111__auto__ = cljs.core.first(arglist__11530);
    var children__5112__auto__ = cljs.core.rest(arglist__11530);
    return h3__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h4 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__11531) {
    var opts__5111__auto__ = cljs.core.first(arglist__11531);
    var children__5112__auto__ = cljs.core.rest(arglist__11531);
    return h4__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h5 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__11532) {
    var opts__5111__auto__ = cljs.core.first(arglist__11532);
    var children__5112__auto__ = cljs.core.rest(arglist__11532);
    return h5__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var h6 = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__11533) {
    var opts__5111__auto__ = cljs.core.first(arglist__11533);
    var children__5112__auto__ = cljs.core.rest(arglist__11533);
    return h6__delegate(opts__5111__auto__, children__5112__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var head = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__11534) {
    var opts__5111__auto__ = cljs.core.first(arglist__11534);
    var children__5112__auto__ = cljs.core.rest(arglist__11534);
    return head__delegate(opts__5111__auto__, children__5112__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var header = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__11535) {
    var opts__5111__auto__ = cljs.core.first(arglist__11535);
    var children__5112__auto__ = cljs.core.rest(arglist__11535);
    return header__delegate(opts__5111__auto__, children__5112__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var hr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__11536) {
    var opts__5111__auto__ = cljs.core.first(arglist__11536);
    var children__5112__auto__ = cljs.core.rest(arglist__11536);
    return hr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var html = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__11537) {
    var opts__5111__auto__ = cljs.core.first(arglist__11537);
    var children__5112__auto__ = cljs.core.rest(arglist__11537);
    return html__delegate(opts__5111__auto__, children__5112__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var i = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__11538) {
    var opts__5111__auto__ = cljs.core.first(arglist__11538);
    var children__5112__auto__ = cljs.core.rest(arglist__11538);
    return i__delegate(opts__5111__auto__, children__5112__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var iframe = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__11539) {
    var opts__5111__auto__ = cljs.core.first(arglist__11539);
    var children__5112__auto__ = cljs.core.rest(arglist__11539);
    return iframe__delegate(opts__5111__auto__, children__5112__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var img = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__11540) {
    var opts__5111__auto__ = cljs.core.first(arglist__11540);
    var children__5112__auto__ = cljs.core.rest(arglist__11540);
    return img__delegate(opts__5111__auto__, children__5112__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ins = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__11541) {
    var opts__5111__auto__ = cljs.core.first(arglist__11541);
    var children__5112__auto__ = cljs.core.rest(arglist__11541);
    return ins__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var kbd = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__11542) {
    var opts__5111__auto__ = cljs.core.first(arglist__11542);
    var children__5112__auto__ = cljs.core.rest(arglist__11542);
    return kbd__delegate(opts__5111__auto__, children__5112__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var keygen = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__11543) {
    var opts__5111__auto__ = cljs.core.first(arglist__11543);
    var children__5112__auto__ = cljs.core.rest(arglist__11543);
    return keygen__delegate(opts__5111__auto__, children__5112__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var label = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__11544) {
    var opts__5111__auto__ = cljs.core.first(arglist__11544);
    var children__5112__auto__ = cljs.core.rest(arglist__11544);
    return label__delegate(opts__5111__auto__, children__5112__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var legend = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__11545) {
    var opts__5111__auto__ = cljs.core.first(arglist__11545);
    var children__5112__auto__ = cljs.core.rest(arglist__11545);
    return legend__delegate(opts__5111__auto__, children__5112__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var li = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__11546) {
    var opts__5111__auto__ = cljs.core.first(arglist__11546);
    var children__5112__auto__ = cljs.core.rest(arglist__11546);
    return li__delegate(opts__5111__auto__, children__5112__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var link = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__11547) {
    var opts__5111__auto__ = cljs.core.first(arglist__11547);
    var children__5112__auto__ = cljs.core.rest(arglist__11547);
    return link__delegate(opts__5111__auto__, children__5112__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var main = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__11548) {
    var opts__5111__auto__ = cljs.core.first(arglist__11548);
    var children__5112__auto__ = cljs.core.rest(arglist__11548);
    return main__delegate(opts__5111__auto__, children__5112__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var map = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__11549) {
    var opts__5111__auto__ = cljs.core.first(arglist__11549);
    var children__5112__auto__ = cljs.core.rest(arglist__11549);
    return map__delegate(opts__5111__auto__, children__5112__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var mark = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__11550) {
    var opts__5111__auto__ = cljs.core.first(arglist__11550);
    var children__5112__auto__ = cljs.core.rest(arglist__11550);
    return mark__delegate(opts__5111__auto__, children__5112__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var menu = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__11551) {
    var opts__5111__auto__ = cljs.core.first(arglist__11551);
    var children__5112__auto__ = cljs.core.rest(arglist__11551);
    return menu__delegate(opts__5111__auto__, children__5112__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var menuitem = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__11552) {
    var opts__5111__auto__ = cljs.core.first(arglist__11552);
    var children__5112__auto__ = cljs.core.rest(arglist__11552);
    return menuitem__delegate(opts__5111__auto__, children__5112__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var meta = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__11553) {
    var opts__5111__auto__ = cljs.core.first(arglist__11553);
    var children__5112__auto__ = cljs.core.rest(arglist__11553);
    return meta__delegate(opts__5111__auto__, children__5112__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var meter = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__11554) {
    var opts__5111__auto__ = cljs.core.first(arglist__11554);
    var children__5112__auto__ = cljs.core.rest(arglist__11554);
    return meter__delegate(opts__5111__auto__, children__5112__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var nav = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__11555) {
    var opts__5111__auto__ = cljs.core.first(arglist__11555);
    var children__5112__auto__ = cljs.core.rest(arglist__11555);
    return nav__delegate(opts__5111__auto__, children__5112__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var noscript = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__11556) {
    var opts__5111__auto__ = cljs.core.first(arglist__11556);
    var children__5112__auto__ = cljs.core.rest(arglist__11556);
    return noscript__delegate(opts__5111__auto__, children__5112__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var object = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__11557) {
    var opts__5111__auto__ = cljs.core.first(arglist__11557);
    var children__5112__auto__ = cljs.core.rest(arglist__11557);
    return object__delegate(opts__5111__auto__, children__5112__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ol = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__11558) {
    var opts__5111__auto__ = cljs.core.first(arglist__11558);
    var children__5112__auto__ = cljs.core.rest(arglist__11558);
    return ol__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var optgroup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__11559) {
    var opts__5111__auto__ = cljs.core.first(arglist__11559);
    var children__5112__auto__ = cljs.core.rest(arglist__11559);
    return optgroup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var output = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__11560) {
    var opts__5111__auto__ = cljs.core.first(arglist__11560);
    var children__5112__auto__ = cljs.core.rest(arglist__11560);
    return output__delegate(opts__5111__auto__, children__5112__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var p = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__11561) {
    var opts__5111__auto__ = cljs.core.first(arglist__11561);
    var children__5112__auto__ = cljs.core.rest(arglist__11561);
    return p__delegate(opts__5111__auto__, children__5112__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var param = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__11562) {
    var opts__5111__auto__ = cljs.core.first(arglist__11562);
    var children__5112__auto__ = cljs.core.rest(arglist__11562);
    return param__delegate(opts__5111__auto__, children__5112__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var pre = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__11563) {
    var opts__5111__auto__ = cljs.core.first(arglist__11563);
    var children__5112__auto__ = cljs.core.rest(arglist__11563);
    return pre__delegate(opts__5111__auto__, children__5112__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var progress = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__11564) {
    var opts__5111__auto__ = cljs.core.first(arglist__11564);
    var children__5112__auto__ = cljs.core.rest(arglist__11564);
    return progress__delegate(opts__5111__auto__, children__5112__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var q = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__11565) {
    var opts__5111__auto__ = cljs.core.first(arglist__11565);
    var children__5112__auto__ = cljs.core.rest(arglist__11565);
    return q__delegate(opts__5111__auto__, children__5112__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rp = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__11566) {
    var opts__5111__auto__ = cljs.core.first(arglist__11566);
    var children__5112__auto__ = cljs.core.rest(arglist__11566);
    return rp__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rt = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__11567) {
    var opts__5111__auto__ = cljs.core.first(arglist__11567);
    var children__5112__auto__ = cljs.core.rest(arglist__11567);
    return rt__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ruby = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__11568) {
    var opts__5111__auto__ = cljs.core.first(arglist__11568);
    var children__5112__auto__ = cljs.core.rest(arglist__11568);
    return ruby__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var s = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__11569) {
    var opts__5111__auto__ = cljs.core.first(arglist__11569);
    var children__5112__auto__ = cljs.core.rest(arglist__11569);
    return s__delegate(opts__5111__auto__, children__5112__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var samp = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__11570) {
    var opts__5111__auto__ = cljs.core.first(arglist__11570);
    var children__5112__auto__ = cljs.core.rest(arglist__11570);
    return samp__delegate(opts__5111__auto__, children__5112__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var script = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__11571) {
    var opts__5111__auto__ = cljs.core.first(arglist__11571);
    var children__5112__auto__ = cljs.core.rest(arglist__11571);
    return script__delegate(opts__5111__auto__, children__5112__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var section = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__11572) {
    var opts__5111__auto__ = cljs.core.first(arglist__11572);
    var children__5112__auto__ = cljs.core.rest(arglist__11572);
    return section__delegate(opts__5111__auto__, children__5112__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var select = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__11573) {
    var opts__5111__auto__ = cljs.core.first(arglist__11573);
    var children__5112__auto__ = cljs.core.rest(arglist__11573);
    return select__delegate(opts__5111__auto__, children__5112__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var small = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__11574) {
    var opts__5111__auto__ = cljs.core.first(arglist__11574);
    var children__5112__auto__ = cljs.core.rest(arglist__11574);
    return small__delegate(opts__5111__auto__, children__5112__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var source = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__11575) {
    var opts__5111__auto__ = cljs.core.first(arglist__11575);
    var children__5112__auto__ = cljs.core.rest(arglist__11575);
    return source__delegate(opts__5111__auto__, children__5112__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var span = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__11576) {
    var opts__5111__auto__ = cljs.core.first(arglist__11576);
    var children__5112__auto__ = cljs.core.rest(arglist__11576);
    return span__delegate(opts__5111__auto__, children__5112__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var strong = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__11577) {
    var opts__5111__auto__ = cljs.core.first(arglist__11577);
    var children__5112__auto__ = cljs.core.rest(arglist__11577);
    return strong__delegate(opts__5111__auto__, children__5112__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var style = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__11578) {
    var opts__5111__auto__ = cljs.core.first(arglist__11578);
    var children__5112__auto__ = cljs.core.rest(arglist__11578);
    return style__delegate(opts__5111__auto__, children__5112__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var sub = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__11579) {
    var opts__5111__auto__ = cljs.core.first(arglist__11579);
    var children__5112__auto__ = cljs.core.rest(arglist__11579);
    return sub__delegate(opts__5111__auto__, children__5112__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var summary = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__11580) {
    var opts__5111__auto__ = cljs.core.first(arglist__11580);
    var children__5112__auto__ = cljs.core.rest(arglist__11580);
    return summary__delegate(opts__5111__auto__, children__5112__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var sup = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__11581) {
    var opts__5111__auto__ = cljs.core.first(arglist__11581);
    var children__5112__auto__ = cljs.core.rest(arglist__11581);
    return sup__delegate(opts__5111__auto__, children__5112__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var table = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__11582) {
    var opts__5111__auto__ = cljs.core.first(arglist__11582);
    var children__5112__auto__ = cljs.core.rest(arglist__11582);
    return table__delegate(opts__5111__auto__, children__5112__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tbody = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__11583) {
    var opts__5111__auto__ = cljs.core.first(arglist__11583);
    var children__5112__auto__ = cljs.core.rest(arglist__11583);
    return tbody__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var td = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__11584) {
    var opts__5111__auto__ = cljs.core.first(arglist__11584);
    var children__5112__auto__ = cljs.core.rest(arglist__11584);
    return td__delegate(opts__5111__auto__, children__5112__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tfoot = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__11585) {
    var opts__5111__auto__ = cljs.core.first(arglist__11585);
    var children__5112__auto__ = cljs.core.rest(arglist__11585);
    return tfoot__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var th = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__11586) {
    var opts__5111__auto__ = cljs.core.first(arglist__11586);
    var children__5112__auto__ = cljs.core.rest(arglist__11586);
    return th__delegate(opts__5111__auto__, children__5112__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var thead = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__11587) {
    var opts__5111__auto__ = cljs.core.first(arglist__11587);
    var children__5112__auto__ = cljs.core.rest(arglist__11587);
    return thead__delegate(opts__5111__auto__, children__5112__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var time = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__11588) {
    var opts__5111__auto__ = cljs.core.first(arglist__11588);
    var children__5112__auto__ = cljs.core.rest(arglist__11588);
    return time__delegate(opts__5111__auto__, children__5112__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var title = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__11589) {
    var opts__5111__auto__ = cljs.core.first(arglist__11589);
    var children__5112__auto__ = cljs.core.rest(arglist__11589);
    return title__delegate(opts__5111__auto__, children__5112__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var tr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__11590) {
    var opts__5111__auto__ = cljs.core.first(arglist__11590);
    var children__5112__auto__ = cljs.core.rest(arglist__11590);
    return tr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var track = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__11591) {
    var opts__5111__auto__ = cljs.core.first(arglist__11591);
    var children__5112__auto__ = cljs.core.rest(arglist__11591);
    return track__delegate(opts__5111__auto__, children__5112__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var u = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__11592) {
    var opts__5111__auto__ = cljs.core.first(arglist__11592);
    var children__5112__auto__ = cljs.core.rest(arglist__11592);
    return u__delegate(opts__5111__auto__, children__5112__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ul = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__11593) {
    var opts__5111__auto__ = cljs.core.first(arglist__11593);
    var children__5112__auto__ = cljs.core.rest(arglist__11593);
    return ul__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var var$ = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__11594) {
    var opts__5111__auto__ = cljs.core.first(arglist__11594);
    var children__5112__auto__ = cljs.core.rest(arglist__11594);
    return var$__delegate(opts__5111__auto__, children__5112__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var video = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__11595) {
    var opts__5111__auto__ = cljs.core.first(arglist__11595);
    var children__5112__auto__ = cljs.core.rest(arglist__11595);
    return video__delegate(opts__5111__auto__, children__5112__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var wbr = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__11596) {
    var opts__5111__auto__ = cljs.core.first(arglist__11596);
    var children__5112__auto__ = cljs.core.rest(arglist__11596);
    return wbr__delegate(opts__5111__auto__, children__5112__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var circle = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__11597) {
    var opts__5111__auto__ = cljs.core.first(arglist__11597);
    var children__5112__auto__ = cljs.core.rest(arglist__11597);
    return circle__delegate(opts__5111__auto__, children__5112__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var ellipse = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__11598) {
    var opts__5111__auto__ = cljs.core.first(arglist__11598);
    var children__5112__auto__ = cljs.core.rest(arglist__11598);
    return ellipse__delegate(opts__5111__auto__, children__5112__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var g = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__11599) {
    var opts__5111__auto__ = cljs.core.first(arglist__11599);
    var children__5112__auto__ = cljs.core.rest(arglist__11599);
    return g__delegate(opts__5111__auto__, children__5112__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var line = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__11600) {
    var opts__5111__auto__ = cljs.core.first(arglist__11600);
    var children__5112__auto__ = cljs.core.rest(arglist__11600);
    return line__delegate(opts__5111__auto__, children__5112__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var path = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__11601) {
    var opts__5111__auto__ = cljs.core.first(arglist__11601);
    var children__5112__auto__ = cljs.core.rest(arglist__11601);
    return path__delegate(opts__5111__auto__, children__5112__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var polyline = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__11602) {
    var opts__5111__auto__ = cljs.core.first(arglist__11602);
    var children__5112__auto__ = cljs.core.rest(arglist__11602);
    return polyline__delegate(opts__5111__auto__, children__5112__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var rect = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__11603) {
    var opts__5111__auto__ = cljs.core.first(arglist__11603);
    var children__5112__auto__ = cljs.core.rest(arglist__11603);
    return rect__delegate(opts__5111__auto__, children__5112__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var svg = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__11604) {
    var opts__5111__auto__ = cljs.core.first(arglist__11604);
    var children__5112__auto__ = cljs.core.rest(arglist__11604);
    return svg__delegate(opts__5111__auto__, children__5112__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var text = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__11605) {
    var opts__5111__auto__ = cljs.core.first(arglist__11605);
    var children__5112__auto__ = cljs.core.rest(arglist__11605);
    return text__delegate(opts__5111__auto__, children__5112__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var defs = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__11606) {
    var opts__5111__auto__ = cljs.core.first(arglist__11606);
    var children__5112__auto__ = cljs.core.rest(arglist__11606);
    return defs__delegate(opts__5111__auto__, children__5112__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var linearGradient = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__11607) {
    var opts__5111__auto__ = cljs.core.first(arglist__11607);
    var children__5112__auto__ = cljs.core.rest(arglist__11607);
    return linearGradient__delegate(opts__5111__auto__, children__5112__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var polygon = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__11608) {
    var opts__5111__auto__ = cljs.core.first(arglist__11608);
    var children__5112__auto__ = cljs.core.rest(arglist__11608);
    return polygon__delegate(opts__5111__auto__, children__5112__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var radialGradient = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__11609) {
    var opts__5111__auto__ = cljs.core.first(arglist__11609);
    var children__5112__auto__ = cljs.core.rest(arglist__11609);
    return radialGradient__delegate(opts__5111__auto__, children__5112__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5111__auto__, children__5112__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5111__auto__, children__5112__auto__)));
  };
  var stop = function(opts__5111__auto__, var_args) {
    var children__5112__auto__ = null;
    if (arguments.length > 1) {
      children__5112__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5111__auto__, children__5112__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__11610) {
    var opts__5111__auto__ = cljs.core.first(arglist__11610);
    var children__5112__auto__ = cljs.core.rest(arglist__11610);
    return stop__delegate(opts__5111__auto__, children__5112__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj14343 = {};
  return obj14343;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3539__auto__ = port;
    if (and__3539__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4178__auto__ = port == null ? null : port;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj14345 = {};
  return obj14345;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3539__auto__ = port;
    if (and__3539__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4178__auto__ = port == null ? null : port;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj14347 = {};
  return obj14347;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3539__auto__ = chan;
    if (and__3539__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4178__auto__ = chan == null ? null : chan;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3539__auto__ = chan;
    if (and__3539__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4178__auto__ = chan == null ? null : chan;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj14349 = {};
  return obj14349;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3539__auto__ = h;
    if (and__3539__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4178__auto__ = h == null ? null : h;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3539__auto__ = h;
    if (and__3539__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4178__auto__ = h == null ? null : h;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj14351 = {};
  return obj14351;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3539__auto__ = b;
    if (and__3539__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4178__auto__ = b == null ? null : b;
    return function() {
      var or__3551__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj14353 = {};
  return obj14353;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__14354 = cnt + 1;
      cnt = G__14354;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4407__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4407__auto__) {
      var v_14355 = this$.pop();
      if (keep_QMARK_.call(null, v_14355)) {
        this$.unshift(v_14355);
      } else {
      }
      var G__14356 = x + 1;
      x = G__14356;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_14357 = 0;
  while (true) {
    var m_14358 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_14358 == null) {
    } else {
      m_14358.call(null);
      if (count_14357 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__14359 = count_14357 + 1;
        count_14357 = G__14359;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3539__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3539__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t14363 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t14363 = function(val, box, meta14364) {
      this.val = val;
      this.box = box;
      this.meta14364 = meta14364;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t14363.cljs$lang$type = true;
    cljs.core.async.impl.channels.t14363.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t14363";
    cljs.core.async.impl.channels.t14363.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.channels/t14363");
    };
    cljs.core.async.impl.channels.t14363.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t14363.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14365) {
      var self__ = this;
      var _14365__$1 = this;
      return self__.meta14364;
    };
    cljs.core.async.impl.channels.t14363.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14365, meta14364__$1) {
      var self__ = this;
      var _14365__$1 = this;
      return new cljs.core.async.impl.channels.t14363(self__.val, self__.box, meta14364__$1);
    };
    cljs.core.async.impl.channels.__GT_t14363 = function __GT_t14363(val__$1, box__$1, meta14364) {
      return new cljs.core.async.impl.channels.t14363(val__$1, box__$1, meta14364);
    };
  }
  return new cljs.core.async.impl.channels.t14363(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4121__auto__, writer__4122__auto__, opts__4123__auto__) {
  return cljs.core._write.call(null, writer__4122__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_14366 = self__.takes.pop();
      if (taker_14366 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_14366)) {
          var take_cb_14367 = cljs.core.async.impl.protocols.commit.call(null, taker_14366);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_14367, taker_14366, this$__$1) {
            return function() {
              return take_cb_14367.call(null, null);
            };
          }(take_cb_14367, taker_14366, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        var putter_14368 = self__.puts.pop();
        if (!(putter_14368 == null)) {
          var put_handler_14369 = putter_14368.handler;
          var val_14370 = putter_14368.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_14369)) {
            var put_cb_14371 = cljs.core.async.impl.protocols.commit.call(null, put_handler_14369);
            var __14372__$1 = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb_14371, __14372__$1, put_handler_14369, val_14370, putter_14368, _, retval, this$__$1) {
              return function() {
                return put_cb_14371.call(null, true);
              };
            }(put_cb_14371, __14372__$1, put_handler_14369, val_14370, putter_14368, _, retval, this$__$1));
            cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val_14370);
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      return retval;
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, function(put_cb, _, put_handler, val, putter, this$__$1) {
              return function() {
                return put_cb.call(null, true);
              };
            }(put_cb, _, put_handler, val, putter, this$__$1));
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, true);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t14290 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t14290 = function(f, fn_handler, meta14291) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14291 = meta14291;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t14290.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t14290.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t14290";
    cljs.core.async.impl.ioc_helpers.t14290.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.ioc-helpers/t14290");
    };
    cljs.core.async.impl.ioc_helpers.t14290.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t14290.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t14290.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t14290.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14292) {
      var self__ = this;
      var _14292__$1 = this;
      return self__.meta14291;
    };
    cljs.core.async.impl.ioc_helpers.t14290.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14292, meta14291__$1) {
      var self__ = this;
      var _14292__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t14290(self__.f, self__.fn_handler, meta14291__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t14290 = function __GT_t14290(f__$1, fn_handler__$1, meta14291) {
      return new cljs.core.async.impl.ioc_helpers.t14290(f__$1, fn_handler__$1, meta14291);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t14290(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e14294) {
    if (e14294 instanceof Object) {
      var ex = e14294;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e14294;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_14297_14299 = state;
    statearr_14297_14299[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_14297_14299[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_14298_14300 = state;
    statearr_14298_14300[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14298_14300[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_14303_14305 = state;
    statearr_14303_14305[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_14303_14305[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_14304_14306 = state;
    statearr_14304_14306[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_14304_14306[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__14307) {
    var map__14312 = p__14307;
    var map__14312__$1 = cljs.core.seq_QMARK_.call(null, map__14312) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14312) : map__14312;
    var opts = map__14312__$1;
    var statearr_14313_14316 = state;
    statearr_14313_14316[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__14312, map__14312__$1, opts) {
      return function(val) {
        var statearr_14314_14317 = state;
        statearr_14314_14317[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__14312, map__14312__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_14315_14318 = state;
      statearr_14315_14318[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__14307 = null;
    if (arguments.length > 3) {
      p__14307 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__14307);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__14319) {
    var state = cljs.core.first(arglist__14319);
    arglist__14319 = cljs.core.next(arglist__14319);
    var cont_block = cljs.core.first(arglist__14319);
    arglist__14319 = cljs.core.next(arglist__14319);
    var ports = cljs.core.first(arglist__14319);
    var p__14307 = cljs.core.rest(arglist__14319);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__14307);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4137__auto__, k__4138__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4137__auto____$1, k__4138__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4139__auto__, k14321, else__4140__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var G__14323 = k14321 instanceof cljs.core.Keyword ? k14321.fqn : null;
  switch(G__14323) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k14321, else__4140__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4151__auto__, writer__4152__auto__, opts__4153__auto__) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pr_pair__4154__auto__ = function(this__4151__auto____$1) {
    return function(keyval__4155__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4152__auto__, cljs.core.pr_writer, "", " ", "", opts__4153__auto__, keyval__4155__auto__);
    };
  }(this__4151__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4152__auto__, pr_pair__4154__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4153__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4135__auto__) {
  var self__ = this;
  var this__4135__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4131__auto__) {
  var self__ = this;
  var this__4131__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4141__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4132__auto__) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  var h__3962__auto__ = self__.__hash;
  if (!(h__3962__auto__ == null)) {
    return h__3962__auto__;
  } else {
    var h__3962__auto____$1 = cljs.core.hash_imap.call(null, this__4132__auto____$1);
    self__.__hash = h__3962__auto____$1;
    return h__3962__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4133__auto__, other__4134__auto__) {
  var self__ = this;
  var this__4133__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = other__4134__auto__;
    if (cljs.core.truth_(and__3539__auto__)) {
      return this__4133__auto____$1.constructor === other__4134__auto__.constructor && cljs.core.equiv_map.call(null, this__4133__auto____$1, other__4134__auto__);
    } else {
      return and__3539__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4146__auto__, k__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4147__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4146__auto____$1), self__.__meta), k__4147__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4147__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4144__auto__, k__4145__auto__, G__14320) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  var pred__14324 = cljs.core.keyword_identical_QMARK_;
  var expr__14325 = k__4145__auto__;
  if (cljs.core.truth_(pred__14324.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__14325))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__14320, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__14324.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__14325))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__14320, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__14324.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__14325))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__14320, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__14324.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__14325))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__14320, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__14324.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__14325))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__14320, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4145__auto__, G__14320), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4149__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4136__auto__, G__14320) {
  var self__ = this;
  var this__4136__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__14320, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4142__auto__, entry__4143__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4143__auto__)) {
    return cljs.core._assoc.call(null, this__4142__auto____$1, cljs.core._nth.call(null, entry__4143__auto__, 0), cljs.core._nth.call(null, entry__4143__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4142__auto____$1, entry__4143__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4171__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4171__auto__, writer__4172__auto__) {
  return cljs.core._write.call(null, writer__4172__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__14322) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__14322), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__14322), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__14322), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__14322), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__14322), null, cljs.core.dissoc.call(null, G__14322, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_14329 = state;
  statearr_14329[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_14329;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3539__auto__ = exception;
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3539__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = exception;
        if (cljs.core.truth_(and__3539__auto__)) {
          var and__3539__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3539__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        var statearr_14335 = state;
        statearr_14335[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_14335[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_14335[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_14335[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_14335;
      } else {
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = exception;
          if (cljs.core.truth_(and__3539__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3539__auto__;
          }
        }())) {
          var statearr_14336_14340 = state;
          statearr_14336_14340[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__14341 = state;
          state = G__14341;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3539__auto__ = exception;
            if (cljs.core.truth_(and__3539__auto__)) {
              var and__3539__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3539__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3539__auto____$1;
              }
            } else {
              return and__3539__auto__;
            }
          }())) {
            var statearr_14337 = state;
            statearr_14337[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_14337[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_14337;
          } else {
            if (cljs.core.truth_(function() {
              var and__3539__auto__ = cljs.core.not.call(null, exception);
              if (and__3539__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3539__auto__;
              }
            }())) {
              var statearr_14338 = state;
              statearr_14338[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_14338[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_14338;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_14339 = state;
                statearr_14339[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_14339[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_14339;
              } else {
                throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__14263 = level + 1;
        level = G__14263;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_14264 = 0;
    while (true) {
      if (i_14264 < arr.length) {
        arr[i_14264] = null;
        var G__14265 = i_14264 + 1;
        i_14264 = G__14265;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__14266 = x_SINGLEQUOTE_;
                x__$1 = G__14266;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__14267 = x__$1;
        var G__14268 = k;
        var G__14269 = level - 1;
        var G__14270 = update;
        x = G__14267;
        k = G__14268;
        level = G__14269;
        update = G__14270;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_14271 = self__.level + 1;
      while (true) {
        if (i_14271 <= new_level + 1) {
          update[i_14271] = self__.header;
          var G__14272 = i_14271 + 1;
          i_14271 = G__14272;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_14273 = 0;
    while (true) {
      if (i_14273 <= self__.level) {
        var links_14274 = update[i_14273].forward;
        if (links_14274[i_14273] === x__$1) {
          links_14274[i_14273] = x__$1.forward[i_14273];
          var G__14275 = i_14273 + 1;
          i_14273 = G__14275;
          continue;
        } else {
          var G__14276 = i_14273 + 1;
          i_14273 = G__14276;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__14277 = x_SINGLEQUOTE_;
              x__$1 = G__14277;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__14278 = nx;
        var G__14279 = level__$1 - 1;
        x = G__14278;
        level__$1 = G__14279;
        continue;
      } else {
        var G__14280 = x;
        var G__14281 = level__$1 - 1;
        x = G__14280;
        level__$1 = G__14281;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__14282 = x_SINGLEQUOTE_;
              x__$1 = G__14282;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__14283 = nx;
        var G__14284 = level__$1 - 1;
        x = G__14283;
        level__$1 = G__14284;
        continue;
      } else {
        var G__14285 = x;
        var G__14286 = level__$1 - 1;
        x = G__14285;
        level__$1 = G__14286;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3551__auto__ = cljs.core.truth_(function() {
    var and__3539__auto__ = me;
    if (cljs.core.truth_(and__3539__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3539__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3551__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3551__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t11614 !== "undefined") {
  } else {
    cljs.core.async.t11614 = function(f, fn_handler, meta11615) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta11615 = meta11615;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11614.cljs$lang$type = true;
    cljs.core.async.t11614.cljs$lang$ctorStr = "cljs.core.async/t11614";
    cljs.core.async.t11614.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11614");
    };
    cljs.core.async.t11614.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11614.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t11614.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t11614.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11616) {
      var self__ = this;
      var _11616__$1 = this;
      return self__.meta11615;
    };
    cljs.core.async.t11614.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11616, meta11615__$1) {
      var self__ = this;
      var _11616__$1 = this;
      return new cljs.core.async.t11614(self__.f, self__.fn_handler, meta11615__$1);
    };
    cljs.core.async.__GT_t11614 = function __GT_t11614(f__$1, fn_handler__$1, meta11615) {
      return new cljs.core.async.t11614(f__$1, fn_handler__$1, meta11615);
    };
  }
  return new cljs.core.async.t11614(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__11618 = buff;
  if (G__11618) {
    var bit__4201__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = bit__4201__auto__;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return G__11618.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__11618.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11618);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__11618);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_11619 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_11619);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_11619, ret) {
          return function() {
            return fn1.call(null, val_11619);
          };
        }(val_11619, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4407__auto___11620 = n;
  var x_11621 = 0;
  while (true) {
    if (x_11621 < n__4407__auto___11620) {
      a[x_11621] = 0;
      var G__11622 = x_11621 + 1;
      x_11621 = G__11622;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__11623 = i + 1;
      i = G__11623;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t11627 !== "undefined") {
  } else {
    cljs.core.async.t11627 = function(flag, alt_flag, meta11628) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta11628 = meta11628;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11627.cljs$lang$type = true;
    cljs.core.async.t11627.cljs$lang$ctorStr = "cljs.core.async/t11627";
    cljs.core.async.t11627.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11627");
      };
    }(flag);
    cljs.core.async.t11627.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11627.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t11627.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t11627.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_11629) {
        var self__ = this;
        var _11629__$1 = this;
        return self__.meta11628;
      };
    }(flag);
    cljs.core.async.t11627.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_11629, meta11628__$1) {
        var self__ = this;
        var _11629__$1 = this;
        return new cljs.core.async.t11627(self__.flag, self__.alt_flag, meta11628__$1);
      };
    }(flag);
    cljs.core.async.__GT_t11627 = function(flag) {
      return function __GT_t11627(flag__$1, alt_flag__$1, meta11628) {
        return new cljs.core.async.t11627(flag__$1, alt_flag__$1, meta11628);
      };
    }(flag);
  }
  return new cljs.core.async.t11627(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t11633 !== "undefined") {
  } else {
    cljs.core.async.t11633 = function(cb, flag, alt_handler, meta11634) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta11634 = meta11634;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11633.cljs$lang$type = true;
    cljs.core.async.t11633.cljs$lang$ctorStr = "cljs.core.async/t11633";
    cljs.core.async.t11633.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11633");
    };
    cljs.core.async.t11633.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11633.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t11633.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t11633.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11635) {
      var self__ = this;
      var _11635__$1 = this;
      return self__.meta11634;
    };
    cljs.core.async.t11633.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11635, meta11634__$1) {
      var self__ = this;
      var _11635__$1 = this;
      return new cljs.core.async.t11633(self__.cb, self__.flag, self__.alt_handler, meta11634__$1);
    };
    cljs.core.async.__GT_t11633 = function __GT_t11633(cb__$1, flag__$1, alt_handler__$1, meta11634) {
      return new cljs.core.async.t11633(cb__$1, flag__$1, alt_handler__$1, meta11634);
    };
  }
  return new cljs.core.async.t11633(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__11636_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11636_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__11637_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11637_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3551__auto__ = wport;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__11638 = i + 1;
          i = G__11638;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3551__auto__ = ret;
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3539__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3539__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3539__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__11639) {
    var map__11641 = p__11639;
    var map__11641__$1 = cljs.core.seq_QMARK_.call(null, map__11641) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11641) : map__11641;
    var opts = map__11641__$1;
    throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__11639 = null;
    if (arguments.length > 1) {
      p__11639 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__11639);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__11642) {
    var ports = cljs.core.first(arglist__11642);
    var p__11639 = cljs.core.rest(arglist__11642);
    return alts_BANG___delegate(ports, p__11639);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t11650 !== "undefined") {
  } else {
    cljs.core.async.t11650 = function(ch, f, map_LT_, meta11651) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta11651 = meta11651;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11650.cljs$lang$type = true;
    cljs.core.async.t11650.cljs$lang$ctorStr = "cljs.core.async/t11650";
    cljs.core.async.t11650.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11650");
    };
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t11653 !== "undefined") {
        } else {
          cljs.core.async.t11653 = function(fn1, _, meta11651, ch, f, map_LT_, meta11654) {
            this.fn1 = fn1;
            this._ = _;
            this.meta11651 = meta11651;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta11654 = meta11654;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t11653.cljs$lang$type = true;
          cljs.core.async.t11653.cljs$lang$ctorStr = "cljs.core.async/t11653";
          cljs.core.async.t11653.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
              return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11653");
            };
          }(___$1);
          cljs.core.async.t11653.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t11653.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t11653.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t11653.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__11643_SHARP_) {
                  return f1.call(null, p1__11643_SHARP_ == null ? null : self__.f.call(null, p1__11643_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t11653.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_11655) {
              var self__ = this;
              var _11655__$1 = this;
              return self__.meta11654;
            };
          }(___$1);
          cljs.core.async.t11653.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_11655, meta11654__$1) {
              var self__ = this;
              var _11655__$1 = this;
              return new cljs.core.async.t11653(self__.fn1, self__._, self__.meta11651, self__.ch, self__.f, self__.map_LT_, meta11654__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t11653 = function(___$1) {
            return function __GT_t11653(fn1__$1, ___$2, meta11651__$1, ch__$2, f__$2, map_LT___$2, meta11654) {
              return new cljs.core.async.t11653(fn1__$1, ___$2, meta11651__$1, ch__$2, f__$2, map_LT___$2, meta11654);
            };
          }(___$1);
        }
        return new cljs.core.async.t11653(fn1, ___$1, self__.meta11651, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = ret;
        if (cljs.core.truth_(and__3539__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3539__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11650.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t11650.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11652) {
      var self__ = this;
      var _11652__$1 = this;
      return self__.meta11651;
    };
    cljs.core.async.t11650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11652, meta11651__$1) {
      var self__ = this;
      var _11652__$1 = this;
      return new cljs.core.async.t11650(self__.ch, self__.f, self__.map_LT_, meta11651__$1);
    };
    cljs.core.async.__GT_t11650 = function __GT_t11650(ch__$1, f__$1, map_LT___$1, meta11651) {
      return new cljs.core.async.t11650(ch__$1, f__$1, map_LT___$1, meta11651);
    };
  }
  return new cljs.core.async.t11650(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t11659 !== "undefined") {
  } else {
    cljs.core.async.t11659 = function(ch, f, map_GT_, meta11660) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta11660 = meta11660;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11659.cljs$lang$type = true;
    cljs.core.async.t11659.cljs$lang$ctorStr = "cljs.core.async/t11659";
    cljs.core.async.t11659.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11659");
    };
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11659.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11659.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11661) {
      var self__ = this;
      var _11661__$1 = this;
      return self__.meta11660;
    };
    cljs.core.async.t11659.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11661, meta11660__$1) {
      var self__ = this;
      var _11661__$1 = this;
      return new cljs.core.async.t11659(self__.ch, self__.f, self__.map_GT_, meta11660__$1);
    };
    cljs.core.async.__GT_t11659 = function __GT_t11659(ch__$1, f__$1, map_GT___$1, meta11660) {
      return new cljs.core.async.t11659(ch__$1, f__$1, map_GT___$1, meta11660);
    };
  }
  return new cljs.core.async.t11659(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t11665 !== "undefined") {
  } else {
    cljs.core.async.t11665 = function(ch, p, filter_GT_, meta11666) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta11666 = meta11666;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t11665.cljs$lang$type = true;
    cljs.core.async.t11665.cljs$lang$ctorStr = "cljs.core.async/t11665";
    cljs.core.async.t11665.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t11665");
    };
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t11665.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t11665.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11667) {
      var self__ = this;
      var _11667__$1 = this;
      return self__.meta11666;
    };
    cljs.core.async.t11665.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11667, meta11666__$1) {
      var self__ = this;
      var _11667__$1 = this;
      return new cljs.core.async.t11665(self__.ch, self__.p, self__.filter_GT_, meta11666__$1);
    };
    cljs.core.async.__GT_t11665 = function __GT_t11665(ch__$1, p__$1, filter_GT___$1, meta11666) {
      return new cljs.core.async.t11665(ch__$1, p__$1, filter_GT___$1, meta11666);
    };
  }
  return new cljs.core.async.t11665(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___11750 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___11750, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___11750, out) {
            return function(state_11729) {
              var state_val_11730 = state_11729[1];
              if (state_val_11730 === 7) {
                var inst_11725 = state_11729[2];
                var state_11729__$1 = state_11729;
                var statearr_11731_11751 = state_11729__$1;
                statearr_11731_11751[2] = inst_11725;
                statearr_11731_11751[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11730 === 1) {
                  var state_11729__$1 = state_11729;
                  var statearr_11732_11752 = state_11729__$1;
                  statearr_11732_11752[2] = null;
                  statearr_11732_11752[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11730 === 4) {
                    var inst_11711 = state_11729[7];
                    var inst_11711__$1 = state_11729[2];
                    var inst_11712 = inst_11711__$1 == null;
                    var state_11729__$1 = function() {
                      var statearr_11733 = state_11729;
                      statearr_11733[7] = inst_11711__$1;
                      return statearr_11733;
                    }();
                    if (cljs.core.truth_(inst_11712)) {
                      var statearr_11734_11753 = state_11729__$1;
                      statearr_11734_11753[1] = 5;
                    } else {
                      var statearr_11735_11754 = state_11729__$1;
                      statearr_11735_11754[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11730 === 6) {
                      var inst_11711 = state_11729[7];
                      var inst_11716 = p.call(null, inst_11711);
                      var state_11729__$1 = state_11729;
                      if (cljs.core.truth_(inst_11716)) {
                        var statearr_11736_11755 = state_11729__$1;
                        statearr_11736_11755[1] = 8;
                      } else {
                        var statearr_11737_11756 = state_11729__$1;
                        statearr_11737_11756[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11730 === 3) {
                        var inst_11727 = state_11729[2];
                        var state_11729__$1 = state_11729;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11729__$1, inst_11727);
                      } else {
                        if (state_val_11730 === 2) {
                          var state_11729__$1 = state_11729;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11729__$1, 4, ch);
                        } else {
                          if (state_val_11730 === 11) {
                            var inst_11719 = state_11729[2];
                            var state_11729__$1 = state_11729;
                            var statearr_11738_11757 = state_11729__$1;
                            statearr_11738_11757[2] = inst_11719;
                            statearr_11738_11757[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11730 === 9) {
                              var state_11729__$1 = state_11729;
                              var statearr_11739_11758 = state_11729__$1;
                              statearr_11739_11758[2] = null;
                              statearr_11739_11758[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11730 === 5) {
                                var inst_11714 = cljs.core.async.close_BANG_.call(null, out);
                                var state_11729__$1 = state_11729;
                                var statearr_11740_11759 = state_11729__$1;
                                statearr_11740_11759[2] = inst_11714;
                                statearr_11740_11759[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11730 === 10) {
                                  var inst_11722 = state_11729[2];
                                  var state_11729__$1 = function() {
                                    var statearr_11741 = state_11729;
                                    statearr_11741[8] = inst_11722;
                                    return statearr_11741;
                                  }();
                                  var statearr_11742_11760 = state_11729__$1;
                                  statearr_11742_11760[2] = null;
                                  statearr_11742_11760[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11730 === 8) {
                                    var inst_11711 = state_11729[7];
                                    var state_11729__$1 = state_11729;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11729__$1, 11, out, inst_11711);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___11750, out);
          return function(switch__6353__auto__, c__6368__auto___11750, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_11746 = [null, null, null, null, null, null, null, null, null];
                statearr_11746[0] = state_machine__6354__auto__;
                statearr_11746[1] = 1;
                return statearr_11746;
              };
              var state_machine__6354__auto____1 = function(state_11729) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_11729);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e11747) {
                      if (e11747 instanceof Object) {
                        var ex__6357__auto__ = e11747;
                        var statearr_11748_11761 = state_11729;
                        statearr_11748_11761[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11729);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11747;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11762 = state_11729;
                    state_11729 = G__11762;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_11729) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_11729);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___11750, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_11749 = f__6369__auto__.call(null);
          statearr_11749[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___11750;
          return statearr_11749;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___11750, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_11928) {
            var state_val_11929 = state_11928[1];
            if (state_val_11929 === 7) {
              var inst_11924 = state_11928[2];
              var state_11928__$1 = state_11928;
              var statearr_11930_11971 = state_11928__$1;
              statearr_11930_11971[2] = inst_11924;
              statearr_11930_11971[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11929 === 20) {
                var inst_11894 = state_11928[7];
                var inst_11905 = state_11928[2];
                var inst_11906 = cljs.core.next.call(null, inst_11894);
                var inst_11880 = inst_11906;
                var inst_11881 = null;
                var inst_11882 = 0;
                var inst_11883 = 0;
                var state_11928__$1 = function() {
                  var statearr_11931 = state_11928;
                  statearr_11931[8] = inst_11882;
                  statearr_11931[9] = inst_11881;
                  statearr_11931[10] = inst_11883;
                  statearr_11931[11] = inst_11880;
                  statearr_11931[12] = inst_11905;
                  return statearr_11931;
                }();
                var statearr_11932_11972 = state_11928__$1;
                statearr_11932_11972[2] = null;
                statearr_11932_11972[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11929 === 1) {
                  var state_11928__$1 = state_11928;
                  var statearr_11933_11973 = state_11928__$1;
                  statearr_11933_11973[2] = null;
                  statearr_11933_11973[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11929 === 4) {
                    var inst_11869 = state_11928[13];
                    var inst_11869__$1 = state_11928[2];
                    var inst_11870 = inst_11869__$1 == null;
                    var state_11928__$1 = function() {
                      var statearr_11934 = state_11928;
                      statearr_11934[13] = inst_11869__$1;
                      return statearr_11934;
                    }();
                    if (cljs.core.truth_(inst_11870)) {
                      var statearr_11935_11974 = state_11928__$1;
                      statearr_11935_11974[1] = 5;
                    } else {
                      var statearr_11936_11975 = state_11928__$1;
                      statearr_11936_11975[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11929 === 15) {
                      var state_11928__$1 = state_11928;
                      var statearr_11940_11976 = state_11928__$1;
                      statearr_11940_11976[2] = null;
                      statearr_11940_11976[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11929 === 21) {
                        var state_11928__$1 = state_11928;
                        var statearr_11941_11977 = state_11928__$1;
                        statearr_11941_11977[2] = null;
                        statearr_11941_11977[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11929 === 13) {
                          var inst_11882 = state_11928[8];
                          var inst_11881 = state_11928[9];
                          var inst_11883 = state_11928[10];
                          var inst_11880 = state_11928[11];
                          var inst_11890 = state_11928[2];
                          var inst_11891 = inst_11883 + 1;
                          var tmp11937 = inst_11882;
                          var tmp11938 = inst_11881;
                          var tmp11939 = inst_11880;
                          var inst_11880__$1 = tmp11939;
                          var inst_11881__$1 = tmp11938;
                          var inst_11882__$1 = tmp11937;
                          var inst_11883__$1 = inst_11891;
                          var state_11928__$1 = function() {
                            var statearr_11942 = state_11928;
                            statearr_11942[8] = inst_11882__$1;
                            statearr_11942[14] = inst_11890;
                            statearr_11942[9] = inst_11881__$1;
                            statearr_11942[10] = inst_11883__$1;
                            statearr_11942[11] = inst_11880__$1;
                            return statearr_11942;
                          }();
                          var statearr_11943_11978 = state_11928__$1;
                          statearr_11943_11978[2] = null;
                          statearr_11943_11978[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11929 === 22) {
                            var state_11928__$1 = state_11928;
                            var statearr_11944_11979 = state_11928__$1;
                            statearr_11944_11979[2] = null;
                            statearr_11944_11979[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11929 === 6) {
                              var inst_11869 = state_11928[13];
                              var inst_11878 = f.call(null, inst_11869);
                              var inst_11879 = cljs.core.seq.call(null, inst_11878);
                              var inst_11880 = inst_11879;
                              var inst_11881 = null;
                              var inst_11882 = 0;
                              var inst_11883 = 0;
                              var state_11928__$1 = function() {
                                var statearr_11945 = state_11928;
                                statearr_11945[8] = inst_11882;
                                statearr_11945[9] = inst_11881;
                                statearr_11945[10] = inst_11883;
                                statearr_11945[11] = inst_11880;
                                return statearr_11945;
                              }();
                              var statearr_11946_11980 = state_11928__$1;
                              statearr_11946_11980[2] = null;
                              statearr_11946_11980[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11929 === 17) {
                                var inst_11894 = state_11928[7];
                                var inst_11898 = cljs.core.chunk_first.call(null, inst_11894);
                                var inst_11899 = cljs.core.chunk_rest.call(null, inst_11894);
                                var inst_11900 = cljs.core.count.call(null, inst_11898);
                                var inst_11880 = inst_11899;
                                var inst_11881 = inst_11898;
                                var inst_11882 = inst_11900;
                                var inst_11883 = 0;
                                var state_11928__$1 = function() {
                                  var statearr_11947 = state_11928;
                                  statearr_11947[8] = inst_11882;
                                  statearr_11947[9] = inst_11881;
                                  statearr_11947[10] = inst_11883;
                                  statearr_11947[11] = inst_11880;
                                  return statearr_11947;
                                }();
                                var statearr_11948_11981 = state_11928__$1;
                                statearr_11948_11981[2] = null;
                                statearr_11948_11981[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11929 === 3) {
                                  var inst_11926 = state_11928[2];
                                  var state_11928__$1 = state_11928;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11928__$1, inst_11926);
                                } else {
                                  if (state_val_11929 === 12) {
                                    var inst_11914 = state_11928[2];
                                    var state_11928__$1 = state_11928;
                                    var statearr_11949_11982 = state_11928__$1;
                                    statearr_11949_11982[2] = inst_11914;
                                    statearr_11949_11982[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11929 === 2) {
                                      var state_11928__$1 = state_11928;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11928__$1, 4, in$);
                                    } else {
                                      if (state_val_11929 === 23) {
                                        var inst_11922 = state_11928[2];
                                        var state_11928__$1 = state_11928;
                                        var statearr_11950_11983 = state_11928__$1;
                                        statearr_11950_11983[2] = inst_11922;
                                        statearr_11950_11983[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11929 === 19) {
                                          var inst_11909 = state_11928[2];
                                          var state_11928__$1 = state_11928;
                                          var statearr_11951_11984 = state_11928__$1;
                                          statearr_11951_11984[2] = inst_11909;
                                          statearr_11951_11984[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11929 === 11) {
                                            var inst_11880 = state_11928[11];
                                            var inst_11894 = state_11928[7];
                                            var inst_11894__$1 = cljs.core.seq.call(null, inst_11880);
                                            var state_11928__$1 = function() {
                                              var statearr_11952 = state_11928;
                                              statearr_11952[7] = inst_11894__$1;
                                              return statearr_11952;
                                            }();
                                            if (inst_11894__$1) {
                                              var statearr_11953_11985 = state_11928__$1;
                                              statearr_11953_11985[1] = 14;
                                            } else {
                                              var statearr_11954_11986 = state_11928__$1;
                                              statearr_11954_11986[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11929 === 9) {
                                              var inst_11916 = state_11928[2];
                                              var inst_11917 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_11928__$1 = function() {
                                                var statearr_11955 = state_11928;
                                                statearr_11955[15] = inst_11916;
                                                return statearr_11955;
                                              }();
                                              if (cljs.core.truth_(inst_11917)) {
                                                var statearr_11956_11987 = state_11928__$1;
                                                statearr_11956_11987[1] = 21;
                                              } else {
                                                var statearr_11957_11988 = state_11928__$1;
                                                statearr_11957_11988[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11929 === 5) {
                                                var inst_11872 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_11928__$1 = state_11928;
                                                var statearr_11958_11989 = state_11928__$1;
                                                statearr_11958_11989[2] = inst_11872;
                                                statearr_11958_11989[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11929 === 14) {
                                                  var inst_11894 = state_11928[7];
                                                  var inst_11896 = cljs.core.chunked_seq_QMARK_.call(null, inst_11894);
                                                  var state_11928__$1 = state_11928;
                                                  if (inst_11896) {
                                                    var statearr_11959_11990 = state_11928__$1;
                                                    statearr_11959_11990[1] = 17;
                                                  } else {
                                                    var statearr_11960_11991 = state_11928__$1;
                                                    statearr_11960_11991[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11929 === 16) {
                                                    var inst_11912 = state_11928[2];
                                                    var state_11928__$1 = state_11928;
                                                    var statearr_11961_11992 = state_11928__$1;
                                                    statearr_11961_11992[2] = inst_11912;
                                                    statearr_11961_11992[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11929 === 10) {
                                                      var inst_11881 = state_11928[9];
                                                      var inst_11883 = state_11928[10];
                                                      var inst_11888 = cljs.core._nth.call(null, inst_11881, inst_11883);
                                                      var state_11928__$1 = state_11928;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11928__$1, 13, out, inst_11888);
                                                    } else {
                                                      if (state_val_11929 === 18) {
                                                        var inst_11894 = state_11928[7];
                                                        var inst_11903 = cljs.core.first.call(null, inst_11894);
                                                        var state_11928__$1 = state_11928;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11928__$1, 20, out, inst_11903);
                                                      } else {
                                                        if (state_val_11929 === 8) {
                                                          var inst_11882 = state_11928[8];
                                                          var inst_11883 = state_11928[10];
                                                          var inst_11885 = inst_11883 < inst_11882;
                                                          var inst_11886 = inst_11885;
                                                          var state_11928__$1 = state_11928;
                                                          if (cljs.core.truth_(inst_11886)) {
                                                            var statearr_11962_11993 = state_11928__$1;
                                                            statearr_11962_11993[1] = 10;
                                                          } else {
                                                            var statearr_11963_11994 = state_11928__$1;
                                                            statearr_11963_11994[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_11967 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11967[0] = state_machine__6354__auto__;
              statearr_11967[1] = 1;
              return statearr_11967;
            };
            var state_machine__6354__auto____1 = function(state_11928) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_11928);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e11968) {
                    if (e11968 instanceof Object) {
                      var ex__6357__auto__ = e11968;
                      var statearr_11969_11995 = state_11928;
                      statearr_11969_11995[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11928);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11968;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11996 = state_11928;
                  state_11928 = G__11996;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_11928) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_11928);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_11970 = f__6369__auto__.call(null);
        statearr_11970[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_11970;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6368__auto___12091 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___12091) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___12091) {
            return function(state_12067) {
              var state_val_12068 = state_12067[1];
              if (state_val_12068 === 7) {
                var inst_12063 = state_12067[2];
                var state_12067__$1 = state_12067;
                var statearr_12069_12092 = state_12067__$1;
                statearr_12069_12092[2] = inst_12063;
                statearr_12069_12092[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12068 === 1) {
                  var state_12067__$1 = state_12067;
                  var statearr_12070_12093 = state_12067__$1;
                  statearr_12070_12093[2] = null;
                  statearr_12070_12093[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12068 === 4) {
                    var inst_12046 = state_12067[7];
                    var inst_12046__$1 = state_12067[2];
                    var inst_12047 = inst_12046__$1 == null;
                    var state_12067__$1 = function() {
                      var statearr_12071 = state_12067;
                      statearr_12071[7] = inst_12046__$1;
                      return statearr_12071;
                    }();
                    if (cljs.core.truth_(inst_12047)) {
                      var statearr_12072_12094 = state_12067__$1;
                      statearr_12072_12094[1] = 5;
                    } else {
                      var statearr_12073_12095 = state_12067__$1;
                      statearr_12073_12095[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12068 === 13) {
                      var state_12067__$1 = state_12067;
                      var statearr_12074_12096 = state_12067__$1;
                      statearr_12074_12096[2] = null;
                      statearr_12074_12096[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12068 === 6) {
                        var inst_12046 = state_12067[7];
                        var state_12067__$1 = state_12067;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12067__$1, 11, to, inst_12046);
                      } else {
                        if (state_val_12068 === 3) {
                          var inst_12065 = state_12067[2];
                          var state_12067__$1 = state_12067;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12067__$1, inst_12065);
                        } else {
                          if (state_val_12068 === 12) {
                            var state_12067__$1 = state_12067;
                            var statearr_12075_12097 = state_12067__$1;
                            statearr_12075_12097[2] = null;
                            statearr_12075_12097[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12068 === 2) {
                              var state_12067__$1 = state_12067;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12067__$1, 4, from);
                            } else {
                              if (state_val_12068 === 11) {
                                var inst_12056 = state_12067[2];
                                var state_12067__$1 = state_12067;
                                if (cljs.core.truth_(inst_12056)) {
                                  var statearr_12076_12098 = state_12067__$1;
                                  statearr_12076_12098[1] = 12;
                                } else {
                                  var statearr_12077_12099 = state_12067__$1;
                                  statearr_12077_12099[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12068 === 9) {
                                  var state_12067__$1 = state_12067;
                                  var statearr_12078_12100 = state_12067__$1;
                                  statearr_12078_12100[2] = null;
                                  statearr_12078_12100[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12068 === 5) {
                                    var state_12067__$1 = state_12067;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_12079_12101 = state_12067__$1;
                                      statearr_12079_12101[1] = 8;
                                    } else {
                                      var statearr_12080_12102 = state_12067__$1;
                                      statearr_12080_12102[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12068 === 14) {
                                      var inst_12061 = state_12067[2];
                                      var state_12067__$1 = state_12067;
                                      var statearr_12081_12103 = state_12067__$1;
                                      statearr_12081_12103[2] = inst_12061;
                                      statearr_12081_12103[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12068 === 10) {
                                        var inst_12053 = state_12067[2];
                                        var state_12067__$1 = state_12067;
                                        var statearr_12082_12104 = state_12067__$1;
                                        statearr_12082_12104[2] = inst_12053;
                                        statearr_12082_12104[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12068 === 8) {
                                          var inst_12050 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_12067__$1 = state_12067;
                                          var statearr_12083_12105 = state_12067__$1;
                                          statearr_12083_12105[2] = inst_12050;
                                          statearr_12083_12105[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___12091);
          return function(switch__6353__auto__, c__6368__auto___12091) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_12087 = [null, null, null, null, null, null, null, null];
                statearr_12087[0] = state_machine__6354__auto__;
                statearr_12087[1] = 1;
                return statearr_12087;
              };
              var state_machine__6354__auto____1 = function(state_12067) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_12067);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e12088) {
                      if (e12088 instanceof Object) {
                        var ex__6357__auto__ = e12088;
                        var statearr_12089_12106 = state_12067;
                        statearr_12089_12106[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12067);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12088;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12107 = state_12067;
                    state_12067 = G__12107;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_12067) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_12067);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___12091);
        }();
        var state__6370__auto__ = function() {
          var statearr_12090 = f__6369__auto__.call(null);
          statearr_12090[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___12091;
          return statearr_12090;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___12091));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6368__auto___12208 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___12208, tc, fc) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___12208, tc, fc) {
            return function(state_12183) {
              var state_val_12184 = state_12183[1];
              if (state_val_12184 === 7) {
                var inst_12179 = state_12183[2];
                var state_12183__$1 = state_12183;
                var statearr_12185_12209 = state_12183__$1;
                statearr_12185_12209[2] = inst_12179;
                statearr_12185_12209[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12184 === 1) {
                  var state_12183__$1 = state_12183;
                  var statearr_12186_12210 = state_12183__$1;
                  statearr_12186_12210[2] = null;
                  statearr_12186_12210[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12184 === 4) {
                    var inst_12160 = state_12183[7];
                    var inst_12160__$1 = state_12183[2];
                    var inst_12161 = inst_12160__$1 == null;
                    var state_12183__$1 = function() {
                      var statearr_12187 = state_12183;
                      statearr_12187[7] = inst_12160__$1;
                      return statearr_12187;
                    }();
                    if (cljs.core.truth_(inst_12161)) {
                      var statearr_12188_12211 = state_12183__$1;
                      statearr_12188_12211[1] = 5;
                    } else {
                      var statearr_12189_12212 = state_12183__$1;
                      statearr_12189_12212[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12184 === 13) {
                      var state_12183__$1 = state_12183;
                      var statearr_12190_12213 = state_12183__$1;
                      statearr_12190_12213[2] = null;
                      statearr_12190_12213[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12184 === 6) {
                        var inst_12160 = state_12183[7];
                        var inst_12166 = p.call(null, inst_12160);
                        var state_12183__$1 = state_12183;
                        if (cljs.core.truth_(inst_12166)) {
                          var statearr_12191_12214 = state_12183__$1;
                          statearr_12191_12214[1] = 9;
                        } else {
                          var statearr_12192_12215 = state_12183__$1;
                          statearr_12192_12215[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12184 === 3) {
                          var inst_12181 = state_12183[2];
                          var state_12183__$1 = state_12183;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12183__$1, inst_12181);
                        } else {
                          if (state_val_12184 === 12) {
                            var state_12183__$1 = state_12183;
                            var statearr_12193_12216 = state_12183__$1;
                            statearr_12193_12216[2] = null;
                            statearr_12193_12216[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12184 === 2) {
                              var state_12183__$1 = state_12183;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12183__$1, 4, ch);
                            } else {
                              if (state_val_12184 === 11) {
                                var inst_12160 = state_12183[7];
                                var inst_12170 = state_12183[2];
                                var state_12183__$1 = state_12183;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12183__$1, 8, inst_12170, inst_12160);
                              } else {
                                if (state_val_12184 === 9) {
                                  var state_12183__$1 = state_12183;
                                  var statearr_12194_12217 = state_12183__$1;
                                  statearr_12194_12217[2] = tc;
                                  statearr_12194_12217[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12184 === 5) {
                                    var inst_12163 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_12164 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_12183__$1 = function() {
                                      var statearr_12195 = state_12183;
                                      statearr_12195[8] = inst_12163;
                                      return statearr_12195;
                                    }();
                                    var statearr_12196_12218 = state_12183__$1;
                                    statearr_12196_12218[2] = inst_12164;
                                    statearr_12196_12218[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12184 === 14) {
                                      var inst_12177 = state_12183[2];
                                      var state_12183__$1 = state_12183;
                                      var statearr_12197_12219 = state_12183__$1;
                                      statearr_12197_12219[2] = inst_12177;
                                      statearr_12197_12219[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12184 === 10) {
                                        var state_12183__$1 = state_12183;
                                        var statearr_12198_12220 = state_12183__$1;
                                        statearr_12198_12220[2] = fc;
                                        statearr_12198_12220[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12184 === 8) {
                                          var inst_12172 = state_12183[2];
                                          var state_12183__$1 = state_12183;
                                          if (cljs.core.truth_(inst_12172)) {
                                            var statearr_12199_12221 = state_12183__$1;
                                            statearr_12199_12221[1] = 12;
                                          } else {
                                            var statearr_12200_12222 = state_12183__$1;
                                            statearr_12200_12222[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___12208, tc, fc);
          return function(switch__6353__auto__, c__6368__auto___12208, tc, fc) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_12204 = [null, null, null, null, null, null, null, null, null];
                statearr_12204[0] = state_machine__6354__auto__;
                statearr_12204[1] = 1;
                return statearr_12204;
              };
              var state_machine__6354__auto____1 = function(state_12183) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_12183);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e12205) {
                      if (e12205 instanceof Object) {
                        var ex__6357__auto__ = e12205;
                        var statearr_12206_12223 = state_12183;
                        statearr_12206_12223[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12183);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12205;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12224 = state_12183;
                    state_12183 = G__12224;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_12183) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_12183);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___12208, tc, fc);
        }();
        var state__6370__auto__ = function() {
          var statearr_12207 = f__6369__auto__.call(null);
          statearr_12207[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___12208;
          return statearr_12207;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___12208, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_12271) {
            var state_val_12272 = state_12271[1];
            if (state_val_12272 === 7) {
              var inst_12267 = state_12271[2];
              var state_12271__$1 = state_12271;
              var statearr_12273_12289 = state_12271__$1;
              statearr_12273_12289[2] = inst_12267;
              statearr_12273_12289[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12272 === 6) {
                var inst_12257 = state_12271[7];
                var inst_12260 = state_12271[8];
                var inst_12264 = f.call(null, inst_12257, inst_12260);
                var inst_12257__$1 = inst_12264;
                var state_12271__$1 = function() {
                  var statearr_12274 = state_12271;
                  statearr_12274[7] = inst_12257__$1;
                  return statearr_12274;
                }();
                var statearr_12275_12290 = state_12271__$1;
                statearr_12275_12290[2] = null;
                statearr_12275_12290[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12272 === 5) {
                  var inst_12257 = state_12271[7];
                  var state_12271__$1 = state_12271;
                  var statearr_12276_12291 = state_12271__$1;
                  statearr_12276_12291[2] = inst_12257;
                  statearr_12276_12291[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12272 === 4) {
                    var inst_12260 = state_12271[8];
                    var inst_12260__$1 = state_12271[2];
                    var inst_12261 = inst_12260__$1 == null;
                    var state_12271__$1 = function() {
                      var statearr_12277 = state_12271;
                      statearr_12277[8] = inst_12260__$1;
                      return statearr_12277;
                    }();
                    if (cljs.core.truth_(inst_12261)) {
                      var statearr_12278_12292 = state_12271__$1;
                      statearr_12278_12292[1] = 5;
                    } else {
                      var statearr_12279_12293 = state_12271__$1;
                      statearr_12279_12293[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12272 === 3) {
                      var inst_12269 = state_12271[2];
                      var state_12271__$1 = state_12271;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12271__$1, inst_12269);
                    } else {
                      if (state_val_12272 === 2) {
                        var state_12271__$1 = state_12271;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12271__$1, 4, ch);
                      } else {
                        if (state_val_12272 === 1) {
                          var inst_12257 = init;
                          var state_12271__$1 = function() {
                            var statearr_12280 = state_12271;
                            statearr_12280[7] = inst_12257;
                            return statearr_12280;
                          }();
                          var statearr_12281_12294 = state_12271__$1;
                          statearr_12281_12294[2] = null;
                          statearr_12281_12294[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_12285 = [null, null, null, null, null, null, null, null, null];
              statearr_12285[0] = state_machine__6354__auto__;
              statearr_12285[1] = 1;
              return statearr_12285;
            };
            var state_machine__6354__auto____1 = function(state_12271) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_12271);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e12286) {
                    if (e12286 instanceof Object) {
                      var ex__6357__auto__ = e12286;
                      var statearr_12287_12295 = state_12271;
                      statearr_12287_12295[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12271);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12286;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12296 = state_12271;
                  state_12271 = G__12296;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_12271) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_12271);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_12288 = f__6369__auto__.call(null);
        statearr_12288[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_12288;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto__) {
            return function(state_12370) {
              var state_val_12371 = state_12370[1];
              if (state_val_12371 === 7) {
                var inst_12352 = state_12370[2];
                var state_12370__$1 = state_12370;
                var statearr_12372_12395 = state_12370__$1;
                statearr_12372_12395[2] = inst_12352;
                statearr_12372_12395[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12371 === 1) {
                  var inst_12346 = cljs.core.seq.call(null, coll);
                  var inst_12347 = inst_12346;
                  var state_12370__$1 = function() {
                    var statearr_12373 = state_12370;
                    statearr_12373[7] = inst_12347;
                    return statearr_12373;
                  }();
                  var statearr_12374_12396 = state_12370__$1;
                  statearr_12374_12396[2] = null;
                  statearr_12374_12396[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12371 === 4) {
                    var inst_12347 = state_12370[7];
                    var inst_12350 = cljs.core.first.call(null, inst_12347);
                    var state_12370__$1 = state_12370;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12370__$1, 7, ch, inst_12350);
                  } else {
                    if (state_val_12371 === 13) {
                      var inst_12364 = state_12370[2];
                      var state_12370__$1 = state_12370;
                      var statearr_12375_12397 = state_12370__$1;
                      statearr_12375_12397[2] = inst_12364;
                      statearr_12375_12397[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12371 === 6) {
                        var inst_12355 = state_12370[2];
                        var state_12370__$1 = state_12370;
                        if (cljs.core.truth_(inst_12355)) {
                          var statearr_12376_12398 = state_12370__$1;
                          statearr_12376_12398[1] = 8;
                        } else {
                          var statearr_12377_12399 = state_12370__$1;
                          statearr_12377_12399[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12371 === 3) {
                          var inst_12368 = state_12370[2];
                          var state_12370__$1 = state_12370;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12370__$1, inst_12368);
                        } else {
                          if (state_val_12371 === 12) {
                            var state_12370__$1 = state_12370;
                            var statearr_12378_12400 = state_12370__$1;
                            statearr_12378_12400[2] = null;
                            statearr_12378_12400[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12371 === 2) {
                              var inst_12347 = state_12370[7];
                              var state_12370__$1 = state_12370;
                              if (cljs.core.truth_(inst_12347)) {
                                var statearr_12379_12401 = state_12370__$1;
                                statearr_12379_12401[1] = 4;
                              } else {
                                var statearr_12380_12402 = state_12370__$1;
                                statearr_12380_12402[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12371 === 11) {
                                var inst_12361 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_12370__$1 = state_12370;
                                var statearr_12381_12403 = state_12370__$1;
                                statearr_12381_12403[2] = inst_12361;
                                statearr_12381_12403[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12371 === 9) {
                                  var state_12370__$1 = state_12370;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_12382_12404 = state_12370__$1;
                                    statearr_12382_12404[1] = 11;
                                  } else {
                                    var statearr_12383_12405 = state_12370__$1;
                                    statearr_12383_12405[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12371 === 5) {
                                    var inst_12347 = state_12370[7];
                                    var state_12370__$1 = state_12370;
                                    var statearr_12384_12406 = state_12370__$1;
                                    statearr_12384_12406[2] = inst_12347;
                                    statearr_12384_12406[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12371 === 10) {
                                      var inst_12366 = state_12370[2];
                                      var state_12370__$1 = state_12370;
                                      var statearr_12385_12407 = state_12370__$1;
                                      statearr_12385_12407[2] = inst_12366;
                                      statearr_12385_12407[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12371 === 8) {
                                        var inst_12347 = state_12370[7];
                                        var inst_12357 = cljs.core.next.call(null, inst_12347);
                                        var inst_12347__$1 = inst_12357;
                                        var state_12370__$1 = function() {
                                          var statearr_12386 = state_12370;
                                          statearr_12386[7] = inst_12347__$1;
                                          return statearr_12386;
                                        }();
                                        var statearr_12387_12408 = state_12370__$1;
                                        statearr_12387_12408[2] = null;
                                        statearr_12387_12408[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto__);
          return function(switch__6353__auto__, c__6368__auto__) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_12391 = [null, null, null, null, null, null, null, null];
                statearr_12391[0] = state_machine__6354__auto__;
                statearr_12391[1] = 1;
                return statearr_12391;
              };
              var state_machine__6354__auto____1 = function(state_12370) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_12370);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e12392) {
                      if (e12392 instanceof Object) {
                        var ex__6357__auto__ = e12392;
                        var statearr_12393_12409 = state_12370;
                        statearr_12393_12409[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12370);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12392;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12410 = state_12370;
                    state_12370 = G__12410;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_12370) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_12370);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto__);
        }();
        var state__6370__auto__ = function() {
          var statearr_12394 = f__6369__auto__.call(null);
          statearr_12394[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
          return statearr_12394;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto__));
    return c__6368__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj12412 = {};
  return obj12412;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3539__auto__ = _;
    if (and__3539__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4178__auto__ = _ == null ? null : _;
    return function() {
      var or__3551__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj12414 = {};
  return obj12414;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t12636 !== "undefined") {
    } else {
      cljs.core.async.t12636 = function(cs, ch, mult, meta12637) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta12637 = meta12637;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12636.cljs$lang$type = true;
      cljs.core.async.t12636.cljs$lang$ctorStr = "cljs.core.async/t12636";
      cljs.core.async.t12636.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
          return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t12636");
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t12636.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12636.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_12638) {
          var self__ = this;
          var _12638__$1 = this;
          return self__.meta12637;
        };
      }(cs);
      cljs.core.async.t12636.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_12638, meta12637__$1) {
          var self__ = this;
          var _12638__$1 = this;
          return new cljs.core.async.t12636(self__.cs, self__.ch, self__.mult, meta12637__$1);
        };
      }(cs);
      cljs.core.async.__GT_t12636 = function(cs) {
        return function __GT_t12636(cs__$1, ch__$1, mult__$1, meta12637) {
          return new cljs.core.async.t12636(cs__$1, ch__$1, mult__$1, meta12637);
        };
      }(cs);
    }
    return new cljs.core.async.t12636(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6368__auto___12857 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___12857, cs, m, dchan, dctr, done) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto___12857, cs, m, dchan, dctr, done) {
          return function(state_12769) {
            var state_val_12770 = state_12769[1];
            if (state_val_12770 === 7) {
              var inst_12765 = state_12769[2];
              var state_12769__$1 = state_12769;
              var statearr_12771_12858 = state_12769__$1;
              statearr_12771_12858[2] = inst_12765;
              statearr_12771_12858[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12770 === 20) {
                var inst_12670 = state_12769[7];
                var inst_12680 = cljs.core.first.call(null, inst_12670);
                var inst_12681 = cljs.core.nth.call(null, inst_12680, 0, null);
                var inst_12682 = cljs.core.nth.call(null, inst_12680, 1, null);
                var state_12769__$1 = function() {
                  var statearr_12772 = state_12769;
                  statearr_12772[8] = inst_12681;
                  return statearr_12772;
                }();
                if (cljs.core.truth_(inst_12682)) {
                  var statearr_12773_12859 = state_12769__$1;
                  statearr_12773_12859[1] = 22;
                } else {
                  var statearr_12774_12860 = state_12769__$1;
                  statearr_12774_12860[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12770 === 27) {
                  var inst_12717 = state_12769[9];
                  var inst_12712 = state_12769[10];
                  var inst_12710 = state_12769[11];
                  var inst_12641 = state_12769[12];
                  var inst_12717__$1 = cljs.core._nth.call(null, inst_12710, inst_12712);
                  var inst_12718 = cljs.core.async.put_BANG_.call(null, inst_12717__$1, inst_12641, done);
                  var state_12769__$1 = function() {
                    var statearr_12775 = state_12769;
                    statearr_12775[9] = inst_12717__$1;
                    return statearr_12775;
                  }();
                  if (cljs.core.truth_(inst_12718)) {
                    var statearr_12776_12861 = state_12769__$1;
                    statearr_12776_12861[1] = 30;
                  } else {
                    var statearr_12777_12862 = state_12769__$1;
                    statearr_12777_12862[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12770 === 1) {
                    var state_12769__$1 = state_12769;
                    var statearr_12778_12863 = state_12769__$1;
                    statearr_12778_12863[2] = null;
                    statearr_12778_12863[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12770 === 24) {
                      var inst_12670 = state_12769[7];
                      var inst_12687 = state_12769[2];
                      var inst_12688 = cljs.core.next.call(null, inst_12670);
                      var inst_12650 = inst_12688;
                      var inst_12651 = null;
                      var inst_12652 = 0;
                      var inst_12653 = 0;
                      var state_12769__$1 = function() {
                        var statearr_12779 = state_12769;
                        statearr_12779[13] = inst_12651;
                        statearr_12779[14] = inst_12687;
                        statearr_12779[15] = inst_12650;
                        statearr_12779[16] = inst_12652;
                        statearr_12779[17] = inst_12653;
                        return statearr_12779;
                      }();
                      var statearr_12780_12864 = state_12769__$1;
                      statearr_12780_12864[2] = null;
                      statearr_12780_12864[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12770 === 39) {
                        var state_12769__$1 = state_12769;
                        var statearr_12784_12865 = state_12769__$1;
                        statearr_12784_12865[2] = null;
                        statearr_12784_12865[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12770 === 4) {
                          var inst_12641 = state_12769[12];
                          var inst_12641__$1 = state_12769[2];
                          var inst_12642 = inst_12641__$1 == null;
                          var state_12769__$1 = function() {
                            var statearr_12785 = state_12769;
                            statearr_12785[12] = inst_12641__$1;
                            return statearr_12785;
                          }();
                          if (cljs.core.truth_(inst_12642)) {
                            var statearr_12786_12866 = state_12769__$1;
                            statearr_12786_12866[1] = 5;
                          } else {
                            var statearr_12787_12867 = state_12769__$1;
                            statearr_12787_12867[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12770 === 15) {
                            var inst_12651 = state_12769[13];
                            var inst_12650 = state_12769[15];
                            var inst_12652 = state_12769[16];
                            var inst_12653 = state_12769[17];
                            var inst_12666 = state_12769[2];
                            var inst_12667 = inst_12653 + 1;
                            var tmp12781 = inst_12651;
                            var tmp12782 = inst_12650;
                            var tmp12783 = inst_12652;
                            var inst_12650__$1 = tmp12782;
                            var inst_12651__$1 = tmp12781;
                            var inst_12652__$1 = tmp12783;
                            var inst_12653__$1 = inst_12667;
                            var state_12769__$1 = function() {
                              var statearr_12788 = state_12769;
                              statearr_12788[13] = inst_12651__$1;
                              statearr_12788[15] = inst_12650__$1;
                              statearr_12788[16] = inst_12652__$1;
                              statearr_12788[18] = inst_12666;
                              statearr_12788[17] = inst_12653__$1;
                              return statearr_12788;
                            }();
                            var statearr_12789_12868 = state_12769__$1;
                            statearr_12789_12868[2] = null;
                            statearr_12789_12868[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12770 === 21) {
                              var inst_12691 = state_12769[2];
                              var state_12769__$1 = state_12769;
                              var statearr_12793_12869 = state_12769__$1;
                              statearr_12793_12869[2] = inst_12691;
                              statearr_12793_12869[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12770 === 31) {
                                var inst_12717 = state_12769[9];
                                var inst_12721 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_12722 = cljs.core.async.untap_STAR_.call(null, m, inst_12717);
                                var state_12769__$1 = function() {
                                  var statearr_12794 = state_12769;
                                  statearr_12794[19] = inst_12721;
                                  return statearr_12794;
                                }();
                                var statearr_12795_12870 = state_12769__$1;
                                statearr_12795_12870[2] = inst_12722;
                                statearr_12795_12870[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12770 === 32) {
                                  var inst_12712 = state_12769[10];
                                  var inst_12711 = state_12769[20];
                                  var inst_12709 = state_12769[21];
                                  var inst_12710 = state_12769[11];
                                  var inst_12724 = state_12769[2];
                                  var inst_12725 = inst_12712 + 1;
                                  var tmp12790 = inst_12711;
                                  var tmp12791 = inst_12709;
                                  var tmp12792 = inst_12710;
                                  var inst_12709__$1 = tmp12791;
                                  var inst_12710__$1 = tmp12792;
                                  var inst_12711__$1 = tmp12790;
                                  var inst_12712__$1 = inst_12725;
                                  var state_12769__$1 = function() {
                                    var statearr_12796 = state_12769;
                                    statearr_12796[10] = inst_12712__$1;
                                    statearr_12796[20] = inst_12711__$1;
                                    statearr_12796[21] = inst_12709__$1;
                                    statearr_12796[11] = inst_12710__$1;
                                    statearr_12796[22] = inst_12724;
                                    return statearr_12796;
                                  }();
                                  var statearr_12797_12871 = state_12769__$1;
                                  statearr_12797_12871[2] = null;
                                  statearr_12797_12871[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12770 === 40) {
                                    var inst_12737 = state_12769[23];
                                    var inst_12741 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_12742 = cljs.core.async.untap_STAR_.call(null, m, inst_12737);
                                    var state_12769__$1 = function() {
                                      var statearr_12798 = state_12769;
                                      statearr_12798[24] = inst_12741;
                                      return statearr_12798;
                                    }();
                                    var statearr_12799_12872 = state_12769__$1;
                                    statearr_12799_12872[2] = inst_12742;
                                    statearr_12799_12872[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12770 === 33) {
                                      var inst_12728 = state_12769[25];
                                      var inst_12730 = cljs.core.chunked_seq_QMARK_.call(null, inst_12728);
                                      var state_12769__$1 = state_12769;
                                      if (inst_12730) {
                                        var statearr_12800_12873 = state_12769__$1;
                                        statearr_12800_12873[1] = 36;
                                      } else {
                                        var statearr_12801_12874 = state_12769__$1;
                                        statearr_12801_12874[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12770 === 13) {
                                        var inst_12660 = state_12769[26];
                                        var inst_12663 = cljs.core.async.close_BANG_.call(null, inst_12660);
                                        var state_12769__$1 = state_12769;
                                        var statearr_12802_12875 = state_12769__$1;
                                        statearr_12802_12875[2] = inst_12663;
                                        statearr_12802_12875[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12770 === 22) {
                                          var inst_12681 = state_12769[8];
                                          var inst_12684 = cljs.core.async.close_BANG_.call(null, inst_12681);
                                          var state_12769__$1 = state_12769;
                                          var statearr_12803_12876 = state_12769__$1;
                                          statearr_12803_12876[2] = inst_12684;
                                          statearr_12803_12876[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12770 === 36) {
                                            var inst_12728 = state_12769[25];
                                            var inst_12732 = cljs.core.chunk_first.call(null, inst_12728);
                                            var inst_12733 = cljs.core.chunk_rest.call(null, inst_12728);
                                            var inst_12734 = cljs.core.count.call(null, inst_12732);
                                            var inst_12709 = inst_12733;
                                            var inst_12710 = inst_12732;
                                            var inst_12711 = inst_12734;
                                            var inst_12712 = 0;
                                            var state_12769__$1 = function() {
                                              var statearr_12804 = state_12769;
                                              statearr_12804[10] = inst_12712;
                                              statearr_12804[20] = inst_12711;
                                              statearr_12804[21] = inst_12709;
                                              statearr_12804[11] = inst_12710;
                                              return statearr_12804;
                                            }();
                                            var statearr_12805_12877 = state_12769__$1;
                                            statearr_12805_12877[2] = null;
                                            statearr_12805_12877[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12770 === 41) {
                                              var inst_12728 = state_12769[25];
                                              var inst_12744 = state_12769[2];
                                              var inst_12745 = cljs.core.next.call(null, inst_12728);
                                              var inst_12709 = inst_12745;
                                              var inst_12710 = null;
                                              var inst_12711 = 0;
                                              var inst_12712 = 0;
                                              var state_12769__$1 = function() {
                                                var statearr_12806 = state_12769;
                                                statearr_12806[10] = inst_12712;
                                                statearr_12806[20] = inst_12711;
                                                statearr_12806[21] = inst_12709;
                                                statearr_12806[11] = inst_12710;
                                                statearr_12806[27] = inst_12744;
                                                return statearr_12806;
                                              }();
                                              var statearr_12807_12878 = state_12769__$1;
                                              statearr_12807_12878[2] = null;
                                              statearr_12807_12878[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12770 === 43) {
                                                var state_12769__$1 = state_12769;
                                                var statearr_12808_12879 = state_12769__$1;
                                                statearr_12808_12879[2] = null;
                                                statearr_12808_12879[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12770 === 29) {
                                                  var inst_12753 = state_12769[2];
                                                  var state_12769__$1 = state_12769;
                                                  var statearr_12809_12880 = state_12769__$1;
                                                  statearr_12809_12880[2] = inst_12753;
                                                  statearr_12809_12880[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12770 === 44) {
                                                    var inst_12762 = state_12769[2];
                                                    var state_12769__$1 = function() {
                                                      var statearr_12810 = state_12769;
                                                      statearr_12810[28] = inst_12762;
                                                      return statearr_12810;
                                                    }();
                                                    var statearr_12811_12881 = state_12769__$1;
                                                    statearr_12811_12881[2] = null;
                                                    statearr_12811_12881[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12770 === 6) {
                                                      var inst_12701 = state_12769[29];
                                                      var inst_12700 = cljs.core.deref.call(null, cs);
                                                      var inst_12701__$1 = cljs.core.keys.call(null, inst_12700);
                                                      var inst_12702 = cljs.core.count.call(null, inst_12701__$1);
                                                      var inst_12703 = cljs.core.reset_BANG_.call(null, dctr, inst_12702);
                                                      var inst_12708 = cljs.core.seq.call(null, inst_12701__$1);
                                                      var inst_12709 = inst_12708;
                                                      var inst_12710 = null;
                                                      var inst_12711 = 0;
                                                      var inst_12712 = 0;
                                                      var state_12769__$1 = function() {
                                                        var statearr_12812 = state_12769;
                                                        statearr_12812[10] = inst_12712;
                                                        statearr_12812[20] = inst_12711;
                                                        statearr_12812[21] = inst_12709;
                                                        statearr_12812[11] = inst_12710;
                                                        statearr_12812[29] = inst_12701__$1;
                                                        statearr_12812[30] = inst_12703;
                                                        return statearr_12812;
                                                      }();
                                                      var statearr_12813_12882 = state_12769__$1;
                                                      statearr_12813_12882[2] = null;
                                                      statearr_12813_12882[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_12770 === 28) {
                                                        var inst_12709 = state_12769[21];
                                                        var inst_12728 = state_12769[25];
                                                        var inst_12728__$1 = cljs.core.seq.call(null, inst_12709);
                                                        var state_12769__$1 = function() {
                                                          var statearr_12814 = state_12769;
                                                          statearr_12814[25] = inst_12728__$1;
                                                          return statearr_12814;
                                                        }();
                                                        if (inst_12728__$1) {
                                                          var statearr_12815_12883 = state_12769__$1;
                                                          statearr_12815_12883[1] = 33;
                                                        } else {
                                                          var statearr_12816_12884 = state_12769__$1;
                                                          statearr_12816_12884[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_12770 === 25) {
                                                          var inst_12712 = state_12769[10];
                                                          var inst_12711 = state_12769[20];
                                                          var inst_12714 = inst_12712 < inst_12711;
                                                          var inst_12715 = inst_12714;
                                                          var state_12769__$1 = state_12769;
                                                          if (cljs.core.truth_(inst_12715)) {
                                                            var statearr_12817_12885 = state_12769__$1;
                                                            statearr_12817_12885[1] = 27;
                                                          } else {
                                                            var statearr_12818_12886 = state_12769__$1;
                                                            statearr_12818_12886[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_12770 === 34) {
                                                            var state_12769__$1 = state_12769;
                                                            var statearr_12819_12887 = state_12769__$1;
                                                            statearr_12819_12887[2] = null;
                                                            statearr_12819_12887[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_12770 === 17) {
                                                              var state_12769__$1 = state_12769;
                                                              var statearr_12820_12888 = state_12769__$1;
                                                              statearr_12820_12888[2] = null;
                                                              statearr_12820_12888[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_12770 === 3) {
                                                                var inst_12767 = state_12769[2];
                                                                var state_12769__$1 = state_12769;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12769__$1, inst_12767);
                                                              } else {
                                                                if (state_val_12770 === 12) {
                                                                  var inst_12696 = state_12769[2];
                                                                  var state_12769__$1 = state_12769;
                                                                  var statearr_12821_12889 = state_12769__$1;
                                                                  statearr_12821_12889[2] = inst_12696;
                                                                  statearr_12821_12889[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_12770 === 2) {
                                                                    var state_12769__$1 = state_12769;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12769__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_12770 === 23) {
                                                                      var state_12769__$1 = state_12769;
                                                                      var statearr_12822_12890 = state_12769__$1;
                                                                      statearr_12822_12890[2] = null;
                                                                      statearr_12822_12890[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_12770 === 35) {
                                                                        var inst_12751 = state_12769[2];
                                                                        var state_12769__$1 = state_12769;
                                                                        var statearr_12823_12891 = state_12769__$1;
                                                                        statearr_12823_12891[2] = inst_12751;
                                                                        statearr_12823_12891[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_12770 === 19) {
                                                                          var inst_12670 = state_12769[7];
                                                                          var inst_12674 = cljs.core.chunk_first.call(null, inst_12670);
                                                                          var inst_12675 = cljs.core.chunk_rest.call(null, inst_12670);
                                                                          var inst_12676 = cljs.core.count.call(null, inst_12674);
                                                                          var inst_12650 = inst_12675;
                                                                          var inst_12651 = inst_12674;
                                                                          var inst_12652 = inst_12676;
                                                                          var inst_12653 = 0;
                                                                          var state_12769__$1 = function() {
                                                                            var statearr_12824 = state_12769;
                                                                            statearr_12824[13] = inst_12651;
                                                                            statearr_12824[15] = inst_12650;
                                                                            statearr_12824[16] = inst_12652;
                                                                            statearr_12824[17] = inst_12653;
                                                                            return statearr_12824;
                                                                          }();
                                                                          var statearr_12825_12892 = state_12769__$1;
                                                                          statearr_12825_12892[2] = null;
                                                                          statearr_12825_12892[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_12770 === 11) {
                                                                            var inst_12650 = state_12769[15];
                                                                            var inst_12670 = state_12769[7];
                                                                            var inst_12670__$1 = cljs.core.seq.call(null, inst_12650);
                                                                            var state_12769__$1 = function() {
                                                                              var statearr_12826 = state_12769;
                                                                              statearr_12826[7] = inst_12670__$1;
                                                                              return statearr_12826;
                                                                            }();
                                                                            if (inst_12670__$1) {
                                                                              var statearr_12827_12893 = state_12769__$1;
                                                                              statearr_12827_12893[1] = 16;
                                                                            } else {
                                                                              var statearr_12828_12894 = state_12769__$1;
                                                                              statearr_12828_12894[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_12770 === 9) {
                                                                              var inst_12698 = state_12769[2];
                                                                              var state_12769__$1 = state_12769;
                                                                              var statearr_12829_12895 = state_12769__$1;
                                                                              statearr_12829_12895[2] = inst_12698;
                                                                              statearr_12829_12895[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_12770 === 5) {
                                                                                var inst_12648 = cljs.core.deref.call(null, cs);
                                                                                var inst_12649 = cljs.core.seq.call(null, inst_12648);
                                                                                var inst_12650 = inst_12649;
                                                                                var inst_12651 = null;
                                                                                var inst_12652 = 0;
                                                                                var inst_12653 = 0;
                                                                                var state_12769__$1 = function() {
                                                                                  var statearr_12830 = state_12769;
                                                                                  statearr_12830[13] = inst_12651;
                                                                                  statearr_12830[15] = inst_12650;
                                                                                  statearr_12830[16] = inst_12652;
                                                                                  statearr_12830[17] = inst_12653;
                                                                                  return statearr_12830;
                                                                                }();
                                                                                var statearr_12831_12896 = state_12769__$1;
                                                                                statearr_12831_12896[2] = null;
                                                                                statearr_12831_12896[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_12770 === 14) {
                                                                                  var state_12769__$1 = state_12769;
                                                                                  var statearr_12832_12897 = state_12769__$1;
                                                                                  statearr_12832_12897[2] = null;
                                                                                  statearr_12832_12897[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_12770 === 45) {
                                                                                    var inst_12759 = state_12769[2];
                                                                                    var state_12769__$1 = state_12769;
                                                                                    var statearr_12833_12898 = state_12769__$1;
                                                                                    statearr_12833_12898[2] = inst_12759;
                                                                                    statearr_12833_12898[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_12770 === 26) {
                                                                                      var inst_12701 = state_12769[29];
                                                                                      var inst_12755 = state_12769[2];
                                                                                      var inst_12756 = cljs.core.seq.call(null, inst_12701);
                                                                                      var state_12769__$1 = function() {
                                                                                        var statearr_12834 = state_12769;
                                                                                        statearr_12834[31] = inst_12755;
                                                                                        return statearr_12834;
                                                                                      }();
                                                                                      if (inst_12756) {
                                                                                        var statearr_12835_12899 = state_12769__$1;
                                                                                        statearr_12835_12899[1] = 42;
                                                                                      } else {
                                                                                        var statearr_12836_12900 = state_12769__$1;
                                                                                        statearr_12836_12900[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_12770 === 16) {
                                                                                        var inst_12670 = state_12769[7];
                                                                                        var inst_12672 = cljs.core.chunked_seq_QMARK_.call(null, inst_12670);
                                                                                        var state_12769__$1 = state_12769;
                                                                                        if (inst_12672) {
                                                                                          var statearr_12837_12901 = state_12769__$1;
                                                                                          statearr_12837_12901[1] = 19;
                                                                                        } else {
                                                                                          var statearr_12838_12902 = state_12769__$1;
                                                                                          statearr_12838_12902[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_12770 === 38) {
                                                                                          var inst_12748 = state_12769[2];
                                                                                          var state_12769__$1 = state_12769;
                                                                                          var statearr_12839_12903 = state_12769__$1;
                                                                                          statearr_12839_12903[2] = inst_12748;
                                                                                          statearr_12839_12903[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_12770 === 30) {
                                                                                            var state_12769__$1 = state_12769;
                                                                                            var statearr_12840_12904 = state_12769__$1;
                                                                                            statearr_12840_12904[2] = null;
                                                                                            statearr_12840_12904[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_12770 === 10) {
                                                                                              var inst_12651 = state_12769[13];
                                                                                              var inst_12653 = state_12769[17];
                                                                                              var inst_12659 = cljs.core._nth.call(null, inst_12651, inst_12653);
                                                                                              var inst_12660 = cljs.core.nth.call(null, inst_12659, 0, null);
                                                                                              var inst_12661 = cljs.core.nth.call(null, inst_12659, 1, null);
                                                                                              var state_12769__$1 = function() {
                                                                                                var statearr_12841 = state_12769;
                                                                                                statearr_12841[26] = inst_12660;
                                                                                                return statearr_12841;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_12661)) {
                                                                                                var statearr_12842_12905 = state_12769__$1;
                                                                                                statearr_12842_12905[1] = 13;
                                                                                              } else {
                                                                                                var statearr_12843_12906 = state_12769__$1;
                                                                                                statearr_12843_12906[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_12770 === 18) {
                                                                                                var inst_12694 = state_12769[2];
                                                                                                var state_12769__$1 = state_12769;
                                                                                                var statearr_12844_12907 = state_12769__$1;
                                                                                                statearr_12844_12907[2] = inst_12694;
                                                                                                statearr_12844_12907[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_12770 === 42) {
                                                                                                  var state_12769__$1 = state_12769;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12769__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_12770 === 37) {
                                                                                                    var inst_12737 = state_12769[23];
                                                                                                    var inst_12728 = state_12769[25];
                                                                                                    var inst_12641 = state_12769[12];
                                                                                                    var inst_12737__$1 = cljs.core.first.call(null, inst_12728);
                                                                                                    var inst_12738 = cljs.core.async.put_BANG_.call(null, inst_12737__$1, inst_12641, done);
                                                                                                    var state_12769__$1 = function() {
                                                                                                      var statearr_12845 = state_12769;
                                                                                                      statearr_12845[23] = inst_12737__$1;
                                                                                                      return statearr_12845;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_12738)) {
                                                                                                      var statearr_12846_12908 = state_12769__$1;
                                                                                                      statearr_12846_12908[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_12847_12909 = state_12769__$1;
                                                                                                      statearr_12847_12909[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_12770 === 8) {
                                                                                                      var inst_12652 = state_12769[16];
                                                                                                      var inst_12653 = state_12769[17];
                                                                                                      var inst_12655 = inst_12653 < inst_12652;
                                                                                                      var inst_12656 = inst_12655;
                                                                                                      var state_12769__$1 = state_12769;
                                                                                                      if (cljs.core.truth_(inst_12656)) {
                                                                                                        var statearr_12848_12910 = state_12769__$1;
                                                                                                        statearr_12848_12910[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_12849_12911 = state_12769__$1;
                                                                                                        statearr_12849_12911[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto___12857, cs, m, dchan, dctr, done);
        return function(switch__6353__auto__, c__6368__auto___12857, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_12853 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12853[0] = state_machine__6354__auto__;
              statearr_12853[1] = 1;
              return statearr_12853;
            };
            var state_machine__6354__auto____1 = function(state_12769) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_12769);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e12854) {
                    if (e12854 instanceof Object) {
                      var ex__6357__auto__ = e12854;
                      var statearr_12855_12912 = state_12769;
                      statearr_12855_12912[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12769);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12854;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12913 = state_12769;
                  state_12769 = G__12913;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_12769) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_12769);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto___12857, cs, m, dchan, dctr, done);
      }();
      var state__6370__auto__ = function() {
        var statearr_12856 = f__6369__auto__.call(null);
        statearr_12856[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___12857;
        return statearr_12856;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto___12857, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj12915 = {};
  return obj12915;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3539__auto__ = m;
    if (and__3539__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4178__auto__ = m == null ? null : m;
    return function() {
      var or__3551__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t13035 !== "undefined") {
    } else {
      cljs.core.async.t13035 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta13036) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta13036 = meta13036;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t13035.cljs$lang$type = true;
      cljs.core.async.t13035.cljs$lang$ctorStr = "cljs.core.async/t13035";
      cljs.core.async.t13035.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
          return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t13035");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t13035.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13037) {
          var self__ = this;
          var _13037__$1 = this;
          return self__.meta13036;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13035.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13037, meta13036__$1) {
          var self__ = this;
          var _13037__$1 = this;
          return new cljs.core.async.t13035(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta13036__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t13035 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t13035(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13036) {
          return new cljs.core.async.t13035(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13036);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t13035(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__6368__auto___13154 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_13107) {
            var state_val_13108 = state_13107[1];
            if (state_val_13108 === 7) {
              var inst_13051 = state_13107[7];
              var inst_13056 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13051);
              var state_13107__$1 = state_13107;
              var statearr_13109_13155 = state_13107__$1;
              statearr_13109_13155[2] = inst_13056;
              statearr_13109_13155[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13108 === 20) {
                var inst_13066 = state_13107[8];
                var state_13107__$1 = state_13107;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13107__$1, 23, out, inst_13066);
              } else {
                if (state_val_13108 === 1) {
                  var inst_13041 = state_13107[9];
                  var inst_13041__$1 = calc_state.call(null);
                  var inst_13042 = cljs.core.seq_QMARK_.call(null, inst_13041__$1);
                  var state_13107__$1 = function() {
                    var statearr_13110 = state_13107;
                    statearr_13110[9] = inst_13041__$1;
                    return statearr_13110;
                  }();
                  if (inst_13042) {
                    var statearr_13111_13156 = state_13107__$1;
                    statearr_13111_13156[1] = 2;
                  } else {
                    var statearr_13112_13157 = state_13107__$1;
                    statearr_13112_13157[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13108 === 24) {
                    var inst_13059 = state_13107[10];
                    var inst_13051 = inst_13059;
                    var state_13107__$1 = function() {
                      var statearr_13113 = state_13107;
                      statearr_13113[7] = inst_13051;
                      return statearr_13113;
                    }();
                    var statearr_13114_13158 = state_13107__$1;
                    statearr_13114_13158[2] = null;
                    statearr_13114_13158[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13108 === 4) {
                      var inst_13041 = state_13107[9];
                      var inst_13047 = state_13107[2];
                      var inst_13048 = cljs.core.get.call(null, inst_13047, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_13049 = cljs.core.get.call(null, inst_13047, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_13050 = cljs.core.get.call(null, inst_13047, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_13051 = inst_13041;
                      var state_13107__$1 = function() {
                        var statearr_13115 = state_13107;
                        statearr_13115[7] = inst_13051;
                        statearr_13115[11] = inst_13050;
                        statearr_13115[12] = inst_13048;
                        statearr_13115[13] = inst_13049;
                        return statearr_13115;
                      }();
                      var statearr_13116_13159 = state_13107__$1;
                      statearr_13116_13159[2] = null;
                      statearr_13116_13159[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13108 === 15) {
                        var state_13107__$1 = state_13107;
                        var statearr_13117_13160 = state_13107__$1;
                        statearr_13117_13160[2] = null;
                        statearr_13117_13160[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13108 === 21) {
                          var inst_13059 = state_13107[10];
                          var inst_13051 = inst_13059;
                          var state_13107__$1 = function() {
                            var statearr_13118 = state_13107;
                            statearr_13118[7] = inst_13051;
                            return statearr_13118;
                          }();
                          var statearr_13119_13161 = state_13107__$1;
                          statearr_13119_13161[2] = null;
                          statearr_13119_13161[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13108 === 13) {
                            var inst_13103 = state_13107[2];
                            var state_13107__$1 = state_13107;
                            var statearr_13120_13162 = state_13107__$1;
                            statearr_13120_13162[2] = inst_13103;
                            statearr_13120_13162[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13108 === 22) {
                              var inst_13101 = state_13107[2];
                              var state_13107__$1 = state_13107;
                              var statearr_13121_13163 = state_13107__$1;
                              statearr_13121_13163[2] = inst_13101;
                              statearr_13121_13163[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13108 === 6) {
                                var inst_13105 = state_13107[2];
                                var state_13107__$1 = state_13107;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13107__$1, inst_13105);
                              } else {
                                if (state_val_13108 === 25) {
                                  var state_13107__$1 = state_13107;
                                  var statearr_13122_13164 = state_13107__$1;
                                  statearr_13122_13164[2] = null;
                                  statearr_13122_13164[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13108 === 17) {
                                    var inst_13081 = state_13107[14];
                                    var state_13107__$1 = state_13107;
                                    var statearr_13123_13165 = state_13107__$1;
                                    statearr_13123_13165[2] = inst_13081;
                                    statearr_13123_13165[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13108 === 3) {
                                      var inst_13041 = state_13107[9];
                                      var state_13107__$1 = state_13107;
                                      var statearr_13124_13166 = state_13107__$1;
                                      statearr_13124_13166[2] = inst_13041;
                                      statearr_13124_13166[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13108 === 12) {
                                        var inst_13067 = state_13107[15];
                                        var inst_13081 = state_13107[14];
                                        var inst_13062 = state_13107[16];
                                        var inst_13081__$1 = inst_13062.call(null, inst_13067);
                                        var state_13107__$1 = function() {
                                          var statearr_13125 = state_13107;
                                          statearr_13125[14] = inst_13081__$1;
                                          return statearr_13125;
                                        }();
                                        if (cljs.core.truth_(inst_13081__$1)) {
                                          var statearr_13126_13167 = state_13107__$1;
                                          statearr_13126_13167[1] = 17;
                                        } else {
                                          var statearr_13127_13168 = state_13107__$1;
                                          statearr_13127_13168[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13108 === 2) {
                                          var inst_13041 = state_13107[9];
                                          var inst_13044 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13041);
                                          var state_13107__$1 = state_13107;
                                          var statearr_13128_13169 = state_13107__$1;
                                          statearr_13128_13169[2] = inst_13044;
                                          statearr_13128_13169[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13108 === 23) {
                                            var inst_13092 = state_13107[2];
                                            var state_13107__$1 = state_13107;
                                            if (cljs.core.truth_(inst_13092)) {
                                              var statearr_13129_13170 = state_13107__$1;
                                              statearr_13129_13170[1] = 24;
                                            } else {
                                              var statearr_13130_13171 = state_13107__$1;
                                              statearr_13130_13171[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13108 === 19) {
                                              var inst_13089 = state_13107[2];
                                              var state_13107__$1 = state_13107;
                                              if (cljs.core.truth_(inst_13089)) {
                                                var statearr_13131_13172 = state_13107__$1;
                                                statearr_13131_13172[1] = 20;
                                              } else {
                                                var statearr_13132_13173 = state_13107__$1;
                                                statearr_13132_13173[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13108 === 11) {
                                                var inst_13066 = state_13107[8];
                                                var inst_13072 = inst_13066 == null;
                                                var state_13107__$1 = state_13107;
                                                if (cljs.core.truth_(inst_13072)) {
                                                  var statearr_13133_13174 = state_13107__$1;
                                                  statearr_13133_13174[1] = 14;
                                                } else {
                                                  var statearr_13134_13175 = state_13107__$1;
                                                  statearr_13134_13175[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13108 === 9) {
                                                  var inst_13059 = state_13107[10];
                                                  var inst_13059__$1 = state_13107[2];
                                                  var inst_13060 = cljs.core.get.call(null, inst_13059__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_13061 = cljs.core.get.call(null, inst_13059__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_13062 = cljs.core.get.call(null, inst_13059__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_13107__$1 = function() {
                                                    var statearr_13135 = state_13107;
                                                    statearr_13135[10] = inst_13059__$1;
                                                    statearr_13135[17] = inst_13061;
                                                    statearr_13135[16] = inst_13062;
                                                    return statearr_13135;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_13107__$1, 10, inst_13060);
                                                } else {
                                                  if (state_val_13108 === 5) {
                                                    var inst_13051 = state_13107[7];
                                                    var inst_13054 = cljs.core.seq_QMARK_.call(null, inst_13051);
                                                    var state_13107__$1 = state_13107;
                                                    if (inst_13054) {
                                                      var statearr_13136_13176 = state_13107__$1;
                                                      statearr_13136_13176[1] = 7;
                                                    } else {
                                                      var statearr_13137_13177 = state_13107__$1;
                                                      statearr_13137_13177[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13108 === 14) {
                                                      var inst_13067 = state_13107[15];
                                                      var inst_13074 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_13067);
                                                      var state_13107__$1 = state_13107;
                                                      var statearr_13138_13178 = state_13107__$1;
                                                      statearr_13138_13178[2] = inst_13074;
                                                      statearr_13138_13178[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13108 === 26) {
                                                        var inst_13097 = state_13107[2];
                                                        var state_13107__$1 = state_13107;
                                                        var statearr_13139_13179 = state_13107__$1;
                                                        statearr_13139_13179[2] = inst_13097;
                                                        statearr_13139_13179[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13108 === 16) {
                                                          var inst_13077 = state_13107[2];
                                                          var inst_13078 = calc_state.call(null);
                                                          var inst_13051 = inst_13078;
                                                          var state_13107__$1 = function() {
                                                            var statearr_13140 = state_13107;
                                                            statearr_13140[7] = inst_13051;
                                                            statearr_13140[18] = inst_13077;
                                                            return statearr_13140;
                                                          }();
                                                          var statearr_13141_13180 = state_13107__$1;
                                                          statearr_13141_13180[2] = null;
                                                          statearr_13141_13180[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13108 === 10) {
                                                            var inst_13066 = state_13107[8];
                                                            var inst_13067 = state_13107[15];
                                                            var inst_13065 = state_13107[2];
                                                            var inst_13066__$1 = cljs.core.nth.call(null, inst_13065, 0, null);
                                                            var inst_13067__$1 = cljs.core.nth.call(null, inst_13065, 1, null);
                                                            var inst_13068 = inst_13066__$1 == null;
                                                            var inst_13069 = cljs.core._EQ_.call(null, inst_13067__$1, change);
                                                            var inst_13070 = inst_13068 || inst_13069;
                                                            var state_13107__$1 = function() {
                                                              var statearr_13142 = state_13107;
                                                              statearr_13142[8] = inst_13066__$1;
                                                              statearr_13142[15] = inst_13067__$1;
                                                              return statearr_13142;
                                                            }();
                                                            if (cljs.core.truth_(inst_13070)) {
                                                              var statearr_13143_13181 = state_13107__$1;
                                                              statearr_13143_13181[1] = 11;
                                                            } else {
                                                              var statearr_13144_13182 = state_13107__$1;
                                                              statearr_13144_13182[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13108 === 18) {
                                                              var inst_13067 = state_13107[15];
                                                              var inst_13061 = state_13107[17];
                                                              var inst_13062 = state_13107[16];
                                                              var inst_13084 = cljs.core.empty_QMARK_.call(null, inst_13062);
                                                              var inst_13085 = inst_13061.call(null, inst_13067);
                                                              var inst_13086 = cljs.core.not.call(null, inst_13085);
                                                              var inst_13087 = inst_13084 && inst_13086;
                                                              var state_13107__$1 = state_13107;
                                                              var statearr_13145_13183 = state_13107__$1;
                                                              statearr_13145_13183[2] = inst_13087;
                                                              statearr_13145_13183[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13108 === 8) {
                                                                var inst_13051 = state_13107[7];
                                                                var state_13107__$1 = state_13107;
                                                                var statearr_13146_13184 = state_13107__$1;
                                                                statearr_13146_13184[2] = inst_13051;
                                                                statearr_13146_13184[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6353__auto__, c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_13150 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13150[0] = state_machine__6354__auto__;
              statearr_13150[1] = 1;
              return statearr_13150;
            };
            var state_machine__6354__auto____1 = function(state_13107) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_13107);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e13151) {
                    if (e13151 instanceof Object) {
                      var ex__6357__auto__ = e13151;
                      var statearr_13152_13185 = state_13107;
                      statearr_13152_13185[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13107);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13151;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13186 = state_13107;
                  state_13107 = G__13186;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_13107) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_13107);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6370__auto__ = function() {
        var statearr_13153 = f__6369__auto__.call(null);
        statearr_13153[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13154;
        return statearr_13153;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto___13154, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj13188 = {};
  return obj13188;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3539__auto__ = p;
    if (and__3539__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4178__auto__ = p == null ? null : p;
    return function() {
      var or__3551__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3539__auto__ = p;
    if (and__3539__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4178__auto__ = p == null ? null : p;
    return function() {
      var or__3551__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3539__auto__ = p;
      if (and__3539__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4178__auto__ = p == null ? null : p;
      return function() {
        var or__3551__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3539__auto__ = p;
      if (and__3539__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4178__auto__ = p == null ? null : p;
      return function() {
        var or__3551__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3551__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3551__auto__, mults) {
            return function(p1__13189_SHARP_) {
              if (cljs.core.truth_(p1__13189_SHARP_.call(null, topic))) {
                return p1__13189_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__13189_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3551__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t13312 !== "undefined") {
      } else {
        cljs.core.async.t13312 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta13313) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta13313 = meta13313;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t13312.cljs$lang$type = true;
        cljs.core.async.t13312.cljs$lang$ctorStr = "cljs.core.async/t13312";
        cljs.core.async.t13312.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
            return cljs.core._write.call(null, writer__4119__auto__, "cljs.core.async/t13312");
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t13312.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t13312.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_13314) {
            var self__ = this;
            var _13314__$1 = this;
            return self__.meta13313;
          };
        }(mults, ensure_mult);
        cljs.core.async.t13312.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_13314, meta13313__$1) {
            var self__ = this;
            var _13314__$1 = this;
            return new cljs.core.async.t13312(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta13313__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t13312 = function(mults, ensure_mult) {
          return function __GT_t13312(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13313) {
            return new cljs.core.async.t13312(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13313);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t13312(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6368__auto___13434 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13434, mults, ensure_mult, p) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___13434, mults, ensure_mult, p) {
            return function(state_13386) {
              var state_val_13387 = state_13386[1];
              if (state_val_13387 === 7) {
                var inst_13382 = state_13386[2];
                var state_13386__$1 = state_13386;
                var statearr_13388_13435 = state_13386__$1;
                statearr_13388_13435[2] = inst_13382;
                statearr_13388_13435[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13387 === 20) {
                  var state_13386__$1 = state_13386;
                  var statearr_13389_13436 = state_13386__$1;
                  statearr_13389_13436[2] = null;
                  statearr_13389_13436[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13387 === 1) {
                    var state_13386__$1 = state_13386;
                    var statearr_13390_13437 = state_13386__$1;
                    statearr_13390_13437[2] = null;
                    statearr_13390_13437[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13387 === 24) {
                      var inst_13365 = state_13386[7];
                      var inst_13374 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_13365);
                      var state_13386__$1 = state_13386;
                      var statearr_13391_13438 = state_13386__$1;
                      statearr_13391_13438[2] = inst_13374;
                      statearr_13391_13438[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13387 === 4) {
                        var inst_13317 = state_13386[8];
                        var inst_13317__$1 = state_13386[2];
                        var inst_13318 = inst_13317__$1 == null;
                        var state_13386__$1 = function() {
                          var statearr_13392 = state_13386;
                          statearr_13392[8] = inst_13317__$1;
                          return statearr_13392;
                        }();
                        if (cljs.core.truth_(inst_13318)) {
                          var statearr_13393_13439 = state_13386__$1;
                          statearr_13393_13439[1] = 5;
                        } else {
                          var statearr_13394_13440 = state_13386__$1;
                          statearr_13394_13440[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13387 === 15) {
                          var inst_13359 = state_13386[2];
                          var state_13386__$1 = state_13386;
                          var statearr_13395_13441 = state_13386__$1;
                          statearr_13395_13441[2] = inst_13359;
                          statearr_13395_13441[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13387 === 21) {
                            var inst_13379 = state_13386[2];
                            var state_13386__$1 = function() {
                              var statearr_13396 = state_13386;
                              statearr_13396[9] = inst_13379;
                              return statearr_13396;
                            }();
                            var statearr_13397_13442 = state_13386__$1;
                            statearr_13397_13442[2] = null;
                            statearr_13397_13442[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13387 === 13) {
                              var inst_13341 = state_13386[10];
                              var inst_13343 = cljs.core.chunked_seq_QMARK_.call(null, inst_13341);
                              var state_13386__$1 = state_13386;
                              if (inst_13343) {
                                var statearr_13398_13443 = state_13386__$1;
                                statearr_13398_13443[1] = 16;
                              } else {
                                var statearr_13399_13444 = state_13386__$1;
                                statearr_13399_13444[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13387 === 22) {
                                var inst_13371 = state_13386[2];
                                var state_13386__$1 = state_13386;
                                if (cljs.core.truth_(inst_13371)) {
                                  var statearr_13400_13445 = state_13386__$1;
                                  statearr_13400_13445[1] = 23;
                                } else {
                                  var statearr_13401_13446 = state_13386__$1;
                                  statearr_13401_13446[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13387 === 6) {
                                  var inst_13317 = state_13386[8];
                                  var inst_13367 = state_13386[11];
                                  var inst_13365 = state_13386[7];
                                  var inst_13365__$1 = topic_fn.call(null, inst_13317);
                                  var inst_13366 = cljs.core.deref.call(null, mults);
                                  var inst_13367__$1 = cljs.core.get.call(null, inst_13366, inst_13365__$1);
                                  var state_13386__$1 = function() {
                                    var statearr_13402 = state_13386;
                                    statearr_13402[11] = inst_13367__$1;
                                    statearr_13402[7] = inst_13365__$1;
                                    return statearr_13402;
                                  }();
                                  if (cljs.core.truth_(inst_13367__$1)) {
                                    var statearr_13403_13447 = state_13386__$1;
                                    statearr_13403_13447[1] = 19;
                                  } else {
                                    var statearr_13404_13448 = state_13386__$1;
                                    statearr_13404_13448[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13387 === 25) {
                                    var inst_13376 = state_13386[2];
                                    var state_13386__$1 = state_13386;
                                    var statearr_13405_13449 = state_13386__$1;
                                    statearr_13405_13449[2] = inst_13376;
                                    statearr_13405_13449[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13387 === 17) {
                                      var inst_13341 = state_13386[10];
                                      var inst_13350 = cljs.core.first.call(null, inst_13341);
                                      var inst_13351 = cljs.core.async.muxch_STAR_.call(null, inst_13350);
                                      var inst_13352 = cljs.core.async.close_BANG_.call(null, inst_13351);
                                      var inst_13353 = cljs.core.next.call(null, inst_13341);
                                      var inst_13327 = inst_13353;
                                      var inst_13328 = null;
                                      var inst_13329 = 0;
                                      var inst_13330 = 0;
                                      var state_13386__$1 = function() {
                                        var statearr_13406 = state_13386;
                                        statearr_13406[12] = inst_13328;
                                        statearr_13406[13] = inst_13352;
                                        statearr_13406[14] = inst_13329;
                                        statearr_13406[15] = inst_13327;
                                        statearr_13406[16] = inst_13330;
                                        return statearr_13406;
                                      }();
                                      var statearr_13407_13450 = state_13386__$1;
                                      statearr_13407_13450[2] = null;
                                      statearr_13407_13450[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13387 === 3) {
                                        var inst_13384 = state_13386[2];
                                        var state_13386__$1 = state_13386;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13386__$1, inst_13384);
                                      } else {
                                        if (state_val_13387 === 12) {
                                          var inst_13361 = state_13386[2];
                                          var state_13386__$1 = state_13386;
                                          var statearr_13408_13451 = state_13386__$1;
                                          statearr_13408_13451[2] = inst_13361;
                                          statearr_13408_13451[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13387 === 2) {
                                            var state_13386__$1 = state_13386;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13386__$1, 4, ch);
                                          } else {
                                            if (state_val_13387 === 23) {
                                              var state_13386__$1 = state_13386;
                                              var statearr_13409_13452 = state_13386__$1;
                                              statearr_13409_13452[2] = null;
                                              statearr_13409_13452[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13387 === 19) {
                                                var inst_13317 = state_13386[8];
                                                var inst_13367 = state_13386[11];
                                                var inst_13369 = cljs.core.async.muxch_STAR_.call(null, inst_13367);
                                                var state_13386__$1 = state_13386;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13386__$1, 22, inst_13369, inst_13317);
                                              } else {
                                                if (state_val_13387 === 11) {
                                                  var inst_13341 = state_13386[10];
                                                  var inst_13327 = state_13386[15];
                                                  var inst_13341__$1 = cljs.core.seq.call(null, inst_13327);
                                                  var state_13386__$1 = function() {
                                                    var statearr_13410 = state_13386;
                                                    statearr_13410[10] = inst_13341__$1;
                                                    return statearr_13410;
                                                  }();
                                                  if (inst_13341__$1) {
                                                    var statearr_13411_13453 = state_13386__$1;
                                                    statearr_13411_13453[1] = 13;
                                                  } else {
                                                    var statearr_13412_13454 = state_13386__$1;
                                                    statearr_13412_13454[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13387 === 9) {
                                                    var inst_13363 = state_13386[2];
                                                    var state_13386__$1 = state_13386;
                                                    var statearr_13413_13455 = state_13386__$1;
                                                    statearr_13413_13455[2] = inst_13363;
                                                    statearr_13413_13455[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13387 === 5) {
                                                      var inst_13324 = cljs.core.deref.call(null, mults);
                                                      var inst_13325 = cljs.core.vals.call(null, inst_13324);
                                                      var inst_13326 = cljs.core.seq.call(null, inst_13325);
                                                      var inst_13327 = inst_13326;
                                                      var inst_13328 = null;
                                                      var inst_13329 = 0;
                                                      var inst_13330 = 0;
                                                      var state_13386__$1 = function() {
                                                        var statearr_13414 = state_13386;
                                                        statearr_13414[12] = inst_13328;
                                                        statearr_13414[14] = inst_13329;
                                                        statearr_13414[15] = inst_13327;
                                                        statearr_13414[16] = inst_13330;
                                                        return statearr_13414;
                                                      }();
                                                      var statearr_13415_13456 = state_13386__$1;
                                                      statearr_13415_13456[2] = null;
                                                      statearr_13415_13456[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13387 === 14) {
                                                        var state_13386__$1 = state_13386;
                                                        var statearr_13419_13457 = state_13386__$1;
                                                        statearr_13419_13457[2] = null;
                                                        statearr_13419_13457[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13387 === 16) {
                                                          var inst_13341 = state_13386[10];
                                                          var inst_13345 = cljs.core.chunk_first.call(null, inst_13341);
                                                          var inst_13346 = cljs.core.chunk_rest.call(null, inst_13341);
                                                          var inst_13347 = cljs.core.count.call(null, inst_13345);
                                                          var inst_13327 = inst_13346;
                                                          var inst_13328 = inst_13345;
                                                          var inst_13329 = inst_13347;
                                                          var inst_13330 = 0;
                                                          var state_13386__$1 = function() {
                                                            var statearr_13420 = state_13386;
                                                            statearr_13420[12] = inst_13328;
                                                            statearr_13420[14] = inst_13329;
                                                            statearr_13420[15] = inst_13327;
                                                            statearr_13420[16] = inst_13330;
                                                            return statearr_13420;
                                                          }();
                                                          var statearr_13421_13458 = state_13386__$1;
                                                          statearr_13421_13458[2] = null;
                                                          statearr_13421_13458[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13387 === 10) {
                                                            var inst_13328 = state_13386[12];
                                                            var inst_13329 = state_13386[14];
                                                            var inst_13327 = state_13386[15];
                                                            var inst_13330 = state_13386[16];
                                                            var inst_13335 = cljs.core._nth.call(null, inst_13328, inst_13330);
                                                            var inst_13336 = cljs.core.async.muxch_STAR_.call(null, inst_13335);
                                                            var inst_13337 = cljs.core.async.close_BANG_.call(null, inst_13336);
                                                            var inst_13338 = inst_13330 + 1;
                                                            var tmp13416 = inst_13328;
                                                            var tmp13417 = inst_13329;
                                                            var tmp13418 = inst_13327;
                                                            var inst_13327__$1 = tmp13418;
                                                            var inst_13328__$1 = tmp13416;
                                                            var inst_13329__$1 = tmp13417;
                                                            var inst_13330__$1 = inst_13338;
                                                            var state_13386__$1 = function() {
                                                              var statearr_13422 = state_13386;
                                                              statearr_13422[17] = inst_13337;
                                                              statearr_13422[12] = inst_13328__$1;
                                                              statearr_13422[14] = inst_13329__$1;
                                                              statearr_13422[15] = inst_13327__$1;
                                                              statearr_13422[16] = inst_13330__$1;
                                                              return statearr_13422;
                                                            }();
                                                            var statearr_13423_13459 = state_13386__$1;
                                                            statearr_13423_13459[2] = null;
                                                            statearr_13423_13459[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13387 === 18) {
                                                              var inst_13356 = state_13386[2];
                                                              var state_13386__$1 = state_13386;
                                                              var statearr_13424_13460 = state_13386__$1;
                                                              statearr_13424_13460[2] = inst_13356;
                                                              statearr_13424_13460[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13387 === 8) {
                                                                var inst_13329 = state_13386[14];
                                                                var inst_13330 = state_13386[16];
                                                                var inst_13332 = inst_13330 < inst_13329;
                                                                var inst_13333 = inst_13332;
                                                                var state_13386__$1 = state_13386;
                                                                if (cljs.core.truth_(inst_13333)) {
                                                                  var statearr_13425_13461 = state_13386__$1;
                                                                  statearr_13425_13461[1] = 10;
                                                                } else {
                                                                  var statearr_13426_13462 = state_13386__$1;
                                                                  statearr_13426_13462[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___13434, mults, ensure_mult, p);
          return function(switch__6353__auto__, c__6368__auto___13434, mults, ensure_mult, p) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_13430 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13430[0] = state_machine__6354__auto__;
                statearr_13430[1] = 1;
                return statearr_13430;
              };
              var state_machine__6354__auto____1 = function(state_13386) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_13386);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e13431) {
                      if (e13431 instanceof Object) {
                        var ex__6357__auto__ = e13431;
                        var statearr_13432_13463 = state_13386;
                        statearr_13432_13463[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13386);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13431;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13464 = state_13386;
                    state_13386 = G__13464;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_13386) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_13386);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___13434, mults, ensure_mult, p);
        }();
        var state__6370__auto__ = function() {
          var statearr_13433 = f__6369__auto__.call(null);
          statearr_13433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13434;
          return statearr_13433;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___13434, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6368__auto___13601 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_13571) {
              var state_val_13572 = state_13571[1];
              if (state_val_13572 === 7) {
                var state_13571__$1 = state_13571;
                var statearr_13573_13602 = state_13571__$1;
                statearr_13573_13602[2] = null;
                statearr_13573_13602[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13572 === 1) {
                  var state_13571__$1 = state_13571;
                  var statearr_13574_13603 = state_13571__$1;
                  statearr_13574_13603[2] = null;
                  statearr_13574_13603[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13572 === 4) {
                    var inst_13535 = state_13571[7];
                    var inst_13537 = inst_13535 < cnt;
                    var state_13571__$1 = state_13571;
                    if (cljs.core.truth_(inst_13537)) {
                      var statearr_13575_13604 = state_13571__$1;
                      statearr_13575_13604[1] = 6;
                    } else {
                      var statearr_13576_13605 = state_13571__$1;
                      statearr_13576_13605[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13572 === 15) {
                      var inst_13567 = state_13571[2];
                      var state_13571__$1 = state_13571;
                      var statearr_13577_13606 = state_13571__$1;
                      statearr_13577_13606[2] = inst_13567;
                      statearr_13577_13606[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13572 === 13) {
                        var inst_13560 = cljs.core.async.close_BANG_.call(null, out);
                        var state_13571__$1 = state_13571;
                        var statearr_13578_13607 = state_13571__$1;
                        statearr_13578_13607[2] = inst_13560;
                        statearr_13578_13607[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13572 === 6) {
                          var state_13571__$1 = state_13571;
                          var statearr_13579_13608 = state_13571__$1;
                          statearr_13579_13608[2] = null;
                          statearr_13579_13608[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13572 === 3) {
                            var inst_13569 = state_13571[2];
                            var state_13571__$1 = state_13571;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13571__$1, inst_13569);
                          } else {
                            if (state_val_13572 === 12) {
                              var inst_13557 = state_13571[8];
                              var inst_13557__$1 = state_13571[2];
                              var inst_13558 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_13557__$1);
                              var state_13571__$1 = function() {
                                var statearr_13580 = state_13571;
                                statearr_13580[8] = inst_13557__$1;
                                return statearr_13580;
                              }();
                              if (cljs.core.truth_(inst_13558)) {
                                var statearr_13581_13609 = state_13571__$1;
                                statearr_13581_13609[1] = 13;
                              } else {
                                var statearr_13582_13610 = state_13571__$1;
                                statearr_13582_13610[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13572 === 2) {
                                var inst_13534 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_13535 = 0;
                                var state_13571__$1 = function() {
                                  var statearr_13583 = state_13571;
                                  statearr_13583[7] = inst_13535;
                                  statearr_13583[9] = inst_13534;
                                  return statearr_13583;
                                }();
                                var statearr_13584_13611 = state_13571__$1;
                                statearr_13584_13611[2] = null;
                                statearr_13584_13611[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13572 === 11) {
                                  var inst_13535 = state_13571[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_13571, 10, Object, null, 9);
                                  var inst_13544 = chs__$1.call(null, inst_13535);
                                  var inst_13545 = done.call(null, inst_13535);
                                  var inst_13546 = cljs.core.async.take_BANG_.call(null, inst_13544, inst_13545);
                                  var state_13571__$1 = state_13571;
                                  var statearr_13585_13612 = state_13571__$1;
                                  statearr_13585_13612[2] = inst_13546;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13571__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13572 === 9) {
                                    var inst_13535 = state_13571[7];
                                    var inst_13548 = state_13571[2];
                                    var inst_13549 = inst_13535 + 1;
                                    var inst_13535__$1 = inst_13549;
                                    var state_13571__$1 = function() {
                                      var statearr_13586 = state_13571;
                                      statearr_13586[7] = inst_13535__$1;
                                      statearr_13586[10] = inst_13548;
                                      return statearr_13586;
                                    }();
                                    var statearr_13587_13613 = state_13571__$1;
                                    statearr_13587_13613[2] = null;
                                    statearr_13587_13613[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13572 === 5) {
                                      var inst_13555 = state_13571[2];
                                      var state_13571__$1 = function() {
                                        var statearr_13588 = state_13571;
                                        statearr_13588[11] = inst_13555;
                                        return statearr_13588;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13571__$1, 12, dchan);
                                    } else {
                                      if (state_val_13572 === 14) {
                                        var inst_13557 = state_13571[8];
                                        var inst_13562 = cljs.core.apply.call(null, f, inst_13557);
                                        var state_13571__$1 = state_13571;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13571__$1, 16, out, inst_13562);
                                      } else {
                                        if (state_val_13572 === 16) {
                                          var inst_13564 = state_13571[2];
                                          var state_13571__$1 = function() {
                                            var statearr_13589 = state_13571;
                                            statearr_13589[12] = inst_13564;
                                            return statearr_13589;
                                          }();
                                          var statearr_13590_13614 = state_13571__$1;
                                          statearr_13590_13614[2] = null;
                                          statearr_13590_13614[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13572 === 10) {
                                            var inst_13539 = state_13571[2];
                                            var inst_13540 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_13571__$1 = function() {
                                              var statearr_13591 = state_13571;
                                              statearr_13591[13] = inst_13539;
                                              return statearr_13591;
                                            }();
                                            var statearr_13592_13615 = state_13571__$1;
                                            statearr_13592_13615[2] = inst_13540;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13571__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13572 === 8) {
                                              var inst_13553 = state_13571[2];
                                              var state_13571__$1 = state_13571;
                                              var statearr_13593_13616 = state_13571__$1;
                                              statearr_13593_13616[2] = inst_13553;
                                              statearr_13593_13616[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6353__auto__, c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_13597 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13597[0] = state_machine__6354__auto__;
                statearr_13597[1] = 1;
                return statearr_13597;
              };
              var state_machine__6354__auto____1 = function(state_13571) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_13571);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e13598) {
                      if (e13598 instanceof Object) {
                        var ex__6357__auto__ = e13598;
                        var statearr_13599_13617 = state_13571;
                        statearr_13599_13617[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13571);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13598;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13618 = state_13571;
                    state_13571 = G__13618;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_13571) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_13571);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6370__auto__ = function() {
          var statearr_13600 = f__6369__auto__.call(null);
          statearr_13600[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13601;
          return statearr_13600;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___13601, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___13726 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13726, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___13726, out) {
            return function(state_13702) {
              var state_val_13703 = state_13702[1];
              if (state_val_13703 === 7) {
                var inst_13681 = state_13702[7];
                var inst_13682 = state_13702[8];
                var inst_13681__$1 = state_13702[2];
                var inst_13682__$1 = cljs.core.nth.call(null, inst_13681__$1, 0, null);
                var inst_13683 = cljs.core.nth.call(null, inst_13681__$1, 1, null);
                var inst_13684 = inst_13682__$1 == null;
                var state_13702__$1 = function() {
                  var statearr_13704 = state_13702;
                  statearr_13704[7] = inst_13681__$1;
                  statearr_13704[9] = inst_13683;
                  statearr_13704[8] = inst_13682__$1;
                  return statearr_13704;
                }();
                if (cljs.core.truth_(inst_13684)) {
                  var statearr_13705_13727 = state_13702__$1;
                  statearr_13705_13727[1] = 8;
                } else {
                  var statearr_13706_13728 = state_13702__$1;
                  statearr_13706_13728[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13703 === 1) {
                  var inst_13673 = cljs.core.vec.call(null, chs);
                  var inst_13674 = inst_13673;
                  var state_13702__$1 = function() {
                    var statearr_13707 = state_13702;
                    statearr_13707[10] = inst_13674;
                    return statearr_13707;
                  }();
                  var statearr_13708_13729 = state_13702__$1;
                  statearr_13708_13729[2] = null;
                  statearr_13708_13729[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13703 === 4) {
                    var inst_13674 = state_13702[10];
                    var state_13702__$1 = state_13702;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_13702__$1, 7, inst_13674);
                  } else {
                    if (state_val_13703 === 6) {
                      var inst_13698 = state_13702[2];
                      var state_13702__$1 = state_13702;
                      var statearr_13709_13730 = state_13702__$1;
                      statearr_13709_13730[2] = inst_13698;
                      statearr_13709_13730[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13703 === 3) {
                        var inst_13700 = state_13702[2];
                        var state_13702__$1 = state_13702;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13702__$1, inst_13700);
                      } else {
                        if (state_val_13703 === 2) {
                          var inst_13674 = state_13702[10];
                          var inst_13676 = cljs.core.count.call(null, inst_13674);
                          var inst_13677 = inst_13676 > 0;
                          var state_13702__$1 = state_13702;
                          if (cljs.core.truth_(inst_13677)) {
                            var statearr_13711_13731 = state_13702__$1;
                            statearr_13711_13731[1] = 4;
                          } else {
                            var statearr_13712_13732 = state_13702__$1;
                            statearr_13712_13732[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13703 === 11) {
                            var inst_13674 = state_13702[10];
                            var inst_13691 = state_13702[2];
                            var tmp13710 = inst_13674;
                            var inst_13674__$1 = tmp13710;
                            var state_13702__$1 = function() {
                              var statearr_13713 = state_13702;
                              statearr_13713[10] = inst_13674__$1;
                              statearr_13713[11] = inst_13691;
                              return statearr_13713;
                            }();
                            var statearr_13714_13733 = state_13702__$1;
                            statearr_13714_13733[2] = null;
                            statearr_13714_13733[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13703 === 9) {
                              var inst_13682 = state_13702[8];
                              var state_13702__$1 = state_13702;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13702__$1, 11, out, inst_13682);
                            } else {
                              if (state_val_13703 === 5) {
                                var inst_13696 = cljs.core.async.close_BANG_.call(null, out);
                                var state_13702__$1 = state_13702;
                                var statearr_13715_13734 = state_13702__$1;
                                statearr_13715_13734[2] = inst_13696;
                                statearr_13715_13734[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13703 === 10) {
                                  var inst_13694 = state_13702[2];
                                  var state_13702__$1 = state_13702;
                                  var statearr_13716_13735 = state_13702__$1;
                                  statearr_13716_13735[2] = inst_13694;
                                  statearr_13716_13735[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13703 === 8) {
                                    var inst_13674 = state_13702[10];
                                    var inst_13681 = state_13702[7];
                                    var inst_13683 = state_13702[9];
                                    var inst_13682 = state_13702[8];
                                    var inst_13686 = function() {
                                      var c = inst_13683;
                                      var v = inst_13682;
                                      var vec__13679 = inst_13681;
                                      var cs = inst_13674;
                                      return function(c, v, vec__13679, cs, inst_13674, inst_13681, inst_13683, inst_13682, state_val_13703, c__6368__auto___13726, out) {
                                        return function(p1__13619_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__13619_SHARP_);
                                        };
                                      }(c, v, vec__13679, cs, inst_13674, inst_13681, inst_13683, inst_13682, state_val_13703, c__6368__auto___13726, out);
                                    }();
                                    var inst_13687 = cljs.core.filterv.call(null, inst_13686, inst_13674);
                                    var inst_13674__$1 = inst_13687;
                                    var state_13702__$1 = function() {
                                      var statearr_13717 = state_13702;
                                      statearr_13717[10] = inst_13674__$1;
                                      return statearr_13717;
                                    }();
                                    var statearr_13718_13736 = state_13702__$1;
                                    statearr_13718_13736[2] = null;
                                    statearr_13718_13736[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___13726, out);
          return function(switch__6353__auto__, c__6368__auto___13726, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_13722 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13722[0] = state_machine__6354__auto__;
                statearr_13722[1] = 1;
                return statearr_13722;
              };
              var state_machine__6354__auto____1 = function(state_13702) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_13702);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e13723) {
                      if (e13723 instanceof Object) {
                        var ex__6357__auto__ = e13723;
                        var statearr_13724_13737 = state_13702;
                        statearr_13724_13737[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13702);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13723;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13738 = state_13702;
                    state_13702 = G__13738;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_13702) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_13702);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___13726, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_13725 = f__6369__auto__.call(null);
          statearr_13725[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13726;
          return statearr_13725;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___13726, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___13831 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13831, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___13831, out) {
            return function(state_13808) {
              var state_val_13809 = state_13808[1];
              if (state_val_13809 === 7) {
                var inst_13790 = state_13808[7];
                var inst_13790__$1 = state_13808[2];
                var inst_13791 = inst_13790__$1 == null;
                var inst_13792 = cljs.core.not.call(null, inst_13791);
                var state_13808__$1 = function() {
                  var statearr_13810 = state_13808;
                  statearr_13810[7] = inst_13790__$1;
                  return statearr_13810;
                }();
                if (inst_13792) {
                  var statearr_13811_13832 = state_13808__$1;
                  statearr_13811_13832[1] = 8;
                } else {
                  var statearr_13812_13833 = state_13808__$1;
                  statearr_13812_13833[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13809 === 1) {
                  var inst_13785 = 0;
                  var state_13808__$1 = function() {
                    var statearr_13813 = state_13808;
                    statearr_13813[8] = inst_13785;
                    return statearr_13813;
                  }();
                  var statearr_13814_13834 = state_13808__$1;
                  statearr_13814_13834[2] = null;
                  statearr_13814_13834[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13809 === 4) {
                    var state_13808__$1 = state_13808;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13808__$1, 7, ch);
                  } else {
                    if (state_val_13809 === 6) {
                      var inst_13803 = state_13808[2];
                      var state_13808__$1 = state_13808;
                      var statearr_13815_13835 = state_13808__$1;
                      statearr_13815_13835[2] = inst_13803;
                      statearr_13815_13835[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13809 === 3) {
                        var inst_13805 = state_13808[2];
                        var inst_13806 = cljs.core.async.close_BANG_.call(null, out);
                        var state_13808__$1 = function() {
                          var statearr_13816 = state_13808;
                          statearr_13816[9] = inst_13805;
                          return statearr_13816;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13808__$1, inst_13806);
                      } else {
                        if (state_val_13809 === 2) {
                          var inst_13785 = state_13808[8];
                          var inst_13787 = inst_13785 < n;
                          var state_13808__$1 = state_13808;
                          if (cljs.core.truth_(inst_13787)) {
                            var statearr_13817_13836 = state_13808__$1;
                            statearr_13817_13836[1] = 4;
                          } else {
                            var statearr_13818_13837 = state_13808__$1;
                            statearr_13818_13837[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13809 === 11) {
                            var inst_13785 = state_13808[8];
                            var inst_13795 = state_13808[2];
                            var inst_13796 = inst_13785 + 1;
                            var inst_13785__$1 = inst_13796;
                            var state_13808__$1 = function() {
                              var statearr_13819 = state_13808;
                              statearr_13819[10] = inst_13795;
                              statearr_13819[8] = inst_13785__$1;
                              return statearr_13819;
                            }();
                            var statearr_13820_13838 = state_13808__$1;
                            statearr_13820_13838[2] = null;
                            statearr_13820_13838[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13809 === 9) {
                              var state_13808__$1 = state_13808;
                              var statearr_13821_13839 = state_13808__$1;
                              statearr_13821_13839[2] = null;
                              statearr_13821_13839[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13809 === 5) {
                                var state_13808__$1 = state_13808;
                                var statearr_13822_13840 = state_13808__$1;
                                statearr_13822_13840[2] = null;
                                statearr_13822_13840[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13809 === 10) {
                                  var inst_13800 = state_13808[2];
                                  var state_13808__$1 = state_13808;
                                  var statearr_13823_13841 = state_13808__$1;
                                  statearr_13823_13841[2] = inst_13800;
                                  statearr_13823_13841[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13809 === 8) {
                                    var inst_13790 = state_13808[7];
                                    var state_13808__$1 = state_13808;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13808__$1, 11, out, inst_13790);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___13831, out);
          return function(switch__6353__auto__, c__6368__auto___13831, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_13827 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_13827[0] = state_machine__6354__auto__;
                statearr_13827[1] = 1;
                return statearr_13827;
              };
              var state_machine__6354__auto____1 = function(state_13808) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_13808);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e13828) {
                      if (e13828 instanceof Object) {
                        var ex__6357__auto__ = e13828;
                        var statearr_13829_13842 = state_13808;
                        statearr_13829_13842[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13808);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13828;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13843 = state_13808;
                    state_13808 = G__13843;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_13808) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_13808);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___13831, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_13830 = f__6369__auto__.call(null);
          statearr_13830[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13831;
          return statearr_13830;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___13831, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___13940 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___13940, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___13940, out) {
            return function(state_13915) {
              var state_val_13916 = state_13915[1];
              if (state_val_13916 === 7) {
                var inst_13910 = state_13915[2];
                var state_13915__$1 = state_13915;
                var statearr_13917_13941 = state_13915__$1;
                statearr_13917_13941[2] = inst_13910;
                statearr_13917_13941[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13916 === 1) {
                  var inst_13892 = null;
                  var state_13915__$1 = function() {
                    var statearr_13918 = state_13915;
                    statearr_13918[7] = inst_13892;
                    return statearr_13918;
                  }();
                  var statearr_13919_13942 = state_13915__$1;
                  statearr_13919_13942[2] = null;
                  statearr_13919_13942[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13916 === 4) {
                    var inst_13895 = state_13915[8];
                    var inst_13895__$1 = state_13915[2];
                    var inst_13896 = inst_13895__$1 == null;
                    var inst_13897 = cljs.core.not.call(null, inst_13896);
                    var state_13915__$1 = function() {
                      var statearr_13920 = state_13915;
                      statearr_13920[8] = inst_13895__$1;
                      return statearr_13920;
                    }();
                    if (inst_13897) {
                      var statearr_13921_13943 = state_13915__$1;
                      statearr_13921_13943[1] = 5;
                    } else {
                      var statearr_13922_13944 = state_13915__$1;
                      statearr_13922_13944[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13916 === 6) {
                      var state_13915__$1 = state_13915;
                      var statearr_13923_13945 = state_13915__$1;
                      statearr_13923_13945[2] = null;
                      statearr_13923_13945[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13916 === 3) {
                        var inst_13912 = state_13915[2];
                        var inst_13913 = cljs.core.async.close_BANG_.call(null, out);
                        var state_13915__$1 = function() {
                          var statearr_13924 = state_13915;
                          statearr_13924[9] = inst_13912;
                          return statearr_13924;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13915__$1, inst_13913);
                      } else {
                        if (state_val_13916 === 2) {
                          var state_13915__$1 = state_13915;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13915__$1, 4, ch);
                        } else {
                          if (state_val_13916 === 11) {
                            var inst_13895 = state_13915[8];
                            var inst_13904 = state_13915[2];
                            var inst_13892 = inst_13895;
                            var state_13915__$1 = function() {
                              var statearr_13925 = state_13915;
                              statearr_13925[10] = inst_13904;
                              statearr_13925[7] = inst_13892;
                              return statearr_13925;
                            }();
                            var statearr_13926_13946 = state_13915__$1;
                            statearr_13926_13946[2] = null;
                            statearr_13926_13946[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13916 === 9) {
                              var inst_13895 = state_13915[8];
                              var state_13915__$1 = state_13915;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13915__$1, 11, out, inst_13895);
                            } else {
                              if (state_val_13916 === 5) {
                                var inst_13892 = state_13915[7];
                                var inst_13895 = state_13915[8];
                                var inst_13899 = cljs.core._EQ_.call(null, inst_13895, inst_13892);
                                var state_13915__$1 = state_13915;
                                if (inst_13899) {
                                  var statearr_13928_13947 = state_13915__$1;
                                  statearr_13928_13947[1] = 8;
                                } else {
                                  var statearr_13929_13948 = state_13915__$1;
                                  statearr_13929_13948[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13916 === 10) {
                                  var inst_13907 = state_13915[2];
                                  var state_13915__$1 = state_13915;
                                  var statearr_13930_13949 = state_13915__$1;
                                  statearr_13930_13949[2] = inst_13907;
                                  statearr_13930_13949[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13916 === 8) {
                                    var inst_13892 = state_13915[7];
                                    var tmp13927 = inst_13892;
                                    var inst_13892__$1 = tmp13927;
                                    var state_13915__$1 = function() {
                                      var statearr_13931 = state_13915;
                                      statearr_13931[7] = inst_13892__$1;
                                      return statearr_13931;
                                    }();
                                    var statearr_13932_13950 = state_13915__$1;
                                    statearr_13932_13950[2] = null;
                                    statearr_13932_13950[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___13940, out);
          return function(switch__6353__auto__, c__6368__auto___13940, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_13936 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_13936[0] = state_machine__6354__auto__;
                statearr_13936[1] = 1;
                return statearr_13936;
              };
              var state_machine__6354__auto____1 = function(state_13915) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_13915);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e13937) {
                      if (e13937 instanceof Object) {
                        var ex__6357__auto__ = e13937;
                        var statearr_13938_13951 = state_13915;
                        statearr_13938_13951[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13915);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13937;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13952 = state_13915;
                    state_13915 = G__13952;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_13915) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_13915);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___13940, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_13939 = f__6369__auto__.call(null);
          statearr_13939[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___13940;
          return statearr_13939;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___13940, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___14087 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___14087, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___14087, out) {
            return function(state_14057) {
              var state_val_14058 = state_14057[1];
              if (state_val_14058 === 7) {
                var inst_14053 = state_14057[2];
                var state_14057__$1 = state_14057;
                var statearr_14059_14088 = state_14057__$1;
                statearr_14059_14088[2] = inst_14053;
                statearr_14059_14088[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14058 === 1) {
                  var inst_14020 = new Array(n);
                  var inst_14021 = inst_14020;
                  var inst_14022 = 0;
                  var state_14057__$1 = function() {
                    var statearr_14060 = state_14057;
                    statearr_14060[7] = inst_14021;
                    statearr_14060[8] = inst_14022;
                    return statearr_14060;
                  }();
                  var statearr_14061_14089 = state_14057__$1;
                  statearr_14061_14089[2] = null;
                  statearr_14061_14089[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14058 === 4) {
                    var inst_14025 = state_14057[9];
                    var inst_14025__$1 = state_14057[2];
                    var inst_14026 = inst_14025__$1 == null;
                    var inst_14027 = cljs.core.not.call(null, inst_14026);
                    var state_14057__$1 = function() {
                      var statearr_14062 = state_14057;
                      statearr_14062[9] = inst_14025__$1;
                      return statearr_14062;
                    }();
                    if (inst_14027) {
                      var statearr_14063_14090 = state_14057__$1;
                      statearr_14063_14090[1] = 5;
                    } else {
                      var statearr_14064_14091 = state_14057__$1;
                      statearr_14064_14091[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14058 === 15) {
                      var inst_14047 = state_14057[2];
                      var state_14057__$1 = state_14057;
                      var statearr_14065_14092 = state_14057__$1;
                      statearr_14065_14092[2] = inst_14047;
                      statearr_14065_14092[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14058 === 13) {
                        var state_14057__$1 = state_14057;
                        var statearr_14066_14093 = state_14057__$1;
                        statearr_14066_14093[2] = null;
                        statearr_14066_14093[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14058 === 6) {
                          var inst_14022 = state_14057[8];
                          var inst_14043 = inst_14022 > 0;
                          var state_14057__$1 = state_14057;
                          if (cljs.core.truth_(inst_14043)) {
                            var statearr_14067_14094 = state_14057__$1;
                            statearr_14067_14094[1] = 12;
                          } else {
                            var statearr_14068_14095 = state_14057__$1;
                            statearr_14068_14095[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14058 === 3) {
                            var inst_14055 = state_14057[2];
                            var state_14057__$1 = state_14057;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14057__$1, inst_14055);
                          } else {
                            if (state_val_14058 === 12) {
                              var inst_14021 = state_14057[7];
                              var inst_14045 = cljs.core.vec.call(null, inst_14021);
                              var state_14057__$1 = state_14057;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14057__$1, 15, out, inst_14045);
                            } else {
                              if (state_val_14058 === 2) {
                                var state_14057__$1 = state_14057;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14057__$1, 4, ch);
                              } else {
                                if (state_val_14058 === 11) {
                                  var inst_14037 = state_14057[2];
                                  var inst_14038 = new Array(n);
                                  var inst_14021 = inst_14038;
                                  var inst_14022 = 0;
                                  var state_14057__$1 = function() {
                                    var statearr_14069 = state_14057;
                                    statearr_14069[7] = inst_14021;
                                    statearr_14069[8] = inst_14022;
                                    statearr_14069[10] = inst_14037;
                                    return statearr_14069;
                                  }();
                                  var statearr_14070_14096 = state_14057__$1;
                                  statearr_14070_14096[2] = null;
                                  statearr_14070_14096[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14058 === 9) {
                                    var inst_14021 = state_14057[7];
                                    var inst_14035 = cljs.core.vec.call(null, inst_14021);
                                    var state_14057__$1 = state_14057;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14057__$1, 11, out, inst_14035);
                                  } else {
                                    if (state_val_14058 === 5) {
                                      var inst_14021 = state_14057[7];
                                      var inst_14022 = state_14057[8];
                                      var inst_14030 = state_14057[11];
                                      var inst_14025 = state_14057[9];
                                      var inst_14029 = inst_14021[inst_14022] = inst_14025;
                                      var inst_14030__$1 = inst_14022 + 1;
                                      var inst_14031 = inst_14030__$1 < n;
                                      var state_14057__$1 = function() {
                                        var statearr_14071 = state_14057;
                                        statearr_14071[11] = inst_14030__$1;
                                        statearr_14071[12] = inst_14029;
                                        return statearr_14071;
                                      }();
                                      if (cljs.core.truth_(inst_14031)) {
                                        var statearr_14072_14097 = state_14057__$1;
                                        statearr_14072_14097[1] = 8;
                                      } else {
                                        var statearr_14073_14098 = state_14057__$1;
                                        statearr_14073_14098[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14058 === 14) {
                                        var inst_14050 = state_14057[2];
                                        var inst_14051 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_14057__$1 = function() {
                                          var statearr_14075 = state_14057;
                                          statearr_14075[13] = inst_14050;
                                          return statearr_14075;
                                        }();
                                        var statearr_14076_14099 = state_14057__$1;
                                        statearr_14076_14099[2] = inst_14051;
                                        statearr_14076_14099[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14058 === 10) {
                                          var inst_14041 = state_14057[2];
                                          var state_14057__$1 = state_14057;
                                          var statearr_14077_14100 = state_14057__$1;
                                          statearr_14077_14100[2] = inst_14041;
                                          statearr_14077_14100[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14058 === 8) {
                                            var inst_14021 = state_14057[7];
                                            var inst_14030 = state_14057[11];
                                            var tmp14074 = inst_14021;
                                            var inst_14021__$1 = tmp14074;
                                            var inst_14022 = inst_14030;
                                            var state_14057__$1 = function() {
                                              var statearr_14078 = state_14057;
                                              statearr_14078[7] = inst_14021__$1;
                                              statearr_14078[8] = inst_14022;
                                              return statearr_14078;
                                            }();
                                            var statearr_14079_14101 = state_14057__$1;
                                            statearr_14079_14101[2] = null;
                                            statearr_14079_14101[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___14087, out);
          return function(switch__6353__auto__, c__6368__auto___14087, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_14083 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14083[0] = state_machine__6354__auto__;
                statearr_14083[1] = 1;
                return statearr_14083;
              };
              var state_machine__6354__auto____1 = function(state_14057) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_14057);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e14084) {
                      if (e14084 instanceof Object) {
                        var ex__6357__auto__ = e14084;
                        var statearr_14085_14102 = state_14057;
                        statearr_14085_14102[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14057);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14084;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14103 = state_14057;
                    state_14057 = G__14103;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_14057) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_14057);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___14087, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_14086 = f__6369__auto__.call(null);
          statearr_14086[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___14087;
          return statearr_14086;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___14087, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6368__auto___14246 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto___14246, out) {
      return function() {
        var f__6369__auto__ = function() {
          var switch__6353__auto__ = function(c__6368__auto___14246, out) {
            return function(state_14216) {
              var state_val_14217 = state_14216[1];
              if (state_val_14217 === 7) {
                var inst_14212 = state_14216[2];
                var state_14216__$1 = state_14216;
                var statearr_14218_14247 = state_14216__$1;
                statearr_14218_14247[2] = inst_14212;
                statearr_14218_14247[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14217 === 1) {
                  var inst_14175 = [];
                  var inst_14176 = inst_14175;
                  var inst_14177 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_14216__$1 = function() {
                    var statearr_14219 = state_14216;
                    statearr_14219[7] = inst_14176;
                    statearr_14219[8] = inst_14177;
                    return statearr_14219;
                  }();
                  var statearr_14220_14248 = state_14216__$1;
                  statearr_14220_14248[2] = null;
                  statearr_14220_14248[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14217 === 4) {
                    var inst_14180 = state_14216[9];
                    var inst_14180__$1 = state_14216[2];
                    var inst_14181 = inst_14180__$1 == null;
                    var inst_14182 = cljs.core.not.call(null, inst_14181);
                    var state_14216__$1 = function() {
                      var statearr_14221 = state_14216;
                      statearr_14221[9] = inst_14180__$1;
                      return statearr_14221;
                    }();
                    if (inst_14182) {
                      var statearr_14222_14249 = state_14216__$1;
                      statearr_14222_14249[1] = 5;
                    } else {
                      var statearr_14223_14250 = state_14216__$1;
                      statearr_14223_14250[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14217 === 15) {
                      var inst_14206 = state_14216[2];
                      var state_14216__$1 = state_14216;
                      var statearr_14224_14251 = state_14216__$1;
                      statearr_14224_14251[2] = inst_14206;
                      statearr_14224_14251[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14217 === 13) {
                        var state_14216__$1 = state_14216;
                        var statearr_14225_14252 = state_14216__$1;
                        statearr_14225_14252[2] = null;
                        statearr_14225_14252[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14217 === 6) {
                          var inst_14176 = state_14216[7];
                          var inst_14201 = inst_14176.length;
                          var inst_14202 = inst_14201 > 0;
                          var state_14216__$1 = state_14216;
                          if (cljs.core.truth_(inst_14202)) {
                            var statearr_14226_14253 = state_14216__$1;
                            statearr_14226_14253[1] = 12;
                          } else {
                            var statearr_14227_14254 = state_14216__$1;
                            statearr_14227_14254[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14217 === 3) {
                            var inst_14214 = state_14216[2];
                            var state_14216__$1 = state_14216;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14216__$1, inst_14214);
                          } else {
                            if (state_val_14217 === 12) {
                              var inst_14176 = state_14216[7];
                              var inst_14204 = cljs.core.vec.call(null, inst_14176);
                              var state_14216__$1 = state_14216;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14216__$1, 15, out, inst_14204);
                            } else {
                              if (state_val_14217 === 2) {
                                var state_14216__$1 = state_14216;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14216__$1, 4, ch);
                              } else {
                                if (state_val_14217 === 11) {
                                  var inst_14184 = state_14216[10];
                                  var inst_14180 = state_14216[9];
                                  var inst_14194 = state_14216[2];
                                  var inst_14195 = [];
                                  var inst_14196 = inst_14195.push(inst_14180);
                                  var inst_14176 = inst_14195;
                                  var inst_14177 = inst_14184;
                                  var state_14216__$1 = function() {
                                    var statearr_14228 = state_14216;
                                    statearr_14228[11] = inst_14196;
                                    statearr_14228[7] = inst_14176;
                                    statearr_14228[8] = inst_14177;
                                    statearr_14228[12] = inst_14194;
                                    return statearr_14228;
                                  }();
                                  var statearr_14229_14255 = state_14216__$1;
                                  statearr_14229_14255[2] = null;
                                  statearr_14229_14255[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14217 === 9) {
                                    var inst_14176 = state_14216[7];
                                    var inst_14192 = cljs.core.vec.call(null, inst_14176);
                                    var state_14216__$1 = state_14216;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14216__$1, 11, out, inst_14192);
                                  } else {
                                    if (state_val_14217 === 5) {
                                      var inst_14184 = state_14216[10];
                                      var inst_14180 = state_14216[9];
                                      var inst_14177 = state_14216[8];
                                      var inst_14184__$1 = f.call(null, inst_14180);
                                      var inst_14185 = cljs.core._EQ_.call(null, inst_14184__$1, inst_14177);
                                      var inst_14186 = cljs.core.keyword_identical_QMARK_.call(null, inst_14177, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_14187 = inst_14185 || inst_14186;
                                      var state_14216__$1 = function() {
                                        var statearr_14230 = state_14216;
                                        statearr_14230[10] = inst_14184__$1;
                                        return statearr_14230;
                                      }();
                                      if (cljs.core.truth_(inst_14187)) {
                                        var statearr_14231_14256 = state_14216__$1;
                                        statearr_14231_14256[1] = 8;
                                      } else {
                                        var statearr_14232_14257 = state_14216__$1;
                                        statearr_14232_14257[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14217 === 14) {
                                        var inst_14209 = state_14216[2];
                                        var inst_14210 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_14216__$1 = function() {
                                          var statearr_14234 = state_14216;
                                          statearr_14234[13] = inst_14209;
                                          return statearr_14234;
                                        }();
                                        var statearr_14235_14258 = state_14216__$1;
                                        statearr_14235_14258[2] = inst_14210;
                                        statearr_14235_14258[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14217 === 10) {
                                          var inst_14199 = state_14216[2];
                                          var state_14216__$1 = state_14216;
                                          var statearr_14236_14259 = state_14216__$1;
                                          statearr_14236_14259[2] = inst_14199;
                                          statearr_14236_14259[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14217 === 8) {
                                            var inst_14184 = state_14216[10];
                                            var inst_14180 = state_14216[9];
                                            var inst_14176 = state_14216[7];
                                            var inst_14189 = inst_14176.push(inst_14180);
                                            var tmp14233 = inst_14176;
                                            var inst_14176__$1 = tmp14233;
                                            var inst_14177 = inst_14184;
                                            var state_14216__$1 = function() {
                                              var statearr_14237 = state_14216;
                                              statearr_14237[7] = inst_14176__$1;
                                              statearr_14237[14] = inst_14189;
                                              statearr_14237[8] = inst_14177;
                                              return statearr_14237;
                                            }();
                                            var statearr_14238_14260 = state_14216__$1;
                                            statearr_14238_14260[2] = null;
                                            statearr_14238_14260[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6368__auto___14246, out);
          return function(switch__6353__auto__, c__6368__auto___14246, out) {
            return function() {
              var state_machine__6354__auto__ = null;
              var state_machine__6354__auto____0 = function() {
                var statearr_14242 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14242[0] = state_machine__6354__auto__;
                statearr_14242[1] = 1;
                return statearr_14242;
              };
              var state_machine__6354__auto____1 = function(state_14216) {
                while (true) {
                  var ret_value__6355__auto__ = function() {
                    try {
                      while (true) {
                        var result__6356__auto__ = switch__6353__auto__.call(null, state_14216);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6356__auto__;
                        }
                        break;
                      }
                    } catch (e14243) {
                      if (e14243 instanceof Object) {
                        var ex__6357__auto__ = e14243;
                        var statearr_14244_14261 = state_14216;
                        statearr_14244_14261[5] = ex__6357__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14216);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14243;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14262 = state_14216;
                    state_14216 = G__14262;
                    continue;
                  } else {
                    return ret_value__6355__auto__;
                  }
                  break;
                }
              };
              state_machine__6354__auto__ = function(state_14216) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6354__auto____0.call(this);
                  case 1:
                    return state_machine__6354__auto____1.call(this, state_14216);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
              state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
              return state_machine__6354__auto__;
            }();
          }(switch__6353__auto__, c__6368__auto___14246, out);
        }();
        var state__6370__auto__ = function() {
          var statearr_14245 = f__6369__auto__.call(null);
          statearr_14245[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto___14246;
          return statearr_14245;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
      };
    }(c__6368__auto___14246, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", 
"\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.\u0259.", "b.e."], ERANAMES:["eram\u0131zdan \u0259vv\u0259l", "bizim eram\u0131z\u0131n"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", 
"Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ert\u0259si", "\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], STANDALONEWEEKDAYS:["bazar", "bazar ert\u0259si", 
"\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], SHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], STANDALONESHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-c\u00fc kv.", 
"4-c\u00fc kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-c\u00fc kvartal", "4-c\u00fc kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", 
"\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["1 \u0442\u0440\u0438\u043c.", "2 \u0442\u0440\u0438\u043c.", "3 \u0442\u0440\u0438\u043c.", "4 \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440.\u043e\u0431.", 
"\u0441\u043b.\u043e\u0431."], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d.MM.y '\u0433'.", "d.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", 
"\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", 
"\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", 
"\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", 
"\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", 
"\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], 
STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", 
"\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], 
SHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], STANDALONESHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], WEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["sul", "lun", "meu.", "mer.", "yaou", "gwe.", "sad."], STANDALONESHORTWEEKDAYS:["sul", 
"lun", "meu.", "mer.", "yaou", "gwe.", "sad."], NARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], STANDALONENARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", 
"juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], STANDALONESHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], SHORTWEEKDAYS:["dg.", 
"dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", 
"H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", 
"st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", 
"Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", 
"Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", 
"Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1} - {0}", "{1} - {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", 
"Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", "lun.", 
"mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d/M/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", 
"H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", 
"H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", 
"urria", "azaroa", "abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "y-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\u00f1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan", "feb", "mar", "abr", "mai", "xu\u00f1", "xul", "ago", "set", "out", "nov", "dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["domingo", "luns", "martes", "m\u00e9rcores", "xoves", "venres", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "m\u00e9r", 
"xov", "ven", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab8\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab2\u0abe", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aac\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0a9a\u0acb\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], ERANAMES:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", 
"\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], STANDALONESHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], 
WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", 
"\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u0915\u094b {0}", "{1} \u0915\u094b {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "p. Kr."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], ERANAMES:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], NARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], STANDALONENARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], MONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b", 
"\u0574\u0561\u0580\u057f\u056b", "\u0561\u057a\u0580\u056b\u056c\u056b", "\u0574\u0561\u0575\u056b\u057d\u056b", "\u0570\u0578\u0582\u0576\u056b\u057d\u056b", "\u0570\u0578\u0582\u056c\u056b\u057d\u056b", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b"], 
STANDALONEMONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], 
SHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", "\u0576\u0575\u0574", "\u0564\u056f\u057f"], STANDALONESHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", 
"\u0576\u0575\u0574", "\u0564\u056f\u057f"], WEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], STANDALONEWEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", 
"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], SHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], STANDALONESHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", 
"\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], NARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], STANDALONENARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], SHORTQUARTERS:["1-\u056b\u0576 \u0565\u057c\u0574\u057d.", "2-\u0580\u0564 \u0565\u057c\u0574\u057d.", "3-\u0580\u0564 \u0565\u057c\u0574\u057d.", "4-\u0580\u0564 \u0565\u057c\u0574\u057d."], QUARTERS:["1-\u056b\u0576 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", 
"2-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "3-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "4-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f"], AMPMS:["\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0561\u057c\u0561\u057b", "\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0570\u0565\u057f\u0578"], DATEFORMATS:["y\u0569. MMMM d, EEEE", "dd MMMM, y\u0569.", "dd MMM, y \u0569.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss, zzzz", "H:mm:ss, z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", 
"mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", 
"M", "\u00de", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", 
"Novembre", "Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", 
"mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["\u10eb\u10d5. \u10ec.", "\u10d0\u10ee. \u10ec."], ERANAMES:["\u10eb\u10d5\u10d4\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7", "\u10d0\u10ee\u10d0\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"], NARROWMONTHS:["\u10d8", "\u10d7", "\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], STANDALONENARROWMONTHS:["\u10d8", "\u10d7", 
"\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], MONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", 
"\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], STANDALONEMONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", 
"\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], SHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], 
STANDALONESHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], WEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", 
"\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], STANDALONEWEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], SHORTWEEKDAYS:["\u10d9\u10d5\u10d8", 
"\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], STANDALONESHORTWEEKDAYS:["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], NARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], STANDALONENARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], SHORTQUARTERS:["I \u10d9\u10d5.", 
"II \u10d9\u10d5.", "III \u10d9\u10d5.", "IV \u10d9\u10d5."], QUARTERS:["I \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "II \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "III \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "IV \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"], AMPMS:["\u10d3\u10d8\u10da\u10d8\u10e1", "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM, y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1}, {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", 
"\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], STANDALONEMONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", 
"\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], SHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], 
STANDALONESHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], WEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", 
"\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], SHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", 
"\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], STANDALONESHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", "\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], SHORTQUARTERS:["1-\u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0442\u043e\u049b\u0441\u0430\u043d", 
"3-\u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0442\u043e\u049b\u0441\u0430\u043d"], QUARTERS:["1-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"], AMPMS:["\u0442\u04af\u0441\u043a\u0435 \u0434\u0435\u0439\u0456\u043d", "\u0442\u04af\u0441\u0442\u0435\u043d \u043a\u0435\u0439\u0456\u043d"], 
DATEFORMATS:["EEEE, d MMMM y '\u0436'.", "d MMMM y '\u0436'.", "dd.MM.y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["\u1798\u17bb\u1793 \u1782.\u179f.", "\u1782.\u179f."], ERANAMES:["\u1798\u17bb\u1793\u200b\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", 
"\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONEMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", 
"\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], SHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", 
"\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONESHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", 
"\u1792\u17d2\u1793\u17bc"], WEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONEWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", 
"\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], SHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONESHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", 
"\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e4"], QUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", 
"\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], AMPMS:["\u1796\u17d2\u179a\u17b9\u1780", "\u179b\u17d2\u1784\u17b6\u1785"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], STANDALONESHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", 
"\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], 
STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0\u0cb5\u0cbf", 
"\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", 
"\u0ca4\u0ccd\u0cb0\u0cc8 4"], QUARTERS:["1 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["\u0431.\u0437. \u0447.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437. \u0447\u0435\u0439\u0438\u043d", "\u0431.\u0437."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], STANDALONEMONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", 
"\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], WEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", 
"\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], STANDALONEWEEKDAYS:["\u0416\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0414\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0428\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0428\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0416\u0443\u043c\u0430", "\u0418\u0448\u0435\u043c\u0431\u0438"], SHORTWEEKDAYS:["\u0416\u043a", "\u0414\u0448", "\u0428\u0435", "\u0428\u0430", "\u0411\u0448", 
"\u0416\u043c", "\u0418\u0448"], STANDALONESHORTWEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], SHORTQUARTERS:["1-\u0447\u0435\u0439.", "2-\u0447\u0435\u0439.", "3-\u0447\u0435\u0439.", "4-\u0447\u0435\u0439."], 
QUARTERS:["1-\u0447\u0435\u0439\u0440\u0435\u043a", "2-\u0447\u0435\u0439\u0440\u0435\u043a", "3-\u0447\u0435\u0439\u0440\u0435\u043a", "4-\u0447\u0435\u0439\u0440\u0435\u043a"], AMPMS:["\u0442\u04af\u0448\u043a\u04e9 \u0447\u0435\u0439\u0438\u043d\u043a\u0438", "\u0442\u04af\u0448\u0442\u04e9\u043d \u043a\u0438\u0439\u0438\u043d\u043a\u0438"], DATEFORMATS:["EEEE, d-MMMM, y-'\u0436'.", "d-MMMM, y-'\u0436'.", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], ERANAMES:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", 
"\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], STANDALONEMONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", 
"\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], SHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], STANDALONESHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", 
"\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], WEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONEWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], SHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", 
"\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONESHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["\u0e97", 
"\u0e88", "\u0e84", "\u200b\u0e9e\u0eb8", "\u0e9e", "\u200b\u0eaa\u0eb8", "\u0eaa"], SHORTQUARTERS:["\u0e95\u0ea11", "\u0e95\u0ea12", "\u0e95\u0ea13", "\u0e95\u0ea14"], QUARTERS:["\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 1", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 2", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 3", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 4"], AMPMS:["\u0e81\u0ec8\u0ead\u0e99\u0e97\u0ec8\u0ebd\u0e87", "\u0eab\u0ebc\u0eb1\u0e87\u0e97\u0ec8\u0ebd\u0e87"], DATEFORMATS:["EEEE \u0e97\u0eb5 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 zzzz", "H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", 
"bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["prie\u0161piet", 
"popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["Janv\u0101ris", "Febru\u0101ris", 
"Marts", "Apr\u012blis", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Janv.", "Febr.", "Marts", "Apr.", "Maijs", "J\u016bn.", "J\u016bl.", "Aug.", "Sept.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", 
"\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", 
"\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", 
"\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u043f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0432\u0442\u043e\u0440\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0442\u0440\u0435\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], 
AMPMS:["\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435", "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd MMMM y '\u0433'.", "dd MMMM y '\u0433'.", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d0e\u0d21\u0d3f"], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d7b\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", 
"\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", 
"\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", 
"\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["\u041c\u042d\u04e8", "\u041c\u042d"], ERANAMES:["\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439 \u04e9\u043c\u043d\u04e9\u0445", "\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], STANDALONEMONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], SHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", 
"2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], STANDALONESHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", 
"6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], WEEKDAYS:["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], STANDALONEWEEKDAYS:["\u043d\u044f\u043c", 
"\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], SHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], STANDALONESHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], NARROWWEEKDAYS:["1", 
"2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u04231", "\u04232", "\u04233", "\u04234"], QUARTERS:["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"], AMPMS:["\u04ae\u04e8", "\u04ae\u0425"], DATEFORMATS:["EEEE, y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' dd", "y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' d", 
"y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", 
"\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["[AM]", 
"[PM]"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} '\u0930\u094b\u091c\u0940' {0}", "{1} '\u0930\u094b\u091c\u0940' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["\u1018\u102e\u1005\u102e", "\u1021\u1031\u1012\u102e"], ERANAMES:["\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1019\u1015\u1031\u102b\u103a\u1019\u102e\u1000\u102c\u101c", "\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1015\u1031\u102b\u103a\u1011\u103d\u1014\u103a\u1038\u1015\u103c\u102e\u1038\u1000\u102c\u101c"], NARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", 
"\u1012"], STANDALONENARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", "\u1012"], MONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONEMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], SHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONESHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], WEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONEWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", 
"\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], SHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", 
"\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONESHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], NARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], STANDALONENARROWWEEKDAYS:["\u1010", 
"\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], SHORTQUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], QUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", 
"\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], AMPMS:["\u1014\u1036\u1014\u1000\u103a", "\u100a\u1014\u1031"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}\u1019\u103e\u102c {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], ERANAMES:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], NARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", "\u0967\u0968"], STANDALONENARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", 
"\u0967\u0968"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", 
"\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], STANDALONEWEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", "\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], SHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], 
NARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", "\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], QUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", 
"\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], AMPMS:["\u092a\u0942\u0930\u094d\u0935 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939", "\u0909\u0924\u094d\u0924\u0930 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], ERANAMES:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], NARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], STANDALONENARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], MONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", 
"\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONEMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", 
"\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], SHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", 
"\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONESHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], 
WEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], STANDALONEWEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", 
"\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], SHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], STANDALONESHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], 
NARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], STANDALONENARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], SHORTQUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", "\u0a2a\u0a42\u0a30\u0a3e"], QUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", 
"\u0a2a\u0a42\u0a30\u0a3e"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["da manh\u00e3", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", 
"dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", 
"\u043f\u0442", "\u0441\u0431"], STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0db4\u0dd6.", "\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0dc0."], ERANAMES:["\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0db4\u0dd6\u0dbb\u0dca\u200d\u0dc0", "\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0dc0\u0dbb\u0dca\u200d\u0dc2"], NARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], 
STANDALONENARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], MONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", 
"\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], STANDALONEMONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", "\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], SHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], STANDALONESHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], WEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", 
"\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], STANDALONEWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", 
"\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], SHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], STANDALONESHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", 
"\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], NARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], STANDALONENARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], SHORTQUARTERS:["\u0d9a\u0dcf\u0dbb\u0dca:1", "\u0d9a\u0dcf\u0dbb\u0dca:2", "\u0d9a\u0dcf\u0dbb\u0dca:3", 
"\u0d9a\u0dcf\u0dbb\u0dca:4"], QUARTERS:["1 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "2 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "3 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "4 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0"], AMPMS:["\u0db4\u0dd9.\u0dc0.", "\u0db4.\u0dc0."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["a h.mm.ss zzzz", "a h.mm.ss z", "a h.mm.ss", "a h.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", 
"d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH.mm.ss zzzz", 
"HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "e.r."], ERANAMES:["para er\u00ebs s\u00eb re", "er\u00ebs s\u00eb re"], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", 
"tetor", "n\u00ebntor", "dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], 
SHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["tremujori i par\u00eb", "tremujori i dyt\u00eb", "tremujori i tret\u00eb", "tremujori i kat\u00ebrt"], AMPMS:["paradite", "pasdite"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'n\u00eb' {0}", "{1} 'n\u00eb' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["S\u00f6ndag", "M\u00e5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["S\u00f6n", "M\u00e5n", "Tis", "Ons", "Tor", "Fre", "L\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd", "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", 
"\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", 
"\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", 
"\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", 
"\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", 
"\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", "\u0e28", "\u0e2a"], SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", 
"\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", 
"\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", 
"\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", 
"\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", 
"\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", 
"\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], 
AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["M.A.", "E"], ERANAMES:["M.A.", "E"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["Yanv", 
"Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], STANDALONESHORTMONTHS:["Yanv", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yaksh", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yaksh", "Dush", 
"Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng 1", "th\u00e1ng 2", "th\u00e1ng 3", "th\u00e1ng 4", "th\u00e1ng 5", "th\u00e1ng 6", "th\u00e1ng 7", "th\u00e1ng 8", "th\u00e1ng 9", "th\u00e1ng 10", "th\u00e1ng 11", "th\u00e1ng 12"], STANDALONEMONTHS:["Th\u00e1ng 1", "Th\u00e1ng 2", 
"Th\u00e1ng 3", "Th\u00e1ng 4", "Th\u00e1ng 5", "Th\u00e1ng 6", "Th\u00e1ng 7", "Th\u00e1ng 8", "Th\u00e1ng 9", "Th\u00e1ng 10", "Th\u00e1ng 11", "Th\u00e1ng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", 
"Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' MM 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", "{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", 
"11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", 
"\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", 
"\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy/M/d"], TIMEFORMATS:["zzzzah:mm:ss", "zah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}{0}", "{1}{0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "y/M/d"], TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", 
"ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "T", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota engu-1", "ikota engu-2", "ikota engu-3", "ikota engu-4"], AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "az") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
      } else {
        if (goog.LOCALE == "bg") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
        } else {
          if (goog.LOCALE == "bn") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
          } else {
            if (goog.LOCALE == "br") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
            } else {
              if (goog.LOCALE == "ca") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
              } else {
                if (goog.LOCALE == "chr") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
                } else {
                  if (goog.LOCALE == "cs") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
                  } else {
                    if (goog.LOCALE == "cy") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                    } else {
                      if (goog.LOCALE == "da") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                      } else {
                        if (goog.LOCALE == "de") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                          } else {
                            if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                            } else {
                              if (goog.LOCALE == "el") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                              } else {
                                if (goog.LOCALE == "en") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                } else {
                                  if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                                  } else {
                                    if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                    } else {
                                      if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                      } else {
                                        if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                        } else {
                                          if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                          } else {
                                            if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                            } else {
                                              if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                              } else {
                                                if (goog.LOCALE == "es") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                } else {
                                                  if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                  } else {
                                                    if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                    } else {
                                                      if (goog.LOCALE == "et") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                      } else {
                                                        if (goog.LOCALE == "eu") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                        } else {
                                                          if (goog.LOCALE == "fa") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                          } else {
                                                            if (goog.LOCALE == "fi") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                            } else {
                                                              if (goog.LOCALE == "fil") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                              } else {
                                                                if (goog.LOCALE == "fr") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                                } else {
                                                                  if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                                  } else {
                                                                    if (goog.LOCALE == "gl") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                                    } else {
                                                                      if (goog.LOCALE == "gsw") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                      } else {
                                                                        if (goog.LOCALE == "gu") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                        } else {
                                                                          if (goog.LOCALE == "haw") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                          } else {
                                                                            if (goog.LOCALE == "he") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                            } else {
                                                                              if (goog.LOCALE == "hi") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                              } else {
                                                                                if (goog.LOCALE == "hr") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                                } else {
                                                                                  if (goog.LOCALE == "hu") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "hy") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "id") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "in") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "is") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "it") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "iw") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "ja") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "ka") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "kk") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "km") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "kn") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "ko") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "ky") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "ln") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "lo") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "lt") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "lv") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "mk") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "ml") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "mn") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "mr") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "ms") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "mt") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "my") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "nb") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "ne") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "nl") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "no") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "no_NO" || goog.LOCALE == "no-NO") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "or") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "pa") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "pl") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "pt") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "ro") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "ru") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "si") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "sk") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "sl") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                                                  } else {
                                                                                                                                                                    if (goog.LOCALE == "sq") {
                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                                                    } else {
                                                                                                                                                                      if (goog.LOCALE == "sr") {
                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                                                      } else {
                                                                                                                                                                        if (goog.LOCALE == "sv") {
                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                                                        } else {
                                                                                                                                                                          if (goog.LOCALE == "sw") {
                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                                                          } else {
                                                                                                                                                                            if (goog.LOCALE == "ta") {
                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                                                            } else {
                                                                                                                                                                              if (goog.LOCALE == "te") {
                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                                                              } else {
                                                                                                                                                                                if (goog.LOCALE == "th") {
                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                                                                } else {
                                                                                                                                                                                  if (goog.LOCALE == "tl") {
                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if (goog.LOCALE == "tr") {
                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if (goog.LOCALE == "uk") {
                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if (goog.LOCALE == "ur") {
                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if (goog.LOCALE == "uz") {
                                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if (goog.LOCALE == "vi") {
                                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if (goog.LOCALE == "zh") {
                                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if (goog.LOCALE == "zu") {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":yearNum});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = opt_weekDay || goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var ONE_DAY = 24 * 60 * 60 * 1E3;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * ONE_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / ONE_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = parts[2] * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? parts[4] * 1E3 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 6E4);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = (opt_months);
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = (opt_years) || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return(this.date.getMonth());
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return(this.getDay() + 6) % 7;
};
goog.date.Date.prototype.getWeekday = function() {
  return(this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return(this.date.getUTCMonth());
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return(this.date.getUTCDay() + 6) % 7;
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return(this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1;m >= 0;m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 864E5);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return!!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return!isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return(this.date.getUTCDay());
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setHours(this.date.getHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setMinutes(this.date.getMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setSeconds(this.date.getSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    var MSG_TIME_AM = goog.getMsg("am");
    var MSG_TIME_PM = goog.getMsg("pm");
    label += isPM ? MSG_TIME_PM : MSG_TIME_AM;
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1E3 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("cljs_time.core");
goog.require("cljs.core");
goog.require("goog.i18n.TimeZone");
goog.require("goog.date.UtcDateTime");
cljs_time.core._EQ_ = function() {
  var _EQ___delegate = function(args) {
    if (cljs.core.every_QMARK_.call(null, function(p1__14373_SHARP_) {
      return p1__14373_SHARP_ instanceof goog.date.UtcDateTime;
    }, args)) {
      return cljs.core.apply.call(null, cljs.core._EQ_, cljs.core.map.call(null, function(p1__14374_SHARP_) {
        return p1__14374_SHARP_.getTime();
      }, args));
    } else {
      return cljs.core.apply.call(null, cljs.core._EQ_, args);
    }
  };
  var _EQ_ = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return _EQ___delegate.call(this, args);
  };
  _EQ_.cljs$lang$maxFixedArity = 0;
  _EQ_.cljs$lang$applyTo = function(arglist__14375) {
    var args = cljs.core.seq(arglist__14375);
    return _EQ___delegate(args);
  };
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___delegate;
  return _EQ_;
}();
cljs_time.core.DateTimeProtocol = function() {
  var obj14377 = {};
  return obj14377;
}();
cljs_time.core.year = function year(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$year$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$year$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.year[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.year["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.year", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.month = function month(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$month$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$month$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.month[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.month["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.month", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day = function day(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.day[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.day["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day_of_week = function day_of_week(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.day_of_week[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.day_of_week["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day-of-week", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.hour = function hour(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$hour$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$hour$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.hour[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.hour["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.hour", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.minute = function minute(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minute$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minute$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.minute[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.minute["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minute", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.sec = function sec(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$sec$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$sec$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.sec[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.sec["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.sec", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.second = function second(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$second$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$second$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.second[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.second["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.second", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.milli = function milli(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$milli$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$milli$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.milli[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.milli["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.milli", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.after_QMARK_ = function after_QMARK_(this$, that) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2(this$, that);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.after_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.after_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.after?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.before_QMARK_ = function before_QMARK_(this$, that) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2(this$, that);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.before_QMARK_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.before_QMARK_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.before?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.plus_ = function plus_(this$, period) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2(this$, period);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.plus_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.plus_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.plus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.minus_ = function minus_(this$, period) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2(this$, period);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = cljs_time.core.minus_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.core.minus_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.utc = goog.i18n.TimeZone.createTimeZone(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "UTC", new cljs.core.Keyword(null, "std_offset", "std_offset", 1663653877), 0, new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["UTC"], null), new cljs.core.Keyword(null, "transitions", "transitions", -2046216121), cljs.core.PersistentVector.EMPTY], 
null)));
cljs_time.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.core.periods = function() {
  var fixed_time_fn = function(f, set_fn, op, date, value) {
    var date__$1 = date.clone();
    set_fn.call(null, date__$1, op.call(null, f.call(null, date__$1), value));
    return date__$1;
  };
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.milli, function(fixed_time_fn) {
    return function(p1__14378_SHARP_, p2__14379_SHARP_) {
      return p1__14378_SHARP_.setMilliseconds(p2__14379_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.second, function(fixed_time_fn) {
    return function(p1__14380_SHARP_, p2__14381_SHARP_) {
      return p1__14380_SHARP_.setSeconds(p2__14381_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.minute, function(fixed_time_fn) {
    return function(p1__14382_SHARP_, p2__14383_SHARP_) {
      return p1__14382_SHARP_.setMinutes(p2__14383_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.hour, function(fixed_time_fn) {
    return function(p1__14384_SHARP_, p2__14385_SHARP_) {
      return p1__14384_SHARP_.setHours(p2__14385_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.day, function(fixed_time_fn) {
    return function(p1__14386_SHARP_, p2__14387_SHARP_) {
      return p1__14386_SHARP_.setDate(p2__14387_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      date__$1.setDate(op.call(null, cljs_time.core.day.call(null, date__$1), 7 * value));
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "months", "months", -45571637), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      var m = op.call(null, cljs_time.core.month.call(null, date__$1), value);
      var y = cljs_time.core.year.call(null, date__$1);
      var y__$1 = m > 12 ? y + 1 : m < 1 ? y - 1 : y;
      var m__$1 = m > 12 ? cljs.core.mod.call(null, m, 12) : m < 1 ? m + 12 : m;
      date__$1.setMonth(m__$1 - 1);
      date__$1.setYear(y__$1);
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "years", "years", -1298579689), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(function() {
        var and__3539__auto__ = cljs_time.core.leap_year_QMARK_.call(null, cljs_time.core.year.call(null, date__$1));
        if (and__3539__auto__) {
          var and__3539__auto____$1 = cljs_time.core._EQ_.call(null, 2, cljs_time.core.month.call(null, date__$1));
          if (cljs.core.truth_(and__3539__auto____$1)) {
            return cljs_time.core._EQ_.call(null, 29, cljs_time.core.day.call(null, date__$1));
          } else {
            return and__3539__auto____$1;
          }
        } else {
          return and__3539__auto__;
        }
      }())) {
        date__$1.setDate(28);
      } else {
      }
      date__$1.setYear(op.call(null, cljs_time.core.year.call(null, date__$1), value));
      return date__$1;
    };
  }(fixed_time_fn)], null);
}();
cljs_time.core.period_fn = function period_fn(p) {
  return function(operator, date) {
    return cljs.core.reduce.call(null, function(p1__14389_SHARP_, p2__14388_SHARP_) {
      return cljs_time.core.periods.call(null, cljs.core.key.call(null, p2__14388_SHARP_)).call(null, operator, p1__14389_SHARP_, cljs.core.val.call(null, p2__14388_SHARP_));
    }, date, p);
  };
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
cljs_time.core._STAR_sys_time_STAR_ = null;
cljs_time.core.now = function now() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    return cljs_time.core._STAR_sys_time_STAR_;
  } else {
    return new goog.date.UtcDateTime;
  }
};
cljs_time.core.at_midnight = function at_midnight(datetime) {
  var datetime__$1 = datetime.clone();
  var G__14391 = datetime__$1;
  G__14391.setHours(0);
  G__14391.setMinutes(0);
  G__14391.setSeconds(0);
  G__14391.setMilliseconds(0);
  return G__14391;
};
cljs_time.core.today_at_midnight = function today_at_midnight() {
  return cljs_time.core.at_midnight.call(null, cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_) ? cljs_time.core._STAR_sys_time_STAR_ : cljs_time.core.now.call(null));
};
cljs_time.core.epoch = function epoch() {
  var G__14393 = new goog.date.UtcDateTime;
  G__14393.setTime(0);
  return G__14393;
};
cljs_time.core.date_midnight = function() {
  var date_midnight = null;
  var date_midnight__1 = function(year) {
    return date_midnight.call(null, year, 1, 1);
  };
  var date_midnight__2 = function(year, month) {
    return date_midnight.call(null, year, month, 1);
  };
  var date_midnight__3 = function(year, month, day) {
    return new goog.date.UtcDateTime(year, month - 1, day);
  };
  date_midnight = function(year, month, day) {
    switch(arguments.length) {
      case 1:
        return date_midnight__1.call(this, year);
      case 2:
        return date_midnight__2.call(this, year, month);
      case 3:
        return date_midnight__3.call(this, year, month, day);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_midnight.cljs$core$IFn$_invoke$arity$1 = date_midnight__1;
  date_midnight.cljs$core$IFn$_invoke$arity$2 = date_midnight__2;
  date_midnight.cljs$core$IFn$_invoke$arity$3 = date_midnight__3;
  return date_midnight;
}();
cljs_time.core.date_time = function() {
  var date_time = null;
  var date_time__1 = function(year) {
    return date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var date_time__2 = function(year, month) {
    return date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var date_time__3 = function(year, month, day) {
    return date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var date_time__4 = function(year, month, day, hour) {
    return date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var date_time__5 = function(year, month, day, hour, minute) {
    return date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var date_time__6 = function(year, month, day, hour, minute, second) {
    return date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.UtcDateTime(year, month - 1, day, hour, minute, second, millis);
  };
  date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return date_time__1.call(this, year);
      case 2:
        return date_time__2.call(this, year, month);
      case 3:
        return date_time__3.call(this, year, month, day);
      case 4:
        return date_time__4.call(this, year, month, day, hour);
      case 5:
        return date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_time.cljs$core$IFn$_invoke$arity$1 = date_time__1;
  date_time.cljs$core$IFn$_invoke$arity$2 = date_time__2;
  date_time.cljs$core$IFn$_invoke$arity$3 = date_time__3;
  date_time.cljs$core$IFn$_invoke$arity$4 = date_time__4;
  date_time.cljs$core$IFn$_invoke$arity$5 = date_time__5;
  date_time.cljs$core$IFn$_invoke$arity$6 = date_time__6;
  date_time.cljs$core$IFn$_invoke$arity$7 = date_time__7;
  return date_time;
}();
cljs_time.core.period = function() {
  var period = null;
  var period__2 = function(period__$1, value) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap.fromArray([period__$1, value], true, false), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486)], null));
  };
  var period__3 = function() {
    var G__14394__delegate = function(p1, v1, kvs) {
      return cljs.core.apply.call(null, cljs.core.assoc, period.call(null, p1, v1), kvs);
    };
    var G__14394 = function(p1, v1, var_args) {
      var kvs = null;
      if (arguments.length > 2) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14394__delegate.call(this, p1, v1, kvs);
    };
    G__14394.cljs$lang$maxFixedArity = 2;
    G__14394.cljs$lang$applyTo = function(arglist__14395) {
      var p1 = cljs.core.first(arglist__14395);
      arglist__14395 = cljs.core.next(arglist__14395);
      var v1 = cljs.core.first(arglist__14395);
      var kvs = cljs.core.rest(arglist__14395);
      return G__14394__delegate(p1, v1, kvs);
    };
    G__14394.cljs$core$IFn$_invoke$arity$variadic = G__14394__delegate;
    return G__14394;
  }();
  period = function(p1, v1, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return period__2.call(this, p1, v1);
      default:
        return period__3.cljs$core$IFn$_invoke$arity$variadic(p1, v1, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  period.cljs$lang$maxFixedArity = 2;
  period.cljs$lang$applyTo = period__3.cljs$lang$applyTo;
  period.cljs$core$IFn$_invoke$arity$2 = period__2;
  period.cljs$core$IFn$_invoke$arity$variadic = period__3.cljs$core$IFn$_invoke$arity$variadic;
  return period;
}();
cljs_time.core.years = function() {
  var years = null;
  var years__0 = function() {
    return years.call(null, null);
  };
  var years__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), n);
  };
  years = function(n) {
    switch(arguments.length) {
      case 0:
        return years__0.call(this);
      case 1:
        return years__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  years.cljs$core$IFn$_invoke$arity$0 = years__0;
  years.cljs$core$IFn$_invoke$arity$1 = years__1;
  return years;
}();
cljs_time.core.months = function() {
  var months = null;
  var months__0 = function() {
    return months.call(null, null);
  };
  var months__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), n);
  };
  months = function(n) {
    switch(arguments.length) {
      case 0:
        return months__0.call(this);
      case 1:
        return months__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  months.cljs$core$IFn$_invoke$arity$0 = months__0;
  months.cljs$core$IFn$_invoke$arity$1 = months__1;
  return months;
}();
cljs_time.core.weeks = function() {
  var weeks = null;
  var weeks__0 = function() {
    return weeks.call(null, null);
  };
  var weeks__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), n);
  };
  weeks = function(n) {
    switch(arguments.length) {
      case 0:
        return weeks__0.call(this);
      case 1:
        return weeks__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  weeks.cljs$core$IFn$_invoke$arity$0 = weeks__0;
  weeks.cljs$core$IFn$_invoke$arity$1 = weeks__1;
  return weeks;
}();
cljs_time.core.days = function() {
  var days = null;
  var days__0 = function() {
    return days.call(null, null);
  };
  var days__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), n);
  };
  days = function(n) {
    switch(arguments.length) {
      case 0:
        return days__0.call(this);
      case 1:
        return days__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  days.cljs$core$IFn$_invoke$arity$0 = days__0;
  days.cljs$core$IFn$_invoke$arity$1 = days__1;
  return days;
}();
cljs_time.core.hours = function() {
  var hours = null;
  var hours__0 = function() {
    return hours.call(null, null);
  };
  var hours__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), n);
  };
  hours = function(n) {
    switch(arguments.length) {
      case 0:
        return hours__0.call(this);
      case 1:
        return hours__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hours.cljs$core$IFn$_invoke$arity$0 = hours__0;
  hours.cljs$core$IFn$_invoke$arity$1 = hours__1;
  return hours;
}();
cljs_time.core.minutes = function() {
  var minutes = null;
  var minutes__0 = function() {
    return minutes.call(null, null);
  };
  var minutes__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), n);
  };
  minutes = function(n) {
    switch(arguments.length) {
      case 0:
        return minutes__0.call(this);
      case 1:
        return minutes__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minutes.cljs$core$IFn$_invoke$arity$0 = minutes__0;
  minutes.cljs$core$IFn$_invoke$arity$1 = minutes__1;
  return minutes;
}();
cljs_time.core.seconds = function() {
  var seconds = null;
  var seconds__0 = function() {
    return seconds.call(null, null);
  };
  var seconds__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), n);
  };
  seconds = function(n) {
    switch(arguments.length) {
      case 0:
        return seconds__0.call(this);
      case 1:
        return seconds__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seconds.cljs$core$IFn$_invoke$arity$0 = seconds__0;
  seconds.cljs$core$IFn$_invoke$arity$1 = seconds__1;
  return seconds;
}();
cljs_time.core.millis = function() {
  var millis = null;
  var millis__0 = function() {
    return millis.call(null, null);
  };
  var millis__1 = function(n) {
    return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), n);
  };
  millis = function(n) {
    switch(arguments.length) {
      case 0:
        return millis__0.call(this);
      case 1:
        return millis__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  millis.cljs$core$IFn$_invoke$arity$0 = millis__0;
  millis.cljs$core$IFn$_invoke$arity$1 = millis__1;
  return millis;
}();
cljs_time.core.plus = function() {
  var plus = null;
  var plus__2 = function(dt, p) {
    return cljs_time.core.plus_.call(null, dt, p);
  };
  var plus__3 = function() {
    var G__14396__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.plus_, cljs_time.core.plus_.call(null, dt, p), ps);
    };
    var G__14396 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14396__delegate.call(this, dt, p, ps);
    };
    G__14396.cljs$lang$maxFixedArity = 2;
    G__14396.cljs$lang$applyTo = function(arglist__14397) {
      var dt = cljs.core.first(arglist__14397);
      arglist__14397 = cljs.core.next(arglist__14397);
      var p = cljs.core.first(arglist__14397);
      var ps = cljs.core.rest(arglist__14397);
      return G__14396__delegate(dt, p, ps);
    };
    G__14396.cljs$core$IFn$_invoke$arity$variadic = G__14396__delegate;
    return G__14396;
  }();
  plus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return plus__2.call(this, dt, p);
      default:
        return plus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  plus.cljs$lang$maxFixedArity = 2;
  plus.cljs$lang$applyTo = plus__3.cljs$lang$applyTo;
  plus.cljs$core$IFn$_invoke$arity$2 = plus__2;
  plus.cljs$core$IFn$_invoke$arity$variadic = plus__3.cljs$core$IFn$_invoke$arity$variadic;
  return plus;
}();
cljs_time.core.minus = function() {
  var minus = null;
  var minus__2 = function(dt, p) {
    return cljs_time.core.minus_.call(null, dt, p);
  };
  var minus__3 = function() {
    var G__14398__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.minus_, cljs_time.core.minus_.call(null, dt, p), ps);
    };
    var G__14398 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14398__delegate.call(this, dt, p, ps);
    };
    G__14398.cljs$lang$maxFixedArity = 2;
    G__14398.cljs$lang$applyTo = function(arglist__14399) {
      var dt = cljs.core.first(arglist__14399);
      arglist__14399 = cljs.core.next(arglist__14399);
      var p = cljs.core.first(arglist__14399);
      var ps = cljs.core.rest(arglist__14399);
      return G__14398__delegate(dt, p, ps);
    };
    G__14398.cljs$core$IFn$_invoke$arity$variadic = G__14398__delegate;
    return G__14398;
  }();
  minus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return minus__2.call(this, dt, p);
      default:
        return minus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minus.cljs$lang$maxFixedArity = 2;
  minus.cljs$lang$applyTo = minus__3.cljs$lang$applyTo;
  minus.cljs$core$IFn$_invoke$arity$2 = minus__2;
  minus.cljs$core$IFn$_invoke$arity$variadic = minus__3.cljs$core$IFn$_invoke$arity$variadic;
  return minus;
}();
cljs_time.core.ago = function ago(period) {
  return cljs_time.core.minus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.from_now = function from_now(period) {
  return cljs_time.core.plus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.interval = function interval(start, end) {
  if (start.getTime() < end.getTime()) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null))))));
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), start, new cljs.core.Keyword(null, "end", "end", -268185958), end], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null));
};
cljs_time.core.start = function start(in$) {
  return(new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.end = function end(in$) {
  return(new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.extend = function() {
  var extend__delegate = function(in$, by) {
    return cljs.core.assoc.call(null, in$, new cljs.core.Keyword(null, "end", "end", -268185958), cljs.core.apply.call(null, cljs_time.core.plus, cljs_time.core.end.call(null, in$), by));
  };
  var extend = function(in$, var_args) {
    var by = null;
    if (arguments.length > 1) {
      by = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return extend__delegate.call(this, in$, by);
  };
  extend.cljs$lang$maxFixedArity = 1;
  extend.cljs$lang$applyTo = function(arglist__14400) {
    var in$ = cljs.core.first(arglist__14400);
    var by = cljs.core.rest(arglist__14400);
    return extend__delegate(in$, by);
  };
  extend.cljs$core$IFn$_invoke$arity$variadic = extend__delegate;
  return extend;
}();
cljs_time.core.in_millis = function in_millis(p__14401) {
  var map__14403 = p__14401;
  var map__14403__$1 = cljs.core.seq_QMARK_.call(null, map__14403) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14403) : map__14403;
  var end = cljs.core.get.call(null, map__14403__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__14403__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return end.getTime() - start.getTime();
};
cljs_time.core.in_seconds = function in_seconds(in$) {
  return cljs_time.core.in_millis.call(null, in$) / 1E3 | 0;
};
cljs_time.core.in_minutes = function in_minutes(in$) {
  return cljs_time.core.in_seconds.call(null, in$) / 60 | 0;
};
cljs_time.core.in_hours = function in_hours(in$) {
  return cljs_time.core.in_minutes.call(null, in$) / 60 | 0;
};
cljs_time.core.in_days = function in_days(in$) {
  return cljs_time.core.in_hours.call(null, in$) / 24 | 0;
};
cljs_time.core.in_weeks = function in_weeks(in$) {
  return cljs_time.core.in_days.call(null, in$) / 7 | 0;
};
cljs_time.core.month_range = function month_range(p__14406) {
  var map__14408 = p__14406;
  var map__14408__$1 = cljs.core.seq_QMARK_.call(null, map__14408) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14408) : map__14408;
  var end = cljs.core.get.call(null, map__14408__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__14408__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.take_while.call(null, function(map__14408, map__14408__$1, end, start) {
    return function(p1__14404_SHARP_) {
      return cljs_time.core.before_QMARK_.call(null, p1__14404_SHARP_, end);
    };
  }(map__14408, map__14408__$1, end, start), cljs.core.map.call(null, function(map__14408, map__14408__$1, end, start) {
    return function(p1__14405_SHARP_) {
      return cljs_time.core.plus.call(null, start, cljs_time.core.months.call(null, p1__14405_SHARP_ + 1));
    };
  }(map__14408, map__14408__$1, end, start), cljs.core.range.call(null)));
};
cljs_time.core.total_days_in_whole_months = function total_days_in_whole_months(interval) {
  return cljs.core.map.call(null, function(p1__14409_SHARP_) {
    return p1__14409_SHARP_.getNumberOfDaysInMonth();
  }, cljs_time.core.month_range.call(null, interval));
};
cljs_time.core.in_months = function in_months(p__14410) {
  var map__14412 = p__14410;
  var map__14412__$1 = cljs.core.seq_QMARK_.call(null, map__14412) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14412) : map__14412;
  var interval = map__14412__$1;
  var end = cljs.core.get.call(null, map__14412__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__14412__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.count.call(null, cljs_time.core.total_days_in_whole_months.call(null, interval));
};
cljs_time.core.in_years = function in_years(p__14413) {
  var map__14415 = p__14413;
  var map__14415__$1 = cljs.core.seq_QMARK_.call(null, map__14415) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14415) : map__14415;
  var end = cljs.core.get.call(null, map__14415__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__14415__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var sm = cljs_time.core.month.call(null, start);
  var sd = cljs_time.core.day.call(null, start);
  var em = cljs_time.core.month.call(null, end);
  var ed = cljs_time.core.day.call(null, end);
  var d1 = cljs.core.truth_(function() {
    var and__3539__auto__ = cljs_time.core._EQ_.call(null, sm, 2);
    if (cljs.core.truth_(and__3539__auto__)) {
      var and__3539__auto____$1 = cljs_time.core._EQ_.call(null, sd, 29);
      if (cljs.core.truth_(and__3539__auto____$1)) {
        var and__3539__auto____$2 = cljs_time.core._EQ_.call(null, em, 2);
        if (cljs.core.truth_(and__3539__auto____$2)) {
          return cljs_time.core._EQ_.call(null, ed, 28);
        } else {
          return and__3539__auto____$2;
        }
      } else {
        return and__3539__auto____$1;
      }
    } else {
      return and__3539__auto__;
    }
  }()) ? 0 : cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 0 : cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 1 : 0;
  return cljs_time.core.year.call(null, end) - cljs_time.core.year.call(null, start) - d1;
};
cljs_time.core.within_QMARK_ = function() {
  var within_QMARK_ = null;
  var within_QMARK___2 = function(p__14416, date) {
    var map__14418 = p__14416;
    var map__14418__$1 = cljs.core.seq_QMARK_.call(null, map__14418) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14418) : map__14418;
    var end = cljs.core.get.call(null, map__14418__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var start = cljs.core.get.call(null, map__14418__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    return within_QMARK_.call(null, start, end, date);
  };
  var within_QMARK___3 = function(start, end, date) {
    var or__3551__auto__ = cljs_time.core._EQ_.call(null, start, date);
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      var and__3539__auto__ = cljs_time.core.before_QMARK_.call(null, start, date);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end, date);
      } else {
        return and__3539__auto__;
      }
    }
  };
  within_QMARK_ = function(start, end, date) {
    switch(arguments.length) {
      case 2:
        return within_QMARK___2.call(this, start, end);
      case 3:
        return within_QMARK___3.call(this, start, end, date);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  within_QMARK_.cljs$core$IFn$_invoke$arity$2 = within_QMARK___2;
  within_QMARK_.cljs$core$IFn$_invoke$arity$3 = within_QMARK___3;
  return within_QMARK_;
}();
cljs_time.core.overlaps_QMARK_ = function() {
  var overlaps_QMARK_ = null;
  var overlaps_QMARK___2 = function(p__14419, p__14420) {
    var map__14423 = p__14419;
    var map__14423__$1 = cljs.core.seq_QMARK_.call(null, map__14423) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14423) : map__14423;
    var start_a = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_a = cljs.core.get.call(null, map__14423__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var map__14424 = p__14420;
    var map__14424__$1 = cljs.core.seq_QMARK_.call(null, map__14424) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14424) : map__14424;
    var start_b = cljs.core.get.call(null, map__14424__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_b = cljs.core.get.call(null, map__14424__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    return overlaps_QMARK_.call(null, start_a, end_a, start_b, end_b);
  };
  var overlaps_QMARK___4 = function(start_a, end_a, start_b, end_b) {
    var or__3551__auto__ = function() {
      var and__3539__auto__ = cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      } else {
        return and__3539__auto__;
      }
    }();
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      var and__3539__auto__ = cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      if (cljs.core.truth_(and__3539__auto__)) {
        return cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      } else {
        return and__3539__auto__;
      }
    }
  };
  overlaps_QMARK_ = function(start_a, end_a, start_b, end_b) {
    switch(arguments.length) {
      case 2:
        return overlaps_QMARK___2.call(this, start_a, end_a);
      case 4:
        return overlaps_QMARK___4.call(this, start_a, end_a, start_b, end_b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2 = overlaps_QMARK___2;
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4 = overlaps_QMARK___4;
  return overlaps_QMARK_;
}();
cljs_time.core.abuts_QMARK_ = function abuts_QMARK_(p__14425, p__14426) {
  var map__14429 = p__14425;
  var map__14429__$1 = cljs.core.seq_QMARK_.call(null, map__14429) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14429) : map__14429;
  var start_a = cljs.core.get.call(null, map__14429__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__14429__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__14430 = p__14426;
  var map__14430__$1 = cljs.core.seq_QMARK_.call(null, map__14430) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14430) : map__14430;
  var start_b = cljs.core.get.call(null, map__14430__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__14430__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var or__3551__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return cljs_time.core._EQ_.call(null, end_a, start_b);
  }
};
cljs_time.core.mins_ago = function mins_ago(d) {
  return cljs_time.core.in_minutes.call(null, cljs_time.core.interval.call(null, d, cljs_time.core.now.call(null)));
};
cljs_time.core.last_day_of_the_month = function() {
  var last_day_of_the_month = null;
  var last_day_of_the_month__1 = function(dt) {
    return last_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var last_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.minus.call(null, cljs_time.core.date_time.call(null, year, month + 1, 1), cljs_time.core.days.call(null, 1));
  };
  last_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return last_day_of_the_month__1.call(this, year);
      case 2:
        return last_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = last_day_of_the_month__1;
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = last_day_of_the_month__2;
  return last_day_of_the_month;
}();
cljs_time.core.number_of_days_in_the_month = function() {
  var number_of_days_in_the_month = null;
  var number_of_days_in_the_month__1 = function(dt) {
    return number_of_days_in_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var number_of_days_in_the_month__2 = function(year, month) {
    return cljs_time.core.last_day_of_the_month.call(null, year, month).getDate();
  };
  number_of_days_in_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return number_of_days_in_the_month__1.call(this, year);
      case 2:
        return number_of_days_in_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1 = number_of_days_in_the_month__1;
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2 = number_of_days_in_the_month__2;
  return number_of_days_in_the_month;
}();
cljs_time.core.first_day_of_the_month = function() {
  var first_day_of_the_month = null;
  var first_day_of_the_month__1 = function(dt) {
    return first_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var first_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.date_time.call(null, year, month, 1);
  };
  first_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return first_day_of_the_month__1.call(this, year);
      case 2:
        return first_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = first_day_of_the_month__1;
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = first_day_of_the_month__2;
  return first_day_of_the_month;
}();
cljs_time.core.__GT_period = function() {
  var method_table__4417__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4418__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4419__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4421__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("-\x3eperiod", cljs.core.meta, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4421__auto__, method_table__4417__auto__, prefer_table__4418__auto__, method_cache__4419__auto__, cached_hierarchy__4420__auto__);
}();
cljs.core._add_method.call(null, cljs_time.core.__GT_period, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null), function(p__14431) {
  var map__14432 = p__14431;
  var map__14432__$1 = cljs.core.seq_QMARK_.call(null, map__14432) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14432) : map__14432;
  var interval = map__14432__$1;
  var end = cljs.core.get.call(null, map__14432__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__14432__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var years = cljs_time.core.in_years.call(null, interval);
  var start_year = cljs_time.core.year.call(null, start);
  var leap_years = cljs.core.count.call(null, cljs.core.remove.call(null, cljs.core.false_QMARK_, cljs.core.map.call(null, cljs_time.core.leap_year_QMARK_, cljs.core.range.call(null, start_year, start_year + years))));
  var start_month = cljs_time.core.month.call(null, start);
  var days_in_months = cljs_time.core.total_days_in_whole_months.call(null, interval);
  var months = cljs.core.count.call(null, days_in_months);
  var days_to_remove = 365 * years + leap_years + cljs.core.reduce.call(null, cljs.core._PLUS_, days_in_months);
  var days = cljs_time.core.in_days.call(null, interval) - days_to_remove;
  var hours_to_remove = 24 * (days + days_to_remove);
  var hours = cljs_time.core.in_hours.call(null, interval) - hours_to_remove;
  var minutes_to_remove = 60 * (hours + hours_to_remove);
  var minutes = cljs_time.core.in_minutes.call(null, interval) - minutes_to_remove;
  var seconds_to_remove = 60 * (minutes + minutes_to_remove);
  var seconds = cljs_time.core.in_seconds.call(null, interval) - seconds_to_remove;
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 
  cljs_time.core.in_millis.call(null, interval) - 1E3 * (seconds + seconds_to_remove));
});
cljs_time.core.today_at = function() {
  var today_at = null;
  var today_at__2 = function(hours, minutes) {
    return today_at.call(null, hours, minutes, 0);
  };
  var today_at__3 = function(hours, minutes, seconds) {
    return today_at.call(null, hours, minutes, seconds, 0);
  };
  var today_at__4 = function(hours, minutes, seconds, millis) {
    var midnight = new goog.date.Date;
    var G__14434 = new goog.date.UtcDateTime(0);
    G__14434.setYear(midnight.getYear());
    G__14434.setMonth(midnight.getMonth());
    G__14434.setDate(midnight.getDate());
    G__14434.setHours(hours);
    G__14434.setMinutes(minutes);
    G__14434.setSeconds(seconds);
    G__14434.setMilliseconds(millis);
    return G__14434;
  };
  today_at = function(hours, minutes, seconds, millis) {
    switch(arguments.length) {
      case 2:
        return today_at__2.call(this, hours, minutes);
      case 3:
        return today_at__3.call(this, hours, minutes, seconds);
      case 4:
        return today_at__4.call(this, hours, minutes, seconds, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  today_at.cljs$core$IFn$_invoke$arity$2 = today_at__2;
  today_at.cljs$core$IFn$_invoke$arity$3 = today_at__3;
  today_at.cljs$core$IFn$_invoke$arity$4 = today_at__4;
  return today_at;
}();
cljs_time.core.do_at_STAR_ = function do_at_STAR_(base_date_time, body_fn) {
  var _STAR_sys_time_STAR_14436 = cljs_time.core._STAR_sys_time_STAR_;
  try {
    cljs_time.core._STAR_sys_time_STAR_ = base_date_time;
    return body_fn.call(null);
  } finally {
    cljs_time.core._STAR_sys_time_STAR_ = _STAR_sys_time_STAR_14436;
  }
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj14438 = {};
  return obj14438;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.display_name[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.display_name["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj14440 = {};
  return obj14440;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.init_state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.init_state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj14442 = {};
  return obj14442;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.should_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.should_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj14444 = {};
  return obj14444;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_mount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_mount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj14446 = {};
  return obj14446;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.did_mount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.did_mount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj14448 = {};
  return obj14448;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_unmount[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_unmount["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj14450 = {};
  return obj14450;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj14452 = {};
  return obj14452;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.did_update[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.did_update["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj14454 = {};
  return obj14454;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.will_receive_props[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.will_receive_props["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj14456 = {};
  return obj14456;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.render[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.render["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj14458 = {};
  return obj14458;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core.render_state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core.render_state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj14460 = {};
  return obj14460;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj14462 = {};
  return obj14462;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj14464 = {};
  return obj14464;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_render_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_render_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._get_render_state[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._get_render_state["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj14466 = {};
  return obj14466;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3539__auto__ = this$;
      if (and__3539__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4178__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3551__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj14468 = {};
  return obj14468;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._get_queue[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._get_queue["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3539__auto__ = this$;
    if (and__3539__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4178__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3551__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj14470 = {};
  return obj14470;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._value[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._value["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj14472 = {};
  return obj14472;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._path[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._path["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._state[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._state["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj14474 = {};
  return obj14474;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3539__auto__ = value;
      if (and__3539__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4178__auto__ = value == null ? null : value;
      return function() {
        var or__3551__auto__ = om.core._to_cursor[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._to_cursor["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3539__auto__ = value;
      if (and__3539__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3539__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4178__auto__ = value == null ? null : value;
      return function() {
        var or__3551__auto__ = om.core._to_cursor[goog.typeOf(x__4178__auto__)];
        if (or__3551__auto__) {
          return or__3551__auto__;
        } else {
          var or__3551__auto____$1 = om.core._to_cursor["_"];
          if (or__3551__auto____$1) {
            return or__3551__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj14476 = {};
  return obj14476;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._derive[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._derive["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj14478 = {};
  return obj14478;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3539__auto__ = cursor;
    if (and__3539__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4178__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3551__auto__ = om.core._transact_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj14480 = {};
  return obj14480;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._listen_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3539__auto__ = x;
    if (and__3539__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4178__auto__ = x == null ? null : x;
    return function() {
      var or__3551__auto__ = om.core._notify_BANG_[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__14482 = state;
    if (G__14482) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14482.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__14482.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__14482);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__14482);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__14484 = x;
  if (G__14484) {
    var bit__4201__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = bit__4201__auto__;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return G__14484.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__14484.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__14484);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__14484);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_14486 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14486;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__14488 = state;
    G__14488["__om_prev_state"] = state["__om_state"];
    G__14488["__om_state"] = pending_state;
    G__14488["__om_pending_state"] = null;
    return G__14488;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3551__auto__ = props;
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3551__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__14489 = c;
    if (G__14489) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14489.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__14489.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__14489);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__14489);
    }
  }()) {
    var state_14516 = this$.state;
    var _STAR_read_enabled_STAR_14490_14517 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3551__auto__ = state_14516["__om_prev_state"];
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return state_14516["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14490_14517;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__14491 = c;
    if (G__14491) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14491.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__14491.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__14491);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__14491);
    }
  }()) {
    var _STAR_read_enabled_STAR_14492 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14492;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__14493 = c;
    if (G__14493) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14493.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__14493.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__14493);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__14493);
    }
  }()) {
    var _STAR_read_enabled_STAR_14494 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14494;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_14495 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__14496 = c;
      if (G__14496) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__14496.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__14496.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__14496);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__14496);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            return false;
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14495;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_14497 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__14498 = c;
      if (G__14498) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__14498.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__14498.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__14498);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__14498);
      }
    }()) {
      var _STAR_parent_STAR_14499 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_14500 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_14501 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_14501;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_14500;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_14499;
      }
    } else {
      if (function() {
        var G__14502 = c;
        if (G__14502) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__14502.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__14502.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__14502);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__14502);
        }
      }()) {
        var _STAR_parent_STAR_14503 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_14504 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_14505 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_14505;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_14504;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_14503;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14497;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_14518 = om.core.children.call(null, this$);
  if (function() {
    var G__14506 = c_14518;
    if (G__14506) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14506.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__14506.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__14506);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__14506);
    }
  }()) {
    var state_14519 = this$.state;
    var _STAR_read_enabled_STAR_14507_14520 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_14518, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14507_14520;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3551__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__14508 = c;
    if (G__14508) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14508.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__14508.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__14508);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__14508);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_14509 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14509;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3551__auto__ = id;
    if (cljs.core.truth_(or__3551__auto__)) {
      return or__3551__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__14510 = c;
    if (G__14510) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14510.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__14510.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__14510);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__14510);
    }
  }()) {
    var _STAR_read_enabled_STAR_14511 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14511;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__14512 = c;
    if (G__14512) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14512.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__14512.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__14512);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__14512);
    }
  }()) {
    var _STAR_read_enabled_STAR_14513 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14513;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_14521 = om.core.children.call(null, this$);
  if (function() {
    var G__14514 = c_14521;
    if (G__14514) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14514.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__14514.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__14514);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__14514);
    }
  }()) {
    var _STAR_read_enabled_STAR_14515_14522 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_14521);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14515_14522;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x14526 = obj;
  x14526.om$core$IGetState$ = true;
  x14526.om$core$IGetState$_get_state$arity$1 = function(x14526) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3551__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x14526);
  x14526.om$core$IGetState$_get_state$arity$2 = function(x14526) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x14526);
  x14526.om$core$IGetRenderState$ = true;
  x14526.om$core$IGetRenderState$_get_render_state$arity$1 = function(x14526) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x14526);
  x14526.om$core$IGetRenderState$_get_render_state$arity$2 = function(x14526) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x14526);
  x14526.om$core$ISetState$ = true;
  x14526.om$core$ISetState$_set_state_BANG_$arity$3 = function(x14526) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_14527 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = !(app_state == null);
          if (and__3539__auto__) {
            return render;
          } else {
            return and__3539__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14527;
      }
    };
  }(x14526);
  x14526.om$core$ISetState$_set_state_BANG_$arity$4 = function(x14526) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_14528 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3539__auto__ = !(app_state == null);
          if (and__3539__auto__) {
            return render;
          } else {
            return and__3539__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14528;
      }
    };
  }(x14526);
  return x14526;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__14530) {
          var vec__14531 = p__14530;
          var k = cljs.core.nth.call(null, vec__14531, 0, null);
          var v = cljs.core.nth.call(null, vec__14531, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__14532 = null;
  var G__14532__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14532__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14532 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14532__2.call(this, self__, k);
      case 3:
        return G__14532__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14532.cljs$core$IFn$_invoke$arity$2 = G__14532__2;
  G__14532.cljs$core$IFn$_invoke$arity$3 = G__14532__3;
  return G__14532;
}();
om.core.MapCursor.prototype.apply = function(self__, args14529) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14529)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__14534 = null;
  var G__14534__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14534__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14534 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14534__2.call(this, self__, k);
      case 3:
        return G__14534__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14534.cljs$core$IFn$_invoke$arity$2 = G__14534__2;
  G__14534.cljs$core$IFn$_invoke$arity$3 = G__14534__3;
  return G__14534;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args14533) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14533)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x14536 = cljs.core.clone.call(null, val);
  x14536.cljs$core$IEquiv$ = true;
  x14536.cljs$core$IEquiv$_equiv$arity$2 = function(x14536) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x14536);
  x14536.om$core$ITransact$ = true;
  x14536.om$core$ITransact$_transact_BANG_$arity$4 = function(x14536) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x14536);
  x14536.om$core$ICursor$ = true;
  x14536.om$core$ICursor$_path$arity$1 = function(x14536) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x14536);
  x14536.om$core$ICursor$_state$arity$1 = function(x14536) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x14536);
  x14536.cljs$core$IDeref$ = true;
  x14536.cljs$core$IDeref$_deref$arity$1 = function(x14536) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x14536);
  return x14536;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__14539 = val;
        if (G__14539) {
          var bit__4201__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3551__auto__ = bit__4201__auto__;
            if (cljs.core.truth_(or__3551__auto__)) {
              return or__3551__auto__;
            } else {
              return G__14539.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__14539.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__14539);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__14539);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__14540 = val;
              if (G__14540) {
                var bit__4201__auto__ = G__14540.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4201__auto__ || G__14540.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__14540.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__14540);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__14540);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__14545 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__14546 = null;
  var count__14547 = 0;
  var i__14548 = 0;
  while (true) {
    if (i__14548 < count__14547) {
      var f = cljs.core._nth.call(null, chunk__14546, i__14548);
      f.call(null);
      var G__14549 = seq__14545;
      var G__14550 = chunk__14546;
      var G__14551 = count__14547;
      var G__14552 = i__14548 + 1;
      seq__14545 = G__14549;
      chunk__14546 = G__14550;
      count__14547 = G__14551;
      i__14548 = G__14552;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14545);
      if (temp__4126__auto__) {
        var seq__14545__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14545__$1)) {
          var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__14545__$1);
          var G__14553 = cljs.core.chunk_rest.call(null, seq__14545__$1);
          var G__14554 = c__4307__auto__;
          var G__14555 = cljs.core.count.call(null, c__4307__auto__);
          var G__14556 = 0;
          seq__14545 = G__14553;
          chunk__14546 = G__14554;
          count__14547 = G__14555;
          i__14548 = G__14556;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__14545__$1);
          f.call(null);
          var G__14557 = cljs.core.next.call(null, seq__14545__$1);
          var G__14558 = null;
          var G__14559 = 0;
          var G__14560 = 0;
          seq__14545 = G__14557;
          chunk__14546 = G__14558;
          count__14547 = G__14559;
          i__14548 = G__14560;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3551__auto__ = function() {
      var G__14565 = x;
      if (G__14565) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto__ = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto__)) {
            return or__3551__auto__;
          } else {
            return G__14565.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__14565.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__14565);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__14565);
      }
    }();
    if (or__3551__auto__) {
      return or__3551__auto__;
    } else {
      var G__14566 = x;
      if (G__14566) {
        var bit__4201__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3551__auto____$1 = bit__4201__auto__;
          if (cljs.core.truth_(or__3551__auto____$1)) {
            return or__3551__auto____$1;
          } else {
            return G__14566.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__14566.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__14566);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__14566);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3551__auto__ = descriptor;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3551__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_14571 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14571;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__14572 = m;
      var map__14572__$1 = cljs.core.seq_QMARK_.call(null, map__14572) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14572) : map__14572;
      var opts = cljs.core.get.call(null, map__14572__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__14572__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__14572__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__14572__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3551__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__14572, map__14572__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_14573 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14573;
          }
        };
      }(map__14572, map__14572__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__14572, map__14572__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_14574 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14574;
          }
        };
      }(map__14572, map__14572__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_14576 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_14576;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__14585 = state;
    if (G__14585) {
      var bit__4201__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3551__auto__ = bit__4201__auto__;
        if (cljs.core.truth_(or__3551__auto__)) {
          return or__3551__auto__;
        } else {
          return G__14585.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__14585.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__14585);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__14585);
    }
  }()) {
  } else {
    var listeners_14593 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_14594 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x14586_14595 = state;
    x14586_14595.om$core$IRenderQueue$ = true;
    x14586_14595.om$core$IRenderQueue$_get_queue$arity$1 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_14594);
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
    x14586_14595.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_14594), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_14594, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
    x14586_14595.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_14594, cljs.core.empty);
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
    x14586_14595.om$core$INotify$ = true;
    x14586_14595.om$core$INotify$_listen_BANG_$arity$3 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_14593, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
    x14586_14595.om$core$INotify$_unlisten_BANG_$arity$2 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_14593, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
    x14586_14595.om$core$INotify$_notify_BANG_$arity$3 = function(x14586_14595, listeners_14593, render_queue_14594) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__14587_14596 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_14593));
        var chunk__14588_14597 = null;
        var count__14589_14598 = 0;
        var i__14590_14599 = 0;
        while (true) {
          if (i__14590_14599 < count__14589_14598) {
            var vec__14591_14600 = cljs.core._nth.call(null, chunk__14588_14597, i__14590_14599);
            var __14601 = cljs.core.nth.call(null, vec__14591_14600, 0, null);
            var f_14602 = cljs.core.nth.call(null, vec__14591_14600, 1, null);
            f_14602.call(null, tx_data, root_cursor);
            var G__14603 = seq__14587_14596;
            var G__14604 = chunk__14588_14597;
            var G__14605 = count__14589_14598;
            var G__14606 = i__14590_14599 + 1;
            seq__14587_14596 = G__14603;
            chunk__14588_14597 = G__14604;
            count__14589_14598 = G__14605;
            i__14590_14599 = G__14606;
            continue;
          } else {
            var temp__4126__auto___14607 = cljs.core.seq.call(null, seq__14587_14596);
            if (temp__4126__auto___14607) {
              var seq__14587_14608__$1 = temp__4126__auto___14607;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__14587_14608__$1)) {
                var c__4307__auto___14609 = cljs.core.chunk_first.call(null, seq__14587_14608__$1);
                var G__14610 = cljs.core.chunk_rest.call(null, seq__14587_14608__$1);
                var G__14611 = c__4307__auto___14609;
                var G__14612 = cljs.core.count.call(null, c__4307__auto___14609);
                var G__14613 = 0;
                seq__14587_14596 = G__14610;
                chunk__14588_14597 = G__14611;
                count__14589_14598 = G__14612;
                i__14590_14599 = G__14613;
                continue;
              } else {
                var vec__14592_14614 = cljs.core.first.call(null, seq__14587_14608__$1);
                var __14615 = cljs.core.nth.call(null, vec__14592_14614, 0, null);
                var f_14616 = cljs.core.nth.call(null, vec__14592_14614, 1, null);
                f_14616.call(null, tx_data, root_cursor);
                var G__14617 = cljs.core.next.call(null, seq__14587_14608__$1);
                var G__14618 = null;
                var G__14619 = 0;
                var G__14620 = 0;
                seq__14587_14596 = G__14617;
                chunk__14588_14597 = G__14618;
                count__14589_14598 = G__14619;
                i__14590_14599 = G__14620;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x14586_14595, listeners_14593, render_queue_14594);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__14621) {
  var map__14636 = p__14621;
  var map__14636__$1 = cljs.core.seq_QMARK_.call(null, map__14636) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14636) : map__14636;
  var options = map__14636__$1;
  var instrument = cljs.core.get.call(null, map__14636__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__14636__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__14636__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__14636__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__14650 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__14650, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__14650, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__14637 = value;
    if (G__14637) {
      var bit__4201__auto__ = G__14637.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4201__auto__ || G__14637.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__14637.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__14637);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__14637);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__14636, map__14636__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_14644 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_14645 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_14645;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_14644;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__14646_14651 = cljs.core.seq.call(null, queue);
        var chunk__14647_14652 = null;
        var count__14648_14653 = 0;
        var i__14649_14654 = 0;
        while (true) {
          if (i__14649_14654 < count__14648_14653) {
            var c_14655 = cljs.core._nth.call(null, chunk__14647_14652, i__14649_14654);
            if (cljs.core.truth_(c_14655.isMounted())) {
              c_14655.forceUpdate();
            } else {
            }
            var G__14656 = seq__14646_14651;
            var G__14657 = chunk__14647_14652;
            var G__14658 = count__14648_14653;
            var G__14659 = i__14649_14654 + 1;
            seq__14646_14651 = G__14656;
            chunk__14647_14652 = G__14657;
            count__14648_14653 = G__14658;
            i__14649_14654 = G__14659;
            continue;
          } else {
            var temp__4126__auto___14660 = cljs.core.seq.call(null, seq__14646_14651);
            if (temp__4126__auto___14660) {
              var seq__14646_14661__$1 = temp__4126__auto___14660;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__14646_14661__$1)) {
                var c__4307__auto___14662 = cljs.core.chunk_first.call(null, seq__14646_14661__$1);
                var G__14663 = cljs.core.chunk_rest.call(null, seq__14646_14661__$1);
                var G__14664 = c__4307__auto___14662;
                var G__14665 = cljs.core.count.call(null, c__4307__auto___14662);
                var G__14666 = 0;
                seq__14646_14651 = G__14663;
                chunk__14647_14652 = G__14664;
                count__14648_14653 = G__14665;
                i__14649_14654 = G__14666;
                continue;
              } else {
                var c_14667 = cljs.core.first.call(null, seq__14646_14661__$1);
                if (cljs.core.truth_(c_14667.isMounted())) {
                  c_14667.forceUpdate();
                } else {
                }
                var G__14668 = cljs.core.next.call(null, seq__14646_14661__$1);
                var G__14669 = null;
                var G__14670 = 0;
                var G__14671 = 0;
                seq__14646_14651 = G__14668;
                chunk__14647_14652 = G__14669;
                count__14648_14653 = G__14670;
                i__14649_14654 = G__14671;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__14636, map__14636__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__14636, map__14636__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__14636, map__14636__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__14636, map__14636__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__14636, map__14636__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__14817_SHARP_) {
      return max === p1__14817_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__14818__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__14818 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14818__delegate.call(this, s1, s2, sets);
    };
    G__14818.cljs$lang$maxFixedArity = 2;
    G__14818.cljs$lang$applyTo = function(arglist__14819) {
      var s1 = cljs.core.first(arglist__14819);
      arglist__14819 = cljs.core.next(arglist__14819);
      var s2 = cljs.core.first(arglist__14819);
      var sets = cljs.core.rest(arglist__14819);
      return G__14818__delegate(s1, s2, sets);
    };
    G__14818.cljs$core$IFn$_invoke$arity$variadic = G__14818__delegate;
    return G__14818;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__14821 = s2;
        var G__14822 = s1;
        s1 = G__14821;
        s2 = G__14822;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__14823__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__14820_SHARP_) {
        return-cljs.core.count.call(null, p1__14820_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__14823 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14823__delegate.call(this, s1, s2, sets);
    };
    G__14823.cljs$lang$maxFixedArity = 2;
    G__14823.cljs$lang$applyTo = function(arglist__14824) {
      var s1 = cljs.core.first(arglist__14824);
      arglist__14824 = cljs.core.next(arglist__14824);
      var s2 = cljs.core.first(arglist__14824);
      var sets = cljs.core.rest(arglist__14824);
      return G__14823__delegate(s1, s2, sets);
    };
    G__14823.cljs$core$IFn$_invoke$arity$variadic = G__14823__delegate;
    return G__14823;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__14825__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__14825 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14825__delegate.call(this, s1, s2, sets);
    };
    G__14825.cljs$lang$maxFixedArity = 2;
    G__14825.cljs$lang$applyTo = function(arglist__14826) {
      var s1 = cljs.core.first(arglist__14826);
      arglist__14826 = cljs.core.next(arglist__14826);
      var s2 = cljs.core.first(arglist__14826);
      var sets = cljs.core.rest(arglist__14826);
      return G__14825__delegate(s1, s2, sets);
    };
    G__14825.cljs$core$IFn$_invoke$arity$variadic = G__14825__delegate;
    return G__14825;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14827_SHARP_) {
    return cljs.core.select_keys.call(null, p1__14827_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__14830) {
    var vec__14831 = p__14830;
    var old = cljs.core.nth.call(null, vec__14831, 0, null);
    var new$ = cljs.core.nth.call(null, vec__14831, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__14832_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__14832_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__14835) {
    var vec__14836 = p__14835;
    var k = cljs.core.nth.call(null, vec__14836, 0, null);
    var v = cljs.core.nth.call(null, vec__14836, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__14843 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__14843, 0, null);
      var s = cljs.core.nth.call(null, vec__14843, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__14843, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__14843, r, s, idx) {
              return function(p1__14837_SHARP_, p2__14838_SHARP_) {
                return cljs.core.conj.call(null, p1__14837_SHARP_, cljs.core.merge.call(null, p2__14838_SHARP_, x));
              };
            }(found, ks, vec__14843, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__14843, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__14844 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__14844, 0, null);
    var s = cljs.core.nth.call(null, vec__14844, 1, null);
    var k = cljs.core.nth.call(null, vec__14844, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__14844, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__14844, r, s, k, idx) {
            return function(p1__14839_SHARP_, p2__14840_SHARP_) {
              return cljs.core.conj.call(null, p1__14839_SHARP_, cljs.core.merge.call(null, p2__14840_SHARP_, x));
            };
          }(found, vec__14844, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__14844, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__14845_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__14845_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__14846_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__14846_SHARP_);
  }, set2);
};
goog.provide("cljs_time.internal.core");
goog.require("cljs.core");
cljs_time.internal.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.internal.core.days_in_month = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
cljs_time.internal.core.year_corrected_dim = function year_corrected_dim(year, month) {
  var G__14811 = cljs_time.internal.core.days_in_month.call(null, cljs.core._EQ_.call(null, month, 1) ? 11 : month - 1);
  var G__14811__$1 = cljs_time.internal.core.leap_year_QMARK_.call(null, year) && cljs.core._EQ_.call(null, month, 2) ? G__14811 + 1 : G__14811;
  return G__14811__$1;
};
cljs_time.internal.core.valid_date_QMARK_ = function valid_date_QMARK_(p__14812) {
  var map__14814 = p__14812;
  var map__14814__$1 = cljs.core.seq_QMARK_.call(null, map__14814) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14814) : map__14814;
  var d = map__14814__$1;
  var millis = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var months = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__14814__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months__$1 = months + 1;
  var _GT__LT_ = function(months__$1, map__14814, map__14814__$1, d, millis, seconds, minutes, hours, days, months, years) {
    return function _GT__LT_(a, b, x) {
      return x >= a && x <= b;
    };
  }(months__$1, map__14814, map__14814__$1, d, millis, seconds, minutes, hours, days, months, years);
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = years;
    if (cljs.core.truth_(and__3539__auto__)) {
      return _GT__LT_.call(null, 1, 12, months__$1) && _GT__LT_.call(null, 1, cljs_time.internal.core.year_corrected_dim.call(null, years, months__$1), days) && _GT__LT_.call(null, 0, 23, hours) && _GT__LT_.call(null, 0, 59, minutes) && _GT__LT_.call(null, 0, 60, seconds) && _GT__LT_.call(null, 0, 999, millis);
    } else {
      return and__3539__auto__;
    }
  }())) {
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "Date is not valid", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "invalid-date", "invalid-date", 2030506573), new cljs.core.Keyword(null, "date", "date", -1463434462), d], null));
  }
};
cljs_time.internal.core.index_of = function index_of(coll, x) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__14816_SHARP_, p2__14815_SHARP_) {
    if (cljs.core._EQ_.call(null, p2__14815_SHARP_, x)) {
      return p1__14816_SHARP_;
    } else {
      return null;
    }
  }, coll));
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__14847 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__14847;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__14851 = cljs.core._EQ_;
    var expr__14852 = limit;
    if (cljs.core.truth_(pred__14851.call(null, 1, expr__14852))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__14851.call(null, 2, expr__14852))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__14854 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__14855 = limit__$1 - 1;
            var G__14856 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__14854;
            limit__$1 = G__14855;
            parts = G__14856;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__14857 = index - 1;
        index = G__14857;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___14858 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___14858)) {
        var replacement_14859 = temp__4124__auto___14858;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_14859));
      } else {
        buffer.append(ch);
      }
      var G__14860 = index + 1;
      index = G__14860;
      continue;
    }
    break;
  }
};
goog.provide("cljs_time.format");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("cljs_time.internal.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.date");
goog.require("cljs_time.core");
goog.require("clojure.set");
goog.require("cljs_time.core");
goog.require("cljs_time.internal.core");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.date");
cljs_time.format.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
      } else {
        return x;
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__14672) {
    var fmt = cljs.core.first(arglist__14672);
    var args = cljs.core.rest(arglist__14672);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
cljs_time.format.months = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], null);
cljs_time.format.days = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], null);
cljs_time.format.abbreviate = function abbreviate(n, s) {
  return cljs.core.subs.call(null, s, 0, n);
};
cljs_time.format.date_formatters = function() {
  var d = function(p1__14673_SHARP_) {
    return p1__14673_SHARP_.getDate();
  };
  var M = function(d) {
    return function(p1__14674_SHARP_) {
      return p1__14674_SHARP_.getMonth() + 1;
    };
  }(d);
  var y = function(d, M) {
    return function(p1__14675_SHARP_) {
      return p1__14675_SHARP_.getYear();
    };
  }(d, M);
  var h = function(d, M, y) {
    return function(p1__14676_SHARP_) {
      var hr = cljs.core.mod.call(null, p1__14676_SHARP_.getHours(), 12);
      if (hr === 0) {
        return 12;
      } else {
        return hr;
      }
    };
  }(d, M, y);
  var a = function(d, M, y, h) {
    return function(p1__14677_SHARP_) {
      if (p1__14677_SHARP_.getHours() < 12) {
        return "am";
      } else {
        return "pm";
      }
    };
  }(d, M, y, h);
  var A = function(d, M, y, h, a) {
    return function(p1__14678_SHARP_) {
      if (p1__14678_SHARP_.getHours() < 12) {
        return "AM";
      } else {
        return "PM";
      }
    };
  }(d, M, y, h, a);
  var H = function(d, M, y, h, a, A) {
    return function(p1__14679_SHARP_) {
      return p1__14679_SHARP_.getHours();
    };
  }(d, M, y, h, a, A);
  var m = function(d, M, y, h, a, A, H) {
    return function(p1__14680_SHARP_) {
      return p1__14680_SHARP_.getMinutes();
    };
  }(d, M, y, h, a, A, H);
  var s = function(d, M, y, h, a, A, H, m) {
    return function(p1__14681_SHARP_) {
      return p1__14681_SHARP_.getSeconds();
    };
  }(d, M, y, h, a, A, H, m);
  var S = function(d, M, y, h, a, A, H, m, s) {
    return function(p1__14682_SHARP_) {
      return p1__14682_SHARP_.getMilliseconds();
    };
  }(d, M, y, h, a, A, H, m, s);
  var Z = function(d, M, y, h, a, A, H, m, s, S) {
    return function(p1__14683_SHARP_) {
      return p1__14683_SHARP_.getTimezoneOffsetString();
    };
  }(d, M, y, h, a, A, H, m, s, S);
  var doy = function(d, M, y, h, a, A, H, m, s, S, Z) {
    return function(p1__14684_SHARP_) {
      return p1__14684_SHARP_.getDayOfYear();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z);
  var dow = function(d, M, y, h, a, A, H, m, s, S, Z, doy) {
    return function(p1__14685_SHARP_) {
      return p1__14685_SHARP_.getDay();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "ww", "MMM", "e", "ss", "DDD", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "dd", "a", "hh", "dth", "yyyy", "A", "EEEE", "h", "xxxx", "m", "yy", "MMMM"], [d, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14696_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", H.call(null, p1__14696_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, s, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14700_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", Math.ceil.call(null, doy.call(null, p1__14700_SHARP_) / 7));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14692_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.months.call(null, M.call(null, p1__14692_SHARP_) - 1));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), dow, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14698_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", s.call(null, p1__14698_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14699_SHARP_) {
      return cljs_time.format.format.call(null, "%03d", S.call(null, p1__14699_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14688_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__14688_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), M, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14697_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", m.call(null, p1__14697_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), S, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14691_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", M.call(null, p1__14691_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14689_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.days.call(null, dow.call(null, p1__14689_SHARP_)));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, H, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14686_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", d.call(null, p1__14686_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), a, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14695_SHARP_) {
      return cljs_time.format.format.call(null, "%02d", h.call(null, p1__14695_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14687_SHARP_) {
      var d__$1 = d.call(null, p1__14687_SHARP_);
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(d__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
        var G__14701 = d__$1;
        switch(G__14701) {
          case 1:
            return "st";
            break;
          case 2:
            return "nd";
            break;
          case 3:
            return "rd";
            break;
          default:
            return "th";
        }
      }());
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, A, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14690_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__14690_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), h, y, m, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14694_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__14694_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__14693_SHARP_) {
      return cljs_time.format.months.call(null, M.call(null, p1__14693_SHARP_) - 1);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow)]);
}();
cljs_time.format.timezone_adjustment = function timezone_adjustment(d, timezone_string) {
  var vec__14706 = clojure.string.split.call(null, timezone_string, /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/);
  var _ = cljs.core.nth.call(null, vec__14706, 0, null);
  var sign = cljs.core.nth.call(null, vec__14706, 1, null);
  var hh = cljs.core.nth.call(null, vec__14706, 2, null);
  var mm = cljs.core.nth.call(null, vec__14706, 3, null);
  if (cljs.core.truth_(function() {
    var and__3539__auto__ = sign;
    if (cljs.core.truth_(and__3539__auto__)) {
      var and__3539__auto____$1 = hh;
      if (cljs.core.truth_(and__3539__auto____$1)) {
        return mm;
      } else {
        return and__3539__auto____$1;
      }
    } else {
      return and__3539__auto__;
    }
  }())) {
    var sign_14708__$1 = cljs.core._EQ_.call(null, sign, "-") ? cljs_time.core.plus : cljs.core._EQ_.call(null, sign, "+") ? cljs_time.core.minus : null;
    var vec__14707_14709 = cljs.core.map.call(null, function(sign_14708__$1, vec__14706, _, sign, hh, mm) {
      return function(p1__14703_SHARP_) {
        return parseInt(p1__14703_SHARP_, 10);
      };
    }(sign_14708__$1, vec__14706, _, sign, hh, mm), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hh, mm], null));
    var hh_14710__$1 = cljs.core.nth.call(null, vec__14707_14709, 0, null);
    var mm_14711__$1 = cljs.core.nth.call(null, vec__14707_14709, 1, null);
    var adjusted_14712 = sign_14708__$1.call(null, sign_14708__$1.call(null, d, cljs_time.core.hours.call(null, hh_14710__$1)), cljs_time.core.minutes.call(null, mm_14711__$1));
    d.setTime(adjusted_14712.getTime());
  } else {
  }
  return d;
};
cljs_time.format.date_parsers = function() {
  var parse_int = function(p1__14713_SHARP_) {
    return parseInt(p1__14713_SHARP_, 10);
  };
  var assoc_fn = function(parse_int) {
    return function(kw) {
      return function(parse_int) {
        return function(p1__14714_SHARP_, p2__14715_SHARP_) {
          return cljs.core.assoc.call(null, p1__14714_SHARP_, kw, parse_int.call(null, p2__14715_SHARP_));
        };
      }(parse_int);
    };
  }(parse_int);
  var y = assoc_fn.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var d = assoc_fn.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var M = function(parse_int, assoc_fn, y, d) {
    return function(p1__14716_SHARP_, p2__14717_SHARP_) {
      return cljs.core.assoc.call(null, p1__14716_SHARP_, new cljs.core.Keyword(null, "months", "months", -45571637), parse_int.call(null, p2__14717_SHARP_) - 1);
    };
  }(parse_int, assoc_fn, y, d);
  var h = function(parse_int, assoc_fn, y, d, M) {
    return function(p1__14718_SHARP_, p2__14719_SHARP_) {
      return cljs.core.assoc.call(null, p1__14718_SHARP_, new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.mod.call(null, parse_int.call(null, p2__14719_SHARP_), 12));
    };
  }(parse_int, assoc_fn, y, d, M);
  var a = function(parse_int, assoc_fn, y, d, M, h) {
    return function(p__14726, x) {
      var map__14727 = p__14726;
      var map__14727__$1 = cljs.core.seq_QMARK_.call(null, map__14727) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14727) : map__14727;
      var date = map__14727__$1;
      var hours = cljs.core.get.call(null, map__14727__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["p", null, "pm", null], null), null)).call(null, clojure.string.lower_case.call(null, x)))) {
        return cljs.core.assoc.call(null, date, new cljs.core.Keyword(null, "hours", "hours", 58380855), function() {
          var hours__$1 = 12 + hours;
          if (cljs.core._EQ_.call(null, hours__$1, 24)) {
            return 0;
          } else {
            return hours__$1;
          }
        }());
      } else {
        return date;
      }
    };
  }(parse_int, assoc_fn, y, d, M, h);
  var H = assoc_fn.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var m = assoc_fn.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var s = assoc_fn.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var S = assoc_fn.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var MMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
    return function(p1__14721_SHARP_, p2__14720_SHARP_) {
      var full = cljs.core.first.call(null, cljs.core.filter.call(null, function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
        return function(m__$1) {
          return cljs.core.re_seq.call(null, cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__14720_SHARP_)), m__$1);
        };
      }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S), cljs_time.format.months));
      return M.call(null, p1__14721_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, full) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S);
  var MMMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM) {
    return function(p1__14722_SHARP_, p2__14723_SHARP_) {
      return M.call(null, p1__14722_SHARP_, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, p2__14723_SHARP_) + 1));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM);
  var skip = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM) {
    return function() {
      var G__14728__delegate = function(x, args) {
        return x;
      };
      var G__14728 = function(x, var_args) {
        var args = null;
        if (arguments.length > 1) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__14728__delegate.call(this, x, args);
      };
      G__14728.cljs$lang$maxFixedArity = 1;
      G__14728.cljs$lang$applyTo = function(arglist__14729) {
        var x = cljs.core.first(arglist__14729);
        var args = cljs.core.rest(arglist__14729);
        return G__14728__delegate(x, args);
      };
      G__14728.cljs$core$IFn$_invoke$arity$variadic = G__14728__delegate;
      return G__14728;
    }();
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM);
  var tz = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip) {
    return function(p1__14724_SHARP_, p2__14725_SHARP_) {
      return cljs.core.assoc.call(null, p1__14724_SHARP_, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), p2__14725_SHARP_);
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "MMM", "ss", "SSS", "dow", "M", "mm", "S", "MM", "EEE", "Z", "H", "E", "dd", "a", "hh", "dth", "y", "yyyy", "A", "EEEE", "h", "m", "yy", "MMMM"], [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["((?:(?:\\+|-)\\d{2}:\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.months))) + ")", MMM], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", M], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:\\d{2})|(?:\\b\\d{1,2}\\b))", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs.core.map.call(null, 
  cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:?\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, 
  "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", h], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})(?:st|nd|rd|th)", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.days)) + ")", skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, ["(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, "|", cljs_time.format.months)) + ")", MMMM], null)]);
}();
cljs_time.format.date_setters = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), function(p1__14730_SHARP_, p2__14731_SHARP_) {
  return p1__14730_SHARP_.setYear(p2__14731_SHARP_);
}, new cljs.core.Keyword(null, "months", "months", -45571637), function(p1__14732_SHARP_, p2__14733_SHARP_) {
  return p1__14732_SHARP_.setMonth(p2__14733_SHARP_);
}, new cljs.core.Keyword(null, "days", "days", -1394072564), function(p1__14734_SHARP_, p2__14735_SHARP_) {
  return p1__14734_SHARP_.setDate(p2__14735_SHARP_);
}, new cljs.core.Keyword(null, "hours", "hours", 58380855), function(p1__14736_SHARP_, p2__14737_SHARP_) {
  return p1__14736_SHARP_.setHours(p2__14737_SHARP_);
}, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), function(p1__14738_SHARP_, p2__14739_SHARP_) {
  return p1__14738_SHARP_.setMinutes(p2__14739_SHARP_);
}, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), function(p1__14740_SHARP_, p2__14741_SHARP_) {
  return p1__14740_SHARP_.setSeconds(p2__14741_SHARP_);
}, new cljs.core.Keyword(null, "millis", "millis", -1338288387), function(p1__14742_SHARP_, p2__14743_SHARP_) {
  return p1__14742_SHARP_.setMilliseconds(p2__14743_SHARP_);
}, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), cljs_time.format.timezone_adjustment], null);
cljs_time.format.parser_sort_order_pred = function parser_sort_order_pred(parser) {
  return cljs_time.internal.core.index_of.call(null, new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, ["yyyy", "yy", "y", "d", "dd", "dth", "M", "MM", "MMM", "MMMM", "dow", "h", "H", "m", "s", "S", "hh", "HH", "mm", "ss", "a", "SSS", "Z", "ZZ"], null), parser);
};
cljs_time.format.date_format_pattern = cljs.core.re_pattern.call(null, "(" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.join.call(null, ")|(", cljs.core.reverse.call(null, cljs.core.sort_by.call(null, cljs.core.count, cljs.core.keys.call(null, cljs_time.format.date_formatters))))) + ")");
cljs_time.format.date_parse_pattern = function date_parse_pattern(formatter) {
  return cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, formatter, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__14744_SHARP_) {
    return cljs.core.first.call(null, cljs_time.format.date_parsers.call(null, p1__14744_SHARP_));
  }));
};
cljs_time.format.formatter = function formatter(fmts) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), function(p1__14745_SHARP_) {
    return cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs_time.format.parser_sort_order_pred, cljs.core.second), cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.nfirst.call(null, cljs.core.re_seq.call(null, cljs_time.format.date_parse_pattern.call(null, fmts), p1__14745_SHARP_)), cljs.core.map.call(null, cljs.core.first, cljs.core.re_seq.call(null, cljs_time.format.date_format_pattern, fmts)))));
  }, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), function(date) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, fmts, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__14746_SHARP_) {
      return cljs_time.format.date_formatters.call(null, p1__14746_SHARP_).call(null, date);
    }], null);
  }], null);
};
cljs_time.format.not_implemented = function not_implemented(sym) {
  return function() {
    throw cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "not-implemented", "not-implemented", 1918806714), new cljs.core.Keyword(null, "message", "message", -406056002), cljs_time.format.format.call(null, "%s not implemented yet", cljs.core.name.call(null, sym))], null));
  };
};
cljs_time.format.formatters = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), new cljs.core.Keyword(null, "hour-minute", "hour-minute", -1164421312), new cljs.core.Keyword(null, "t-time", "t-time", -42016318), new cljs.core.Keyword(null, "basic-ordinal-date", "basic-ordinal-date", 243220162), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "hour", "hour", -555989214), new cljs.core.Keyword(null, 
"time-no-ms", "time-no-ms", 870271683), new cljs.core.Keyword(null, "weekyear-week-day", "weekyear-week-day", -740233533), new cljs.core.Keyword(null, "week-date-time", "week-date-time", 540228836), new cljs.core.Keyword(null, "date-hour-minute-second-fraction", "date-hour-minute-second-fraction", 1937143076), new cljs.core.Keyword(null, "basic-date-time", "basic-date-time", 1525413604), new cljs.core.Keyword(null, "date-time", "date-time", 177938180), new cljs.core.Keyword(null, "basic-time-no-ms", 
"basic-time-no-ms", -1720654076), new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), new cljs.core.Keyword(null, "basic-week-date", "basic-week-date", 1775847845), new cljs.core.Keyword(null, "basic-t-time-no-ms", "basic-t-time-no-ms", -424650106), new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), new cljs.core.Keyword(null, "date-time-no-ms", "date-time-no-ms", 1655953671), new cljs.core.Keyword(null, "year-month-day", "year-month-day", -415594169), new cljs.core.Keyword(null, 
"date-opt-time", "date-opt-time", -1507102105), new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697), new cljs.core.Keyword(null, "date-hour-minute-second-ms", "date-hour-minute-second-ms", -425334775), new cljs.core.Keyword(null, "basic-ordinal-date-time", "basic-ordinal-date-time", 1054564521), new cljs.core.Keyword(null, "ordinal-date", "ordinal-date", -77899447), new cljs.core.Keyword(null, "hour-minute-second-fraction", "hour-minute-second-fraction", -1253038551), new cljs.core.Keyword(null, 
"date-hour-minute", "date-hour-minute", 1629918346), new cljs.core.Keyword(null, "time", "time", 1385887882), new cljs.core.Keyword(null, "basic-week-date-time", "basic-week-date-time", -502077622), new cljs.core.Keyword(null, "weekyear", "weekyear", -74064500), new cljs.core.Keyword(null, "basic-time", "basic-time", -923134899), new cljs.core.Keyword(null, "hour-minute-second", "hour-minute-second", -1906654770), new cljs.core.Keyword(null, "ordinal-date-time", "ordinal-date-time", -1386753458), 
new cljs.core.Keyword(null, "ordinal-date-time-no-ms", "ordinal-date-time-no-ms", -1539005490), new cljs.core.Keyword(null, "hour-minute-second-ms", "hour-minute-second-ms", 1209749775), new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), new cljs.core.Keyword(null, "year", "year", 335913393), new cljs.core.Keyword(null, "t-time-no-ms", "t-time-no-ms", 990689905), new cljs.core.Keyword(null, "basic-week-date-time-no-ms", 
"basic-week-date-time-no-ms", -2043113679), new cljs.core.Keyword(null, "basic-date", "basic-date", 1566551506), new cljs.core.Keyword(null, "weekyear-week", "weekyear-week", 795291571), new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), new cljs.core.Keyword(null, "basic-ordinal-date-time-no-ms", "basic-ordinal-date-time-no-ms", -395135436), new cljs.core.Keyword(null, "year-month", "year-month", 735283381), new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 
1178432599), new cljs.core.Keyword(null, "week-date", "week-date", -1176745129), new cljs.core.Keyword(null, "date-hour", "date-hour", -344234471), new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364), new cljs.core.Keyword(null, "week-date-time-no-ms", "week-date-time-no-ms", -1226853060), new cljs.core.Keyword(null, "basic-date-time-no-ms", "basic-date-time-no-ms", -899402179), 
new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), new cljs.core.Keyword(null, "basic-t-time", "basic-t-time", 191791391)], [cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateElementParser", "dateElementParser", 984800945, null)), cljs_time.format.formatter.call(null, "HH:mm"), cljs_time.format.formatter.call(null, "'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyyDDD"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.formatter.call(null, 
"HH"), cljs_time.format.formatter.call(null, "HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, 
"dateParser", "dateParser", -1248418930, null)), cljs_time.format.formatter.call(null, "xxxx'W'wwe"), cljs_time.format.formatter.call(null, "'T'HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localTimeParser", "localTimeParser", -1738135328, null)), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateOptionalTimeParser", 
"dateOptionalTimeParser", 1783230854, null)), cljs_time.format.formatter.call(null, "EEE, dd MMM yyyy HH:mm:ss Z"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyDDD'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-DDD"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, 
"xxxx'W'wwe'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "xxxx"), cljs_time.format.formatter.call(null, "HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "HH:mm:ss"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, new cljs.core.Symbol(null, "timeParser", "timeParser", 1585048034, null)), cljs_time.format.not_implemented.call(null, 
new cljs.core.Symbol(null, "dateTimeParser", "dateTimeParser", -1493718282, null)), cljs_time.format.formatter.call(null, "yyyy"), cljs_time.format.formatter.call(null, "'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx'W'wwe'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyyMMdd"), cljs_time.format.formatter.call(null, "xxxx-'W'ww"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateParser", "localDateParser", 477820077, null)), cljs_time.format.formatter.call(null, 
"yyyyDDD'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateOptionalTimeParser", "localDateOptionalTimeParser", 435955537, null)), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "timeElementParser", "timeElementParser", 302132553, null)), cljs_time.format.formatter.call(null, 
"yyyy-MM-dd'T'HH:mm:ss"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss"), cljs_time.format.formatter.call(null, "'T'HHmmss.SSSZ")]);
cljs_time.format.parsers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), null, new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), null, new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), null, new cljs.core.Keyword(null, "date-opt-time", "date-opt-time", -1507102105), null, new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), 
null, new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), null, new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), null, new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 1178432599), null, new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), null], null), null);
cljs_time.format.printers = clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs_time.format.formatters)), cljs_time.format.parsers);
cljs_time.format.part_splitter_regex = /(?:(?!(?:\+|-)\d{2}):(?!\d{2}$))|[^\w:]+|.[TW]|'[^']+'/;
cljs_time.format.parse = function() {
  var parse = null;
  var parse__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4276__auto__ = function iter__14768(s__14769) {
        return new cljs.core.LazySeq(null, function() {
          var s__14769__$1 = s__14769;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__14769__$1);
            if (temp__4126__auto__) {
              var s__14769__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__14769__$2)) {
                var c__4274__auto__ = cljs.core.chunk_first.call(null, s__14769__$2);
                var size__4275__auto__ = cljs.core.count.call(null, c__4274__auto__);
                var b__14771 = cljs.core.chunk_buffer.call(null, size__4275__auto__);
                if (function() {
                  var i__14770 = 0;
                  while (true) {
                    if (i__14770 < size__4275__auto__) {
                      var f = cljs.core._nth.call(null, c__4274__auto__, i__14770);
                      var d = function() {
                        try {
                          return parse.call(null, f, s);
                        } catch (e14774) {
                          if (e14774 instanceof Error) {
                            var _ = e14774;
                            return null;
                          } else {
                            throw e14774;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__14771, d);
                        var G__14776 = i__14770 + 1;
                        i__14770 = G__14776;
                        continue;
                      } else {
                        var G__14777 = i__14770 + 1;
                        i__14770 = G__14777;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14771), iter__14768.call(null, cljs.core.chunk_rest.call(null, s__14769__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14771), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__14769__$2);
                var d = function() {
                  try {
                    return parse.call(null, f, s);
                  } catch (e14775) {
                    if (e14775 instanceof Error) {
                      var _ = e14775;
                      return null;
                    } else {
                      throw e14775;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__14768.call(null, cljs.core.rest.call(null, s__14769__$2)));
                } else {
                  var G__14778 = cljs.core.rest.call(null, s__14769__$2);
                  s__14769__$1 = G__14778;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4276__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse__2 = function(p__14749, s) {
    var map__14763 = p__14749;
    var map__14763__$1 = cljs.core.seq_QMARK_.call(null, map__14763) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14763) : map__14763;
    var parser = cljs.core.get.call(null, map__14763__$1, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.seq.call(null, s)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "s", "s", -948495851, null)))));
    }
    var min_parts = cljs.core.count.call(null, clojure.string.split.call(null, s, cljs_time.format.part_splitter_regex));
    var parse_seq = cljs.core.seq.call(null, cljs.core.map.call(null, function(min_parts, map__14763, map__14763__$1, parser) {
      return function(p__14764) {
        var vec__14765 = p__14764;
        var a = cljs.core.nth.call(null, vec__14765, 0, null);
        var b = cljs.core.nth.call(null, vec__14765, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.second.call(null, cljs_time.format.date_parsers.call(null, b))], null);
      };
    }(min_parts, map__14763, map__14763__$1, parser), parser.call(null, s)));
    if (cljs.core.count.call(null, parse_seq) >= min_parts) {
      var d = new goog.date.UtcDateTime(0, 0, 0, 0, 0, 0, 0);
      cljs.core.merge_with.call(null, function(d, parse_seq, min_parts, map__14763, map__14763__$1, parser) {
        return function(p1__14747_SHARP_, p2__14748_SHARP_) {
          return p1__14747_SHARP_.call(null, d, p2__14748_SHARP_);
        };
      }(d, parse_seq, min_parts, map__14763, map__14763__$1, parser), cljs_time.format.date_setters, cljs_time.internal.core.valid_date_QMARK_.call(null, cljs.core.reduce.call(null, function(d, parse_seq, min_parts, map__14763, map__14763__$1, parser) {
        return function(date, p__14766) {
          var vec__14767 = p__14766;
          var part = cljs.core.nth.call(null, vec__14767, 0, null);
          var do_parse = cljs.core.nth.call(null, vec__14767, 1, null);
          return do_parse.call(null, date, part);
        };
      }(d, parse_seq, min_parts, map__14763, map__14763__$1, parser), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, 
      "millis", "millis", -1338288387), 0], null), parse_seq)));
      return d;
    } else {
      throw cljs.core.ex_info.call(null, "The parser could not match the input string.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "parser-no-match", "parser-no-match", 1748518307)], null));
    }
  };
  parse = function(p__14749, s) {
    switch(arguments.length) {
      case 1:
        return parse__1.call(this, p__14749);
      case 2:
        return parse__2.call(this, p__14749, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse.cljs$core$IFn$_invoke$arity$1 = parse__1;
  parse.cljs$core$IFn$_invoke$arity$2 = parse__2;
  return parse;
}();
cljs_time.format.unparse = function unparse(p__14779, date) {
  var map__14781 = p__14779;
  var map__14781__$1 = cljs.core.seq_QMARK_.call(null, map__14781) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14781) : map__14781;
  var formatter = cljs.core.get.call(null, map__14781__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(date == null)) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "date", "date", 177097065, null))))));
  }
  if (date instanceof goog.date.DateTime) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol("date", "DateTime", "date/DateTime", 1996422001, null), new cljs.core.Symbol(null, "date", "date", 177097065, null)))));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, date));
};
cljs_time.format.show_formatters = function() {
  var show_formatters = null;
  var show_formatters__0 = function() {
    return show_formatters.call(null, cljs_time.core.now.call(null));
  };
  var show_formatters__1 = function(dt) {
    var seq__14786 = cljs.core.seq.call(null, cljs.core.sort.call(null, cljs_time.format.printers));
    var chunk__14787 = null;
    var count__14788 = 0;
    var i__14789 = 0;
    while (true) {
      if (i__14789 < count__14788) {
        var p = cljs.core._nth.call(null, chunk__14787, i__14789);
        var fmt_14790 = cljs_time.format.formatters.call(null, p);
        cljs.core.print.call(null, cljs_time.format.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_14790, dt)));
        var G__14791 = seq__14786;
        var G__14792 = chunk__14787;
        var G__14793 = count__14788;
        var G__14794 = i__14789 + 1;
        seq__14786 = G__14791;
        chunk__14787 = G__14792;
        count__14788 = G__14793;
        i__14789 = G__14794;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__14786);
        if (temp__4126__auto__) {
          var seq__14786__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14786__$1)) {
            var c__4307__auto__ = cljs.core.chunk_first.call(null, seq__14786__$1);
            var G__14795 = cljs.core.chunk_rest.call(null, seq__14786__$1);
            var G__14796 = c__4307__auto__;
            var G__14797 = cljs.core.count.call(null, c__4307__auto__);
            var G__14798 = 0;
            seq__14786 = G__14795;
            chunk__14787 = G__14796;
            count__14788 = G__14797;
            i__14789 = G__14798;
            continue;
          } else {
            var p = cljs.core.first.call(null, seq__14786__$1);
            var fmt_14799 = cljs_time.format.formatters.call(null, p);
            cljs.core.print.call(null, cljs_time.format.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_14799, dt)));
            var G__14800 = cljs.core.next.call(null, seq__14786__$1);
            var G__14801 = null;
            var G__14802 = 0;
            var G__14803 = 0;
            seq__14786 = G__14800;
            chunk__14787 = G__14801;
            count__14788 = G__14802;
            i__14789 = G__14803;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  show_formatters = function(dt) {
    switch(arguments.length) {
      case 0:
        return show_formatters__0.call(this);
      case 1:
        return show_formatters__1.call(this, dt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  show_formatters.cljs$core$IFn$_invoke$arity$0 = show_formatters__0;
  show_formatters.cljs$core$IFn$_invoke$arity$1 = show_formatters__1;
  return show_formatters;
}();
cljs_time.format.Mappable = function() {
  var obj14805 = {};
  return obj14805;
}();
cljs_time.format.instant__GT_map = function instant__GT_map(instant) {
  if (function() {
    var and__3539__auto__ = instant;
    if (and__3539__auto__) {
      return instant.cljs_time$format$Mappable$instant__GT_map$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return instant.cljs_time$format$Mappable$instant__GT_map$arity$1(instant);
  } else {
    var x__4178__auto__ = instant == null ? null : instant;
    return function() {
      var or__3551__auto__ = cljs_time.format.instant__GT_map[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs_time.format.instant__GT_map["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mappable.instant-\x3emap", instant);
        }
      }
    }().call(null, instant);
  }
};
cljs_time.format.to_map = function to_map(years, months, days, hours, minutes, seconds, millis) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), millis], null);
};
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$ = true;
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(dt) {
  var dt__$1 = this;
  return cljs_time.format.to_map.call(null, dt__$1.getYear(), dt__$1.getMonth() + 1, dt__$1.getDate(), dt__$1.getHours(), dt__$1.getMinutes(), dt__$1.getSeconds(), dt__$1.getMilliseconds());
};
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__14806 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__14806) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__14808 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__14808) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1))));;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj14862 = {};
  return obj14862;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3539__auto__ = reader;
    if (and__3539__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4178__auto__ = reader == null ? null : reader;
    return function() {
      var or__3551__auto__ = cljs.reader.read_char[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.read_char["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3539__auto__ = reader;
    if (and__3539__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3539__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4178__auto__ = reader == null ? null : reader;
    return function() {
      var or__3551__auto__ = cljs.reader.unread[goog.typeOf(x__4178__auto__)];
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.unread["_"];
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
  return cljs.core._write.call(null, writer__4119__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3551__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3551__auto__)) {
    return or__3551__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__14863) {
    var rdr = cljs.core.first(arglist__14863);
    var msg = cljs.core.rest(arglist__14863);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3539__auto__ = !(ch === "#");
  if (and__3539__auto__) {
    var and__3539__auto____$1 = !(ch === "'");
    if (and__3539__auto____$1) {
      var and__3539__auto____$2 = !(ch === ":");
      if (and__3539__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3539__auto____$2;
      }
    } else {
      return and__3539__auto____$1;
    }
  } else {
    return and__3539__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__14864 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__14865 = cljs.reader.read_char.call(null, rdr);
      sb = G__14864;
      ch = G__14865;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__14866 = cljs.reader.read_char.call(null, rdr);
      ch = G__14866;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__14867 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__14867;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__14868 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__14868;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3551__auto__ = ch == null;
      if (or__3551__auto__) {
        return or__3551__auto__;
      } else {
        var or__3551__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3551__auto____$1) {
          return or__3551__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3551__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__14869 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__14870 = cljs.reader.read_char.call(null, reader);
      buffer = G__14869;
      ch = G__14870;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__14871 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__14872 = cljs.reader.read_char.call(null, reader);
        buffer = G__14871;
        ch = G__14872;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__14873 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__14874 = cljs.reader.read_char.call(null, reader);
          buffer = G__14873;
          ch = G__14874;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__14879 = function() {
            var G__14877 = buffer;
            G__14877.append(nch);
            return G__14877;
          }();
          var G__14880 = cljs.reader.read_char.call(null, reader);
          buffer = G__14879;
          ch = G__14880;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__14881 = function() {
            var G__14878 = buffer;
            G__14878.append(ch);
            return G__14878;
          }();
          var G__14882 = cljs.reader.read_char.call(null, reader);
          buffer = G__14881;
          ch = G__14882;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        return not_found;
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__14884 = o;
    if (G__14884) {
      var bit__4201__auto__ = G__14884.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4201__auto__ || G__14884.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__14884.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14884);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14884);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__14885 = reader;
        var G__14886 = eof_is_error;
        var G__14887 = sentinel;
        var G__14888 = is_recursive;
        reader = G__14885;
        eof_is_error = G__14886;
        sentinel = G__14887;
        is_recursive = G__14888;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__14889 = cljs.reader.read_comment.call(null, reader, ch);
          var G__14890 = eof_is_error;
          var G__14891 = sentinel;
          var G__14892 = is_recursive;
          reader = G__14889;
          eof_is_error = G__14890;
          sentinel = G__14891;
          is_recursive = G__14892;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__14893 = reader;
            var G__14894 = eof_is_error;
            var G__14895 = sentinel;
            var G__14896 = is_recursive;
            reader = G__14893;
            eof_is_error = G__14894;
            sentinel = G__14895;
            is_recursive = G__14896;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__14897 = b.append("0");
          b = G__14897;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__14899 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__14899, 0, null);
  var years = cljs.core.nth.call(null, vec__14899, 1, null);
  var months = cljs.core.nth.call(null, vec__14899, 2, null);
  var days = cljs.core.nth.call(null, vec__14899, 3, null);
  var hours = cljs.core.nth.call(null, vec__14899, 4, null);
  var minutes = cljs.core.nth.call(null, vec__14899, 5, null);
  var seconds = cljs.core.nth.call(null, vec__14899, 6, null);
  var fraction = cljs.core.nth.call(null, vec__14899, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__14899, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__14899, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__14899, 10, null);
  var v = vec__14899;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3551__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3551__auto__)) {
        return or__3551__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__14901 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__14901, 0, null);
    var months = cljs.core.nth.call(null, vec__14901, 1, null);
    var days = cljs.core.nth.call(null, vec__14901, 2, null);
    var hours = cljs.core.nth.call(null, vec__14901, 3, null);
    var minutes = cljs.core.nth.call(null, vec__14901, 4, null);
    var seconds = cljs.core.nth.call(null, vec__14901, 5, null);
    var ms = cljs.core.nth.call(null, vec__14901, 6, null);
    var offset = cljs.core.nth.call(null, vec__14901, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__14914_14926 = cljs.core.seq.call(null, form);
    var chunk__14915_14927 = null;
    var count__14916_14928 = 0;
    var i__14917_14929 = 0;
    while (true) {
      if (i__14917_14929 < count__14916_14928) {
        var x_14930 = cljs.core._nth.call(null, chunk__14915_14927, i__14917_14929);
        arr.push(x_14930);
        var G__14931 = seq__14914_14926;
        var G__14932 = chunk__14915_14927;
        var G__14933 = count__14916_14928;
        var G__14934 = i__14917_14929 + 1;
        seq__14914_14926 = G__14931;
        chunk__14915_14927 = G__14932;
        count__14916_14928 = G__14933;
        i__14917_14929 = G__14934;
        continue;
      } else {
        var temp__4126__auto___14935 = cljs.core.seq.call(null, seq__14914_14926);
        if (temp__4126__auto___14935) {
          var seq__14914_14936__$1 = temp__4126__auto___14935;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14914_14936__$1)) {
            var c__4307__auto___14937 = cljs.core.chunk_first.call(null, seq__14914_14936__$1);
            var G__14938 = cljs.core.chunk_rest.call(null, seq__14914_14936__$1);
            var G__14939 = c__4307__auto___14937;
            var G__14940 = cljs.core.count.call(null, c__4307__auto___14937);
            var G__14941 = 0;
            seq__14914_14926 = G__14938;
            chunk__14915_14927 = G__14939;
            count__14916_14928 = G__14940;
            i__14917_14929 = G__14941;
            continue;
          } else {
            var x_14942 = cljs.core.first.call(null, seq__14914_14936__$1);
            arr.push(x_14942);
            var G__14943 = cljs.core.next.call(null, seq__14914_14936__$1);
            var G__14944 = null;
            var G__14945 = 0;
            var G__14946 = 0;
            seq__14914_14926 = G__14943;
            chunk__14915_14927 = G__14944;
            count__14916_14928 = G__14945;
            i__14917_14929 = G__14946;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj14919 = {};
        return obj14919;
      }();
      var seq__14920_14947 = cljs.core.seq.call(null, form);
      var chunk__14921_14948 = null;
      var count__14922_14949 = 0;
      var i__14923_14950 = 0;
      while (true) {
        if (i__14923_14950 < count__14922_14949) {
          var vec__14924_14951 = cljs.core._nth.call(null, chunk__14921_14948, i__14923_14950);
          var k_14952 = cljs.core.nth.call(null, vec__14924_14951, 0, null);
          var v_14953 = cljs.core.nth.call(null, vec__14924_14951, 1, null);
          obj[cljs.core.name.call(null, k_14952)] = v_14953;
          var G__14954 = seq__14920_14947;
          var G__14955 = chunk__14921_14948;
          var G__14956 = count__14922_14949;
          var G__14957 = i__14923_14950 + 1;
          seq__14920_14947 = G__14954;
          chunk__14921_14948 = G__14955;
          count__14922_14949 = G__14956;
          i__14923_14950 = G__14957;
          continue;
        } else {
          var temp__4126__auto___14958 = cljs.core.seq.call(null, seq__14920_14947);
          if (temp__4126__auto___14958) {
            var seq__14920_14959__$1 = temp__4126__auto___14958;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__14920_14959__$1)) {
              var c__4307__auto___14960 = cljs.core.chunk_first.call(null, seq__14920_14959__$1);
              var G__14961 = cljs.core.chunk_rest.call(null, seq__14920_14959__$1);
              var G__14962 = c__4307__auto___14960;
              var G__14963 = cljs.core.count.call(null, c__4307__auto___14960);
              var G__14964 = 0;
              seq__14920_14947 = G__14961;
              chunk__14921_14948 = G__14962;
              count__14922_14949 = G__14963;
              i__14923_14950 = G__14964;
              continue;
            } else {
              var vec__14925_14965 = cljs.core.first.call(null, seq__14920_14959__$1);
              var k_14966 = cljs.core.nth.call(null, vec__14925_14965, 0, null);
              var v_14967 = cljs.core.nth.call(null, vec__14925_14965, 1, null);
              obj[cljs.core.name.call(null, k_14966)] = v_14967;
              var G__14968 = cljs.core.next.call(null, seq__14920_14959__$1);
              var G__14969 = null;
              var G__14970 = 0;
              var G__14971 = 0;
              seq__14920_14947 = G__14968;
              chunk__14921_14948 = G__14969;
              count__14922_14949 = G__14970;
              i__14923_14950 = G__14971;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("testdrive.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("cljs_time.core");
goog.require("cljs_time.format");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("cljs_time.format");
goog.require("cljs_time.core");
goog.require("clojure.string");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_.call(null);
testdrive.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "app-container-id", "app-container-id", -899827362), "testdrive-app", new cljs.core.Keyword(null, "port", "port", 1534937262), 4567, new cljs.core.Keyword(null, "connected?", "connected?", -1197551387), false, new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177), true, new cljs.core.Keyword(null, "max-data-points", "max-data-points", 1229305590), 100, 
new cljs.core.Keyword(null, "max-log-entries", "max-log-entries", -1076382213), 100, new cljs.core.Keyword(null, "debug", "debug", -1608172596), false, new cljs.core.Keyword(null, "simulation", "simulation", -1001480470), true], null));
testdrive.core.event_ch = cljs.core.async.chan.call(null, 10);
testdrive.core.connection_ch = cljs.core.async.chan.call(null);
testdrive.core.config = function config(k) {
  return cljs.core.get.call(null, cljs.core.deref.call(null, testdrive.core.app_state), k);
};
testdrive.core.ws_url = function ws_url() {
  return "ws://localhost:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(testdrive.core.config.call(null, new cljs.core.Keyword(null, "port", "port", 1534937262))) + "/events";
};
testdrive.core.debug = function debug() {
  return testdrive.core.config.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
};
testdrive.core.label_for = function label_for(label_id) {
  if (cljs.core._EQ_.call(null, label_id, 0)) {
    return "GENERAL";
  } else {
    var temp__4124__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "labels", "labels", -626734591)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, testdrive.core.app_state)), label_id);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var label = temp__4124__auto__;
      return clojure.string.upper_case.call(null, label);
    } else {
      return "LABEL " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(label_id);
    }
  }
};
testdrive.core.unit_for = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "temperature", "temperature", 899018429), "celsius (C)", new cljs.core.Keyword(null, "humidity", "humidity", -2051231184), "percent (%)", new cljs.core.Keyword(null, "pressure", "pressure", 505343747), "hectopascals (hPa)", new cljs.core.Keyword(null, "altitude", "altitude", 463588637), "meters (m)", new cljs.core.Keyword(null, "voltage", "voltage", -1909388658), "volts (V)", new cljs.core.Keyword(null, 
"current", "current", -1088038603), "milliamps (mA)"], null);
testdrive.core.process_new_event = function process_new_event(cursor, p__9688) {
  var map__9690 = p__9688;
  var map__9690__$1 = cljs.core.seq_QMARK_.call(null, map__9690) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9690) : map__9690;
  var payload = map__9690__$1;
  var timestamp = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971));
  var value = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var kind = cljs.core.get.call(null, map__9690__$1, new cljs.core.Keyword(null, "kind", "kind", -717265803));
  return om.core.transact_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sensors", "sensors", -1987490738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), kind, new cljs.core.Keyword(null, "label-id", "label-id", -1465071949), id], null), new cljs.core.Keyword(null, "values", "values", 372645556)], null), function(map__9690, map__9690__$1, payload, timestamp, 
  value, id, kind) {
    return function(p1__9687_SHARP_) {
      return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.take_last.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "max-data-points", "max-data-points", 1229305590)), p1__9687_SHARP_)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, timestamp], null));
    };
  }(map__9690, map__9690__$1, payload, timestamp, value, id, kind));
};
testdrive.core.process_new_label = function process_new_label(cursor, p__9691) {
  var map__9693 = p__9691;
  var map__9693__$1 = cljs.core.seq_QMARK_.call(null, map__9693) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9693) : map__9693;
  var payload = map__9693__$1;
  var value = cljs.core.get.call(null, map__9693__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9693__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  return om.core.update_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "labels", "labels", -626734591), id], null), value);
};
testdrive.core.process_new_log = function process_new_log(cursor, p__9695) {
  var map__9697 = p__9695;
  var map__9697__$1 = cljs.core.seq_QMARK_.call(null, map__9697) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9697) : map__9697;
  var payload = map__9697__$1;
  var value = cljs.core.get.call(null, map__9697__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9697__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  return om.core.transact_BANG_.call(null, cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console", "console", 1228072057)], null), function(map__9697, map__9697__$1, payload, value, id) {
    return function(p1__9694_SHARP_) {
      return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.take_last.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "max-log-entries", "max-log-entries", -1076382213)), p1__9694_SHARP_)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "value", "value", 305978217), value], null));
    };
  }(map__9697, map__9697__$1, payload, value, id));
};
testdrive.core.widget_header = function widget_header(cursor, owner) {
  var title = clojure.string.upper_case.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor))));
  if (typeof testdrive.core.t9701 !== "undefined") {
  } else {
    testdrive.core.t9701 = function(title, owner, cursor, widget_header, meta9702) {
      this.title = title;
      this.owner = owner;
      this.cursor = cursor;
      this.widget_header = widget_header;
      this.meta9702 = meta9702;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9701.cljs$lang$type = true;
    testdrive.core.t9701.cljs$lang$ctorStr = "testdrive.core/t9701";
    testdrive.core.t9701.cljs$lang$ctorPrWriter = function(title) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9701");
      };
    }(title);
    testdrive.core.t9701.prototype.om$core$IRender$ = true;
    testdrive.core.t9701.prototype.om$core$IRender$render$arity$1 = function(title) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.div({"className":"header"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, self__.title));
      };
    }(title);
    testdrive.core.t9701.prototype.cljs$core$IMeta$_meta$arity$1 = function(title) {
      return function(_9703) {
        var self__ = this;
        var _9703__$1 = this;
        return self__.meta9702;
      };
    }(title);
    testdrive.core.t9701.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(title) {
      return function(_9703, meta9702__$1) {
        var self__ = this;
        var _9703__$1 = this;
        return new testdrive.core.t9701(self__.title, self__.owner, self__.cursor, self__.widget_header, meta9702__$1);
      };
    }(title);
    testdrive.core.__GT_t9701 = function(title) {
      return function __GT_t9701(title__$1, owner__$1, cursor__$1, widget_header__$1, meta9702) {
        return new testdrive.core.t9701(title__$1, owner__$1, cursor__$1, widget_header__$1, meta9702);
      };
    }(title);
  }
  return new testdrive.core.t9701(title, owner, cursor, widget_header, null);
};
testdrive.core.text_widget_content = function text_widget_content(cursor, owner) {
  var value = cljs.core.first.call(null, cljs.core.last.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, cursor))));
  var unit = testdrive.core.unit_for.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  var label = testdrive.core.label_for.call(null, (new cljs.core.Keyword(null, "label-id", "label-id", -1465071949)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  if (typeof testdrive.core.t9707 !== "undefined") {
  } else {
    testdrive.core.t9707 = function(label, unit, value, owner, cursor, text_widget_content, meta9708) {
      this.label = label;
      this.unit = unit;
      this.value = value;
      this.owner = owner;
      this.cursor = cursor;
      this.text_widget_content = text_widget_content;
      this.meta9708 = meta9708;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9707.cljs$lang$type = true;
    testdrive.core.t9707.cljs$lang$ctorStr = "testdrive.core/t9707";
    testdrive.core.t9707.cljs$lang$ctorPrWriter = function(value, unit, label) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9707");
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.om$core$IRender$ = true;
    testdrive.core.t9707.prototype.om$core$IRender$render$arity$1 = function(value, unit, label) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.div({"className":"content"}, React.DOM.strong(null, self__.value), React.DOM.small({"className":"units"}, self__.unit), React.DOM.small(null, self__.label));
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.cljs$core$IMeta$_meta$arity$1 = function(value, unit, label) {
      return function(_9709) {
        var self__ = this;
        var _9709__$1 = this;
        return self__.meta9708;
      };
    }(value, unit, label);
    testdrive.core.t9707.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(value, unit, label) {
      return function(_9709, meta9708__$1) {
        var self__ = this;
        var _9709__$1 = this;
        return new testdrive.core.t9707(self__.label, self__.unit, self__.value, self__.owner, self__.cursor, self__.text_widget_content, meta9708__$1);
      };
    }(value, unit, label);
    testdrive.core.__GT_t9707 = function(value, unit, label) {
      return function __GT_t9707(label__$1, unit__$1, value__$1, owner__$1, cursor__$1, text_widget_content__$1, meta9708) {
        return new testdrive.core.t9707(label__$1, unit__$1, value__$1, owner__$1, cursor__$1, text_widget_content__$1, meta9708);
      };
    }(value, unit, label);
  }
  return new testdrive.core.t9707(label, unit, value, owner, cursor, text_widget_content, null);
};
testdrive.core.widget_footer = function widget_footer(cursor, owner) {
  if (typeof testdrive.core.t9713 !== "undefined") {
  } else {
    testdrive.core.t9713 = function(owner, cursor, widget_footer, meta9714) {
      this.owner = owner;
      this.cursor = cursor;
      this.widget_footer = widget_footer;
      this.meta9714 = meta9714;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9713.cljs$lang$type = true;
    testdrive.core.t9713.cljs$lang$ctorStr = "testdrive.core/t9713";
    testdrive.core.t9713.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9713");
    };
    testdrive.core.t9713.prototype.om$core$IRender$ = true;
    testdrive.core.t9713.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"footer"}, "just updated");
    };
    testdrive.core.t9713.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9715) {
      var self__ = this;
      var _9715__$1 = this;
      return self__.meta9714;
    };
    testdrive.core.t9713.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9715, meta9714__$1) {
      var self__ = this;
      var _9715__$1 = this;
      return new testdrive.core.t9713(self__.owner, self__.cursor, self__.widget_footer, meta9714__$1);
    };
    testdrive.core.__GT_t9713 = function __GT_t9713(owner__$1, cursor__$1, widget_footer__$1, meta9714) {
      return new testdrive.core.t9713(owner__$1, cursor__$1, widget_footer__$1, meta9714);
    };
  }
  return new testdrive.core.t9713(owner, cursor, widget_footer, null);
};
testdrive.core.text_widget = function text_widget(cursor, owner) {
  var kind_class = cljs.core.name.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(cljs.core.key.call(null, cursor)));
  if (typeof testdrive.core.t9719 !== "undefined") {
  } else {
    testdrive.core.t9719 = function(kind_class, owner, cursor, text_widget, meta9720) {
      this.kind_class = kind_class;
      this.owner = owner;
      this.cursor = cursor;
      this.text_widget = text_widget;
      this.meta9720 = meta9720;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9719.cljs$lang$type = true;
    testdrive.core.t9719.cljs$lang$ctorStr = "testdrive.core/t9719";
    testdrive.core.t9719.cljs$lang$ctorPrWriter = function(kind_class) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9719");
      };
    }(kind_class);
    testdrive.core.t9719.prototype.om$core$IRender$ = true;
    testdrive.core.t9719.prototype.om$core$IRender$render$arity$1 = function(kind_class) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.li({"className":"widget " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.kind_class)}, om.core.build.call(null, testdrive.core.widget_header, self__.cursor), om.core.build.call(null, testdrive.core.text_widget_content, self__.cursor), om.core.build.call(null, testdrive.core.widget_footer, self__.cursor));
      };
    }(kind_class);
    testdrive.core.t9719.prototype.cljs$core$IMeta$_meta$arity$1 = function(kind_class) {
      return function(_9721) {
        var self__ = this;
        var _9721__$1 = this;
        return self__.meta9720;
      };
    }(kind_class);
    testdrive.core.t9719.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(kind_class) {
      return function(_9721, meta9720__$1) {
        var self__ = this;
        var _9721__$1 = this;
        return new testdrive.core.t9719(self__.kind_class, self__.owner, self__.cursor, self__.text_widget, meta9720__$1);
      };
    }(kind_class);
    testdrive.core.__GT_t9719 = function(kind_class) {
      return function __GT_t9719(kind_class__$1, owner__$1, cursor__$1, text_widget__$1, meta9720) {
        return new testdrive.core.t9719(kind_class__$1, owner__$1, cursor__$1, text_widget__$1, meta9720);
      };
    }(kind_class);
  }
  return new testdrive.core.t9719(kind_class, owner, cursor, text_widget, null);
};
testdrive.core.widget_list = function widget_list(cursor, owner) {
  if (typeof testdrive.core.t9797 !== "undefined") {
  } else {
    testdrive.core.t9797 = function(owner, cursor, widget_list, meta9798) {
      this.owner = owner;
      this.cursor = cursor;
      this.widget_list = widget_list;
      this.meta9798 = meta9798;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9797.cljs$lang$type = true;
    testdrive.core.t9797.cljs$lang$ctorStr = "testdrive.core/t9797";
    testdrive.core.t9797.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9797");
    };
    testdrive.core.t9797.prototype.om$core$IRender$ = true;
    testdrive.core.t9797.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.ul({"className":"widgets grid"}, cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1) {
        return function(p1__9722_SHARP_) {
          return om.core.build.call(null, testdrive.core.text_widget, p1__9722_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), cljs.core.key.call(null, p1__9722_SHARP_)], null));
        };
      }(___$1), (new cljs.core.Keyword(null, "sensors", "sensors", -1987490738)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
    };
    testdrive.core.t9797.prototype.om$core$IWillMount$ = true;
    testdrive.core.t9797.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ___$1) {
        return function() {
          var f__6369__auto__ = function() {
            var switch__6353__auto__ = function(c__6368__auto__, ___$1) {
              return function(state_9837) {
                var state_val_9838 = state_9837[1];
                if (state_val_9838 === 7) {
                  var inst_9803 = state_9837[7];
                  var inst_9803__$1 = state_9837[2];
                  var state_9837__$1 = function() {
                    var statearr_9839 = state_9837;
                    statearr_9839[7] = inst_9803__$1;
                    return statearr_9839;
                  }();
                  if (cljs.core.truth_(inst_9803__$1)) {
                    var statearr_9840_9871 = state_9837__$1;
                    statearr_9840_9871[1] = 8;
                  } else {
                    var statearr_9841_9872 = state_9837__$1;
                    statearr_9841_9872[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9838 === 1) {
                    var state_9837__$1 = state_9837;
                    var statearr_9842_9873 = state_9837__$1;
                    statearr_9842_9873[2] = null;
                    statearr_9842_9873[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9838 === 4) {
                      var state_9837__$1 = state_9837;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9837__$1, 7, testdrive.core.event_ch);
                    } else {
                      if (state_val_9838 === 15) {
                        var inst_9805 = state_9837[8];
                        var inst_9817 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "log", "log", -1595516004), inst_9805);
                        var state_9837__$1 = state_9837;
                        if (inst_9817) {
                          var statearr_9843_9874 = state_9837__$1;
                          statearr_9843_9874[1] = 17;
                        } else {
                          var statearr_9844_9875 = state_9837__$1;
                          statearr_9844_9875[1] = 18;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9838 === 13) {
                          var inst_9826 = state_9837[2];
                          var state_9837__$1 = state_9837;
                          var statearr_9845_9876 = state_9837__$1;
                          statearr_9845_9876[2] = inst_9826;
                          statearr_9845_9876[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9838 === 6) {
                            var inst_9833 = state_9837[2];
                            var state_9837__$1 = state_9837;
                            var statearr_9846_9877 = state_9837__$1;
                            statearr_9846_9877[2] = inst_9833;
                            statearr_9846_9877[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9838 === 17) {
                              var inst_9803 = state_9837[7];
                              var inst_9819 = testdrive.core.process_new_log.call(null, self__.cursor, inst_9803);
                              var state_9837__$1 = state_9837;
                              var statearr_9847_9878 = state_9837__$1;
                              statearr_9847_9878[2] = inst_9819;
                              statearr_9847_9878[1] = 19;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9838 === 3) {
                                var inst_9835 = state_9837[2];
                                var state_9837__$1 = state_9837;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9837__$1, inst_9835);
                              } else {
                                if (state_val_9838 === 12) {
                                  var inst_9805 = state_9837[8];
                                  var inst_9813 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "event", "event", 301435442), inst_9805);
                                  var state_9837__$1 = state_9837;
                                  if (inst_9813) {
                                    var statearr_9848_9879 = state_9837__$1;
                                    statearr_9848_9879[1] = 14;
                                  } else {
                                    var statearr_9849_9880 = state_9837__$1;
                                    statearr_9849_9880[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_9838 === 2) {
                                    var state_9837__$1 = state_9837;
                                    var statearr_9850_9881 = state_9837__$1;
                                    statearr_9850_9881[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9838 === 19) {
                                      var inst_9822 = state_9837[2];
                                      var state_9837__$1 = state_9837;
                                      var statearr_9852_9882 = state_9837__$1;
                                      statearr_9852_9882[2] = inst_9822;
                                      statearr_9852_9882[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9838 === 11) {
                                        var inst_9803 = state_9837[7];
                                        var inst_9811 = testdrive.core.process_new_label.call(null, self__.cursor, inst_9803);
                                        var state_9837__$1 = state_9837;
                                        var statearr_9853_9883 = state_9837__$1;
                                        statearr_9853_9883[2] = inst_9811;
                                        statearr_9853_9883[1] = 13;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9838 === 9) {
                                          var state_9837__$1 = state_9837;
                                          var statearr_9854_9884 = state_9837__$1;
                                          statearr_9854_9884[2] = null;
                                          statearr_9854_9884[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_9838 === 5) {
                                            var state_9837__$1 = state_9837;
                                            var statearr_9855_9885 = state_9837__$1;
                                            statearr_9855_9885[2] = null;
                                            statearr_9855_9885[1] = 6;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_9838 === 14) {
                                              var inst_9803 = state_9837[7];
                                              var inst_9815 = testdrive.core.process_new_event.call(null, self__.cursor, inst_9803);
                                              var state_9837__$1 = state_9837;
                                              var statearr_9856_9886 = state_9837__$1;
                                              statearr_9856_9886[2] = inst_9815;
                                              statearr_9856_9886[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_9838 === 16) {
                                                var inst_9824 = state_9837[2];
                                                var state_9837__$1 = state_9837;
                                                var statearr_9857_9887 = state_9837__$1;
                                                statearr_9857_9887[2] = inst_9824;
                                                statearr_9857_9887[1] = 13;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_9838 === 10) {
                                                  var inst_9829 = state_9837[2];
                                                  var state_9837__$1 = function() {
                                                    var statearr_9858 = state_9837;
                                                    statearr_9858[9] = inst_9829;
                                                    return statearr_9858;
                                                  }();
                                                  var statearr_9859_9888 = state_9837__$1;
                                                  statearr_9859_9888[2] = null;
                                                  statearr_9859_9888[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_9838 === 18) {
                                                    var state_9837__$1 = state_9837;
                                                    var statearr_9860_9889 = state_9837__$1;
                                                    statearr_9860_9889[2] = null;
                                                    statearr_9860_9889[1] = 19;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_9838 === 8) {
                                                      var inst_9805 = state_9837[8];
                                                      var inst_9803 = state_9837[7];
                                                      var inst_9805__$1 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(inst_9803);
                                                      var inst_9809 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "label", "label", 1718410804), inst_9805__$1);
                                                      var state_9837__$1 = function() {
                                                        var statearr_9861 = state_9837;
                                                        statearr_9861[8] = inst_9805__$1;
                                                        return statearr_9861;
                                                      }();
                                                      if (inst_9809) {
                                                        var statearr_9862_9890 = state_9837__$1;
                                                        statearr_9862_9890[1] = 11;
                                                      } else {
                                                        var statearr_9863_9891 = state_9837__$1;
                                                        statearr_9863_9891[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6368__auto__, ___$1);
            return function(switch__6353__auto__, c__6368__auto__, ___$1) {
              return function() {
                var state_machine__6354__auto__ = null;
                var state_machine__6354__auto____0 = function() {
                  var statearr_9867 = [null, null, null, null, null, null, null, null, null, null];
                  statearr_9867[0] = state_machine__6354__auto__;
                  statearr_9867[1] = 1;
                  return statearr_9867;
                };
                var state_machine__6354__auto____1 = function(state_9837) {
                  while (true) {
                    var ret_value__6355__auto__ = function() {
                      try {
                        while (true) {
                          var result__6356__auto__ = switch__6353__auto__.call(null, state_9837);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6356__auto__;
                          }
                          break;
                        }
                      } catch (e9868) {
                        if (e9868 instanceof Object) {
                          var ex__6357__auto__ = e9868;
                          var statearr_9869_9892 = state_9837;
                          statearr_9869_9892[5] = ex__6357__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9837);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e9868;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__9893 = state_9837;
                      state_9837 = G__9893;
                      continue;
                    } else {
                      return ret_value__6355__auto__;
                    }
                    break;
                  }
                };
                state_machine__6354__auto__ = function(state_9837) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6354__auto____0.call(this);
                    case 1:
                      return state_machine__6354__auto____1.call(this, state_9837);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
                return state_machine__6354__auto__;
              }();
            }(switch__6353__auto__, c__6368__auto__, ___$1);
          }();
          var state__6370__auto__ = function() {
            var statearr_9870 = f__6369__auto__.call(null);
            statearr_9870[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
            return statearr_9870;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
        };
      }(c__6368__auto__, ___$1));
      return c__6368__auto__;
    };
    testdrive.core.t9797.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9799) {
      var self__ = this;
      var _9799__$1 = this;
      return self__.meta9798;
    };
    testdrive.core.t9797.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9799, meta9798__$1) {
      var self__ = this;
      var _9799__$1 = this;
      return new testdrive.core.t9797(self__.owner, self__.cursor, self__.widget_list, meta9798__$1);
    };
    testdrive.core.__GT_t9797 = function __GT_t9797(owner__$1, cursor__$1, widget_list__$1, meta9798) {
      return new testdrive.core.t9797(owner__$1, cursor__$1, widget_list__$1, meta9798);
    };
  }
  return new testdrive.core.t9797(owner, cursor, widget_list, null);
};
testdrive.core.console_entry = function console_entry(p__9894, owner) {
  var map__9899 = p__9894;
  var map__9899__$1 = cljs.core.seq_QMARK_.call(null, map__9899) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9899) : map__9899;
  var cursor = map__9899__$1;
  var value = cljs.core.get.call(null, map__9899__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var id = cljs.core.get.call(null, map__9899__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var label = testdrive.core.label_for.call(null, id);
  var timestamp = cljs_time.format.unparse.call(null, cljs_time.format.formatters.call(null, new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364)), cljs_time.core.now.call(null));
  if (typeof testdrive.core.t9900 !== "undefined") {
  } else {
    testdrive.core.t9900 = function(timestamp, label, id, value, cursor, map__9899, owner, p__9894, console_entry, meta9901) {
      this.timestamp = timestamp;
      this.label = label;
      this.id = id;
      this.value = value;
      this.cursor = cursor;
      this.map__9899 = map__9899;
      this.owner = owner;
      this.p__9894 = p__9894;
      this.console_entry = console_entry;
      this.meta9901 = meta9901;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9900.cljs$lang$type = true;
    testdrive.core.t9900.cljs$lang$ctorStr = "testdrive.core/t9900";
    testdrive.core.t9900.cljs$lang$ctorPrWriter = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
        return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9900");
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.om$core$IRender$ = true;
    testdrive.core.t9900.prototype.om$core$IRender$render$arity$1 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(this__5129__auto__) {
        var self__ = this;
        var this__5129__auto____$1 = this;
        return React.DOM.li(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.timestamp) + " [" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.label) + "]: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.value));
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.cljs$core$IMeta$_meta$arity$1 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(_9902) {
        var self__ = this;
        var _9902__$1 = this;
        return self__.meta9901;
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.t9900.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function(_9902, meta9901__$1) {
        var self__ = this;
        var _9902__$1 = this;
        return new testdrive.core.t9900(self__.timestamp, self__.label, self__.id, self__.value, self__.cursor, self__.map__9899, self__.owner, self__.p__9894, self__.console_entry, meta9901__$1);
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
    testdrive.core.__GT_t9900 = function(label, timestamp, map__9899, map__9899__$1, cursor, value, id) {
      return function __GT_t9900(timestamp__$1, label__$1, id__$1, value__$1, cursor__$1, map__9899__$2, owner__$1, p__9894__$1, console_entry__$1, meta9901) {
        return new testdrive.core.t9900(timestamp__$1, label__$1, id__$1, value__$1, cursor__$1, map__9899__$2, owner__$1, p__9894__$1, console_entry__$1, meta9901);
      };
    }(label, timestamp, map__9899, map__9899__$1, cursor, value, id);
  }
  return new testdrive.core.t9900(timestamp, label, id, value, cursor, map__9899__$1, owner, p__9894, console_entry, null);
};
testdrive.core.console = function console__$1(cursor, owner) {
  if (typeof testdrive.core.t9907 !== "undefined") {
  } else {
    testdrive.core.t9907 = function(owner, cursor, console, meta9908) {
      this.owner = owner;
      this.cursor = cursor;
      this.console = console;
      this.meta9908 = meta9908;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9907.cljs$lang$type = true;
    testdrive.core.t9907.cljs$lang$ctorStr = "testdrive.core/t9907";
    testdrive.core.t9907.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9907");
    };
    testdrive.core.t9907.prototype.om$core$IRender$ = true;
    testdrive.core.t9907.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":"console" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_((new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)).cljs$core$IFn$_invoke$arity$1(self__.cursor)) ? "hidden" : null), "id":"console"}, React.DOM.div({"className":"header"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, "CONSOLE")), React.DOM.div({"className":"content", "id":"console-content"}, React.DOM.ul(null, 
      cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1) {
        return function(p1__9903_SHARP_) {
          return om.core.build.call(null, testdrive.core.console_entry, p1__9903_SHARP_);
        };
      }(___$1), (new cljs.core.Keyword(null, "console", "console", 1228072057)).cljs$core$IFn$_invoke$arity$1(self__.cursor))))));
    };
    testdrive.core.t9907.prototype.om$core$IDidUpdate$ = true;
    testdrive.core.t9907.prototype.om$core$IDidUpdate$did_update$arity$3 = function(_, ___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      var console_9910__$2 = document.getElementById("console-content");
      console_9910__$2.scrollTop = console_9910__$2.scrollHeight;
      if (!cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "console", "console", 1228072057)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) {
        return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)], null), false);
      } else {
        return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "console-hidden?", "console-hidden?", -230453177)], null), true);
      }
    };
    testdrive.core.t9907.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9909) {
      var self__ = this;
      var _9909__$1 = this;
      return self__.meta9908;
    };
    testdrive.core.t9907.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9909, meta9908__$1) {
      var self__ = this;
      var _9909__$1 = this;
      return new testdrive.core.t9907(self__.owner, self__.cursor, self__.console, meta9908__$1);
    };
    testdrive.core.__GT_t9907 = function __GT_t9907(owner__$1, cursor__$1, console__$1, meta9908) {
      return new testdrive.core.t9907(owner__$1, cursor__$1, console__$1, meta9908);
    };
  }
  return new testdrive.core.t9907(owner, cursor, console__$1, null);
};
testdrive.core.not_connected = function not_connected(cursor, owner) {
  if (typeof testdrive.core.t9914 !== "undefined") {
  } else {
    testdrive.core.t9914 = function(owner, cursor, not_connected, meta9915) {
      this.owner = owner;
      this.cursor = cursor;
      this.not_connected = not_connected;
      this.meta9915 = meta9915;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9914.cljs$lang$type = true;
    testdrive.core.t9914.cljs$lang$ctorStr = "testdrive.core/t9914";
    testdrive.core.t9914.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9914");
    };
    testdrive.core.t9914.prototype.om$core$IRender$ = true;
    testdrive.core.t9914.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"no-connection"}, React.DOM.h2(null, "Awaiting connection..."), React.DOM.a({"href":"https://github.com/blakejakopovic/TestDrive"}, "This seems to be taking a while...?"));
    };
    testdrive.core.t9914.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9916) {
      var self__ = this;
      var _9916__$1 = this;
      return self__.meta9915;
    };
    testdrive.core.t9914.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9916, meta9915__$1) {
      var self__ = this;
      var _9916__$1 = this;
      return new testdrive.core.t9914(self__.owner, self__.cursor, self__.not_connected, meta9915__$1);
    };
    testdrive.core.__GT_t9914 = function __GT_t9914(owner__$1, cursor__$1, not_connected__$1, meta9915) {
      return new testdrive.core.t9914(owner__$1, cursor__$1, not_connected__$1, meta9915);
    };
  }
  return new testdrive.core.t9914(owner, cursor, not_connected, null);
};
testdrive.core.header_bar = function header_bar(cursor, owner) {
  if (typeof testdrive.core.t9920 !== "undefined") {
  } else {
    testdrive.core.t9920 = function(owner, cursor, header_bar, meta9921) {
      this.owner = owner;
      this.cursor = cursor;
      this.header_bar = header_bar;
      this.meta9921 = meta9921;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9920.cljs$lang$type = true;
    testdrive.core.t9920.cljs$lang$ctorStr = "testdrive.core/t9920";
    testdrive.core.t9920.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9920");
    };
    testdrive.core.t9920.prototype.om$core$IRender$ = true;
    testdrive.core.t9920.prototype.om$core$IRender$render$arity$1 = function(this__5129__auto__) {
      var self__ = this;
      var this__5129__auto____$1 = this;
      return React.DOM.div({"className":"header clearfix", "id":"header"}, React.DOM.div({"className":"logo"}, React.DOM.span({"className":"glyphicon glyphicon-dashboard"}), React.DOM.span({"className":"title"}, "TestDrive Dashboard")), React.DOM.div({"className":"actions"}, ""));
    };
    testdrive.core.t9920.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9922) {
      var self__ = this;
      var _9922__$1 = this;
      return self__.meta9921;
    };
    testdrive.core.t9920.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9922, meta9921__$1) {
      var self__ = this;
      var _9922__$1 = this;
      return new testdrive.core.t9920(self__.owner, self__.cursor, self__.header_bar, meta9921__$1);
    };
    testdrive.core.__GT_t9920 = function __GT_t9920(owner__$1, cursor__$1, header_bar__$1, meta9921) {
      return new testdrive.core.t9920(owner__$1, cursor__$1, header_bar__$1, meta9921);
    };
  }
  return new testdrive.core.t9920(owner, cursor, header_bar, null);
};
testdrive.core.dashboard = function dashboard(cursor, owner) {
  if (typeof testdrive.core.t9991 !== "undefined") {
  } else {
    testdrive.core.t9991 = function(owner, cursor, dashboard, meta9992) {
      this.owner = owner;
      this.cursor = cursor;
      this.dashboard = dashboard;
      this.meta9992 = meta9992;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    testdrive.core.t9991.cljs$lang$type = true;
    testdrive.core.t9991.cljs$lang$ctorStr = "testdrive.core/t9991";
    testdrive.core.t9991.cljs$lang$ctorPrWriter = function(this__4118__auto__, writer__4119__auto__, opt__4120__auto__) {
      return cljs.core._write.call(null, writer__4119__auto__, "testdrive.core/t9991");
    };
    testdrive.core.t9991.prototype.om$core$IRender$ = true;
    testdrive.core.t9991.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) {
        return React.DOM.div({"id":"dashboard"}, om.core.build.call(null, testdrive.core.widget_list, self__.cursor), om.core.build.call(null, testdrive.core.console, self__.cursor));
      } else {
        return om.core.build.call(null, testdrive.core.not_connected, self__.cursor);
      }
    };
    testdrive.core.t9991.prototype.om$core$IWillMount$ = true;
    testdrive.core.t9991.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ___$1) {
        return function() {
          var f__6369__auto__ = function() {
            var switch__6353__auto__ = function(c__6368__auto__, ___$1) {
              return function(state_10030) {
                var state_val_10031 = state_10030[1];
                if (state_val_10031 === 7) {
                  var inst_9997 = state_10030[7];
                  var inst_9997__$1 = state_10030[2];
                  var state_10030__$1 = function() {
                    var statearr_10032 = state_10030;
                    statearr_10032[7] = inst_9997__$1;
                    return statearr_10032;
                  }();
                  if (cljs.core.truth_(inst_9997__$1)) {
                    var statearr_10033_10059 = state_10030__$1;
                    statearr_10033_10059[1] = 8;
                  } else {
                    var statearr_10034_10060 = state_10030__$1;
                    statearr_10034_10060[1] = 9;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10031 === 1) {
                    var state_10030__$1 = state_10030;
                    var statearr_10035_10061 = state_10030__$1;
                    statearr_10035_10061[2] = null;
                    statearr_10035_10061[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10031 === 4) {
                      var state_10030__$1 = state_10030;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10030__$1, 7, testdrive.core.connection_ch);
                    } else {
                      if (state_val_10031 === 15) {
                        var state_10030__$1 = state_10030;
                        var statearr_10036_10062 = state_10030__$1;
                        statearr_10036_10062[2] = null;
                        statearr_10036_10062[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10031 === 13) {
                          var inst_10019 = state_10030[2];
                          var state_10030__$1 = state_10030;
                          var statearr_10037_10063 = state_10030__$1;
                          statearr_10037_10063[2] = inst_10019;
                          statearr_10037_10063[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10031 === 6) {
                            var inst_10026 = state_10030[2];
                            var state_10030__$1 = state_10030;
                            var statearr_10038_10064 = state_10030__$1;
                            statearr_10038_10064[2] = inst_10026;
                            statearr_10038_10064[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10031 === 3) {
                              var inst_10028 = state_10030[2];
                              var state_10030__$1 = state_10030;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10030__$1, inst_10028);
                            } else {
                              if (state_val_10031 === 12) {
                                var inst_9997 = state_10030[7];
                                var inst_10009 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "close", "close", 1835149582), inst_9997);
                                var state_10030__$1 = state_10030;
                                if (inst_10009) {
                                  var statearr_10039_10065 = state_10030__$1;
                                  statearr_10039_10065[1] = 14;
                                } else {
                                  var statearr_10040_10066 = state_10030__$1;
                                  statearr_10040_10066[1] = 15;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10031 === 2) {
                                  var state_10030__$1 = state_10030;
                                  var statearr_10041_10067 = state_10030__$1;
                                  statearr_10041_10067[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10031 === 11) {
                                    var inst_10004 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_10005 = [new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)];
                                    var inst_10006 = new cljs.core.PersistentVector(null, 1, 5, inst_10004, inst_10005, null);
                                    var inst_10007 = om.core.update_BANG_.call(null, self__.cursor, inst_10006, true);
                                    var state_10030__$1 = state_10030;
                                    var statearr_10043_10068 = state_10030__$1;
                                    statearr_10043_10068[2] = inst_10007;
                                    statearr_10043_10068[1] = 13;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10031 === 9) {
                                      var state_10030__$1 = state_10030;
                                      var statearr_10044_10069 = state_10030__$1;
                                      statearr_10044_10069[2] = null;
                                      statearr_10044_10069[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10031 === 5) {
                                        var state_10030__$1 = state_10030;
                                        var statearr_10045_10070 = state_10030__$1;
                                        statearr_10045_10070[2] = null;
                                        statearr_10045_10070[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10031 === 14) {
                                          var inst_10011 = cljs.core.PersistentVector.EMPTY_NODE;
                                          var inst_10012 = [new cljs.core.Keyword(null, "connected?", "connected?", -1197551387)];
                                          var inst_10013 = new cljs.core.PersistentVector(null, 1, 5, inst_10011, inst_10012, null);
                                          var inst_10014 = om.core.update_BANG_.call(null, self__.cursor, inst_10013, false);
                                          var state_10030__$1 = state_10030;
                                          var statearr_10046_10071 = state_10030__$1;
                                          statearr_10046_10071[2] = inst_10014;
                                          statearr_10046_10071[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_10031 === 16) {
                                            var inst_10017 = state_10030[2];
                                            var state_10030__$1 = state_10030;
                                            var statearr_10047_10072 = state_10030__$1;
                                            statearr_10047_10072[2] = inst_10017;
                                            statearr_10047_10072[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10031 === 10) {
                                              var inst_10022 = state_10030[2];
                                              var state_10030__$1 = function() {
                                                var statearr_10048 = state_10030;
                                                statearr_10048[8] = inst_10022;
                                                return statearr_10048;
                                              }();
                                              var statearr_10049_10073 = state_10030__$1;
                                              statearr_10049_10073[2] = null;
                                              statearr_10049_10073[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10031 === 8) {
                                                var inst_9997 = state_10030[7];
                                                var inst_10002 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "open", "open", -1763596448), inst_9997);
                                                var state_10030__$1 = state_10030;
                                                if (inst_10002) {
                                                  var statearr_10050_10074 = state_10030__$1;
                                                  statearr_10050_10074[1] = 11;
                                                } else {
                                                  var statearr_10051_10075 = state_10030__$1;
                                                  statearr_10051_10075[1] = 12;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6368__auto__, ___$1);
            return function(switch__6353__auto__, c__6368__auto__, ___$1) {
              return function() {
                var state_machine__6354__auto__ = null;
                var state_machine__6354__auto____0 = function() {
                  var statearr_10055 = [null, null, null, null, null, null, null, null, null];
                  statearr_10055[0] = state_machine__6354__auto__;
                  statearr_10055[1] = 1;
                  return statearr_10055;
                };
                var state_machine__6354__auto____1 = function(state_10030) {
                  while (true) {
                    var ret_value__6355__auto__ = function() {
                      try {
                        while (true) {
                          var result__6356__auto__ = switch__6353__auto__.call(null, state_10030);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6356__auto__;
                          }
                          break;
                        }
                      } catch (e10056) {
                        if (e10056 instanceof Object) {
                          var ex__6357__auto__ = e10056;
                          var statearr_10057_10076 = state_10030;
                          statearr_10057_10076[5] = ex__6357__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10030);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10056;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__10077 = state_10030;
                      state_10030 = G__10077;
                      continue;
                    } else {
                      return ret_value__6355__auto__;
                    }
                    break;
                  }
                };
                state_machine__6354__auto__ = function(state_10030) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6354__auto____0.call(this);
                    case 1:
                      return state_machine__6354__auto____1.call(this, state_10030);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
                state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
                return state_machine__6354__auto__;
              }();
            }(switch__6353__auto__, c__6368__auto__, ___$1);
          }();
          var state__6370__auto__ = function() {
            var statearr_10058 = f__6369__auto__.call(null);
            statearr_10058[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
            return statearr_10058;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
        };
      }(c__6368__auto__, ___$1));
      return c__6368__auto__;
    };
    testdrive.core.t9991.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9993) {
      var self__ = this;
      var _9993__$1 = this;
      return self__.meta9992;
    };
    testdrive.core.t9991.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9993, meta9992__$1) {
      var self__ = this;
      var _9993__$1 = this;
      return new testdrive.core.t9991(self__.owner, self__.cursor, self__.dashboard, meta9992__$1);
    };
    testdrive.core.__GT_t9991 = function __GT_t9991(owner__$1, cursor__$1, dashboard__$1, meta9992) {
      return new testdrive.core.t9991(owner__$1, cursor__$1, dashboard__$1, meta9992);
    };
  }
  return new testdrive.core.t9991(owner, cursor, dashboard, null);
};
testdrive.core.simulate_event = function simulate_event() {
  return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "temperature", "temperature", 899018429), new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", 
  "value", 305978217), 19 + cljs.core.rand_int.call(null, 8), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "pressure", "pressure", 505343747), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, 
  new cljs.core.Keyword(null, "value", "value", 305978217), 995 + cljs.core.rand_int.call(null, 11), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "humidity", "humidity", -2051231184), new cljs.core.Keyword(null, 
  "id", "id", -1388402092), 3, new cljs.core.Keyword(null, "value", "value", 305978217), 58 + cljs.core.rand_int.call(null, 8), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "altitude", "altitude", 463588637), 
  new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", "value", 305978217), 15 + cljs.core.rand_int.call(null, 6), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "event", "event", 301435442), new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, 
  "voltage", "voltage", -1909388658), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), 3 + cljs.core.rand_int.call(null, 2), new cljs.core.Keyword(null, "timestamp", "timestamp", 579478971), cljs_time.core.now.call(null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "id", "id", -1388402092), 
  1, new cljs.core.Keyword(null, "value", "value", 305978217), "Main Bedroom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), "Kitchen"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, 
  "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "value", "value", 305978217), "Hello"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "value", "value", 305978217), "World"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
  "type", "type", 1174270348), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "id", "id", -1388402092), 0, new cljs.core.Keyword(null, "value", "value", 305978217), "General message"], null)], null));
};
testdrive.core.simulate_events = function simulate_events() {
  cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "open", "open", -1763596448));
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__) {
          return function(state_10143) {
            var state_val_10144 = state_10143[1];
            if (state_val_10144 === 7) {
              var inst_10126 = state_10143[2];
              var inst_10127 = testdrive.core.debug.call(null);
              var state_10143__$1 = function() {
                var statearr_10145 = state_10143;
                statearr_10145[7] = inst_10126;
                return statearr_10145;
              }();
              if (cljs.core.truth_(inst_10127)) {
                var statearr_10146_10166 = state_10143__$1;
                statearr_10146_10166[1] = 8;
              } else {
                var statearr_10147_10167 = state_10143__$1;
                statearr_10147_10167[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10144 === 1) {
                var state_10143__$1 = state_10143;
                var statearr_10148_10168 = state_10143__$1;
                statearr_10148_10168[2] = null;
                statearr_10148_10168[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10144 === 4) {
                  var inst_10124 = state_10143[8];
                  var inst_10124__$1 = testdrive.core.simulate_event.call(null);
                  var state_10143__$1 = function() {
                    var statearr_10149 = state_10143;
                    statearr_10149[8] = inst_10124__$1;
                    return statearr_10149;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10143__$1, 7, testdrive.core.event_ch, inst_10124__$1);
                } else {
                  if (state_val_10144 === 6) {
                    var inst_10139 = state_10143[2];
                    var state_10143__$1 = state_10143;
                    var statearr_10150_10169 = state_10143__$1;
                    statearr_10150_10169[2] = inst_10139;
                    statearr_10150_10169[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10144 === 3) {
                      var inst_10141 = state_10143[2];
                      var state_10143__$1 = state_10143;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10143__$1, inst_10141);
                    } else {
                      if (state_val_10144 === 2) {
                        var state_10143__$1 = state_10143;
                        var statearr_10151_10170 = state_10143__$1;
                        statearr_10151_10170[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10144 === 11) {
                          var inst_10135 = state_10143[2];
                          var state_10143__$1 = function() {
                            var statearr_10153 = state_10143;
                            statearr_10153[9] = inst_10135;
                            return statearr_10153;
                          }();
                          var statearr_10154_10171 = state_10143__$1;
                          statearr_10154_10171[2] = null;
                          statearr_10154_10171[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10144 === 9) {
                            var state_10143__$1 = state_10143;
                            var statearr_10155_10172 = state_10143__$1;
                            statearr_10155_10172[2] = null;
                            statearr_10155_10172[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10144 === 5) {
                              var state_10143__$1 = state_10143;
                              var statearr_10156_10173 = state_10143__$1;
                              statearr_10156_10173[2] = null;
                              statearr_10156_10173[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10144 === 10) {
                                var inst_10132 = state_10143[2];
                                var inst_10133 = cljs.core.async.timeout.call(null, 100);
                                var state_10143__$1 = function() {
                                  var statearr_10157 = state_10143;
                                  statearr_10157[10] = inst_10132;
                                  return statearr_10157;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10143__$1, 11, inst_10133);
                              } else {
                                if (state_val_10144 === 8) {
                                  var inst_10124 = state_10143[8];
                                  var inst_10129 = cljs.core.println.call(null, "Simulated Event: ", inst_10124);
                                  var state_10143__$1 = state_10143;
                                  var statearr_10158_10174 = state_10143__$1;
                                  statearr_10158_10174[2] = inst_10129;
                                  statearr_10158_10174[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__);
        return function(switch__6353__auto__, c__6368__auto__) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_10162 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_10162[0] = state_machine__6354__auto__;
              statearr_10162[1] = 1;
              return statearr_10162;
            };
            var state_machine__6354__auto____1 = function(state_10143) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_10143);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e10163) {
                    if (e10163 instanceof Object) {
                      var ex__6357__auto__ = e10163;
                      var statearr_10164_10175 = state_10143;
                      statearr_10164_10175[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10143);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10163;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10176 = state_10143;
                  state_10143 = G__10176;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_10143) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_10143);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__);
      }();
      var state__6370__auto__ = function() {
        var statearr_10165 = f__6369__auto__.call(null);
        statearr_10165[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_10165;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__));
  return c__6368__auto__;
};
testdrive.core.ws_send = cljs.core.async.chan.call(null, 5);
testdrive.core.ws_receive = cljs.core.async.chan.call(null, 5);
testdrive.core.init_websocket = function init_websocket() {
  var ws = new WebSocket(testdrive.core.ws_url.call(null));
  ws.onopen = function(ws) {
    return function(evt) {
      cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "open", "open", -1763596448));
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Open:", evt.data);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onclose = function(ws) {
    return function(evt) {
      cljs.core.async.put_BANG_.call(null, testdrive.core.connection_ch, new cljs.core.Keyword(null, "close", "close", 1835149582));
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Close:", evt.data);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onmessage = function(ws) {
    return function(evt) {
      var data = evt.data;
      var msg = cljs.reader.read_string.call(null, data);
      cljs.core.async.put_BANG_.call(null, testdrive.core.event_ch, msg);
      if (cljs.core.truth_(testdrive.core.debug.call(null))) {
        return cljs.core.println.call(null, "WS Event:", msg);
      } else {
        return null;
      }
    };
  }(ws);
  ws.onerror = function(ws) {
    return function(evt) {
      return cljs.core.println.call(null, "WS Error:", evt.data);
    };
  }(ws);
  var c__6368__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6368__auto__, ws) {
    return function() {
      var f__6369__auto__ = function() {
        var switch__6353__auto__ = function(c__6368__auto__, ws) {
          return function(state_10247) {
            var state_val_10248 = state_10247[1];
            if (state_val_10248 === 7) {
              var inst_10228 = state_10247[7];
              var inst_10228__$1 = state_10247[2];
              var state_10247__$1 = function() {
                var statearr_10249 = state_10247;
                statearr_10249[7] = inst_10228__$1;
                return statearr_10249;
              }();
              if (cljs.core.truth_(inst_10228__$1)) {
                var statearr_10250_10273 = state_10247__$1;
                statearr_10250_10273[1] = 8;
              } else {
                var statearr_10251_10274 = state_10247__$1;
                statearr_10251_10274[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10248 === 1) {
                var state_10247__$1 = state_10247;
                var statearr_10252_10275 = state_10247__$1;
                statearr_10252_10275[2] = null;
                statearr_10252_10275[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10248 === 4) {
                  var state_10247__$1 = state_10247;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10247__$1, 7, testdrive.core.ws_send);
                } else {
                  if (state_val_10248 === 13) {
                    var inst_10236 = state_10247[2];
                    var state_10247__$1 = state_10247;
                    var statearr_10253_10276 = state_10247__$1;
                    statearr_10253_10276[2] = inst_10236;
                    statearr_10253_10276[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10248 === 6) {
                      var inst_10243 = state_10247[2];
                      var state_10247__$1 = state_10247;
                      var statearr_10254_10277 = state_10247__$1;
                      statearr_10254_10277[2] = inst_10243;
                      statearr_10254_10277[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10248 === 3) {
                        var inst_10245 = state_10247[2];
                        var state_10247__$1 = state_10247;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10247__$1, inst_10245);
                      } else {
                        if (state_val_10248 === 12) {
                          var state_10247__$1 = state_10247;
                          var statearr_10255_10278 = state_10247__$1;
                          statearr_10255_10278[2] = null;
                          statearr_10255_10278[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10248 === 2) {
                            var state_10247__$1 = state_10247;
                            if (cljs.core.truth_(ws)) {
                              var statearr_10256_10279 = state_10247__$1;
                              statearr_10256_10279[1] = 4;
                            } else {
                              var statearr_10257_10280 = state_10247__$1;
                              statearr_10257_10280[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10248 === 11) {
                              var inst_10228 = state_10247[7];
                              var inst_10233 = cljs.core.println.call(null, "WS Send:", inst_10228);
                              var state_10247__$1 = state_10247;
                              var statearr_10258_10281 = state_10247__$1;
                              statearr_10258_10281[2] = inst_10233;
                              statearr_10258_10281[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10248 === 9) {
                                var state_10247__$1 = state_10247;
                                var statearr_10259_10282 = state_10247__$1;
                                statearr_10259_10282[2] = null;
                                statearr_10259_10282[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10248 === 5) {
                                  var state_10247__$1 = state_10247;
                                  var statearr_10260_10283 = state_10247__$1;
                                  statearr_10260_10283[2] = null;
                                  statearr_10260_10283[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10248 === 10) {
                                    var inst_10239 = state_10247[2];
                                    var state_10247__$1 = function() {
                                      var statearr_10261 = state_10247;
                                      statearr_10261[8] = inst_10239;
                                      return statearr_10261;
                                    }();
                                    var statearr_10262_10284 = state_10247__$1;
                                    statearr_10262_10284[2] = null;
                                    statearr_10262_10284[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10248 === 8) {
                                      var inst_10228 = state_10247[7];
                                      var inst_10230 = ws.send(inst_10228);
                                      var inst_10231 = testdrive.core.debug.call(null);
                                      var state_10247__$1 = function() {
                                        var statearr_10263 = state_10247;
                                        statearr_10263[9] = inst_10230;
                                        return statearr_10263;
                                      }();
                                      if (cljs.core.truth_(inst_10231)) {
                                        var statearr_10264_10285 = state_10247__$1;
                                        statearr_10264_10285[1] = 11;
                                      } else {
                                        var statearr_10265_10286 = state_10247__$1;
                                        statearr_10265_10286[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6368__auto__, ws);
        return function(switch__6353__auto__, c__6368__auto__, ws) {
          return function() {
            var state_machine__6354__auto__ = null;
            var state_machine__6354__auto____0 = function() {
              var statearr_10269 = [null, null, null, null, null, null, null, null, null, null];
              statearr_10269[0] = state_machine__6354__auto__;
              statearr_10269[1] = 1;
              return statearr_10269;
            };
            var state_machine__6354__auto____1 = function(state_10247) {
              while (true) {
                var ret_value__6355__auto__ = function() {
                  try {
                    while (true) {
                      var result__6356__auto__ = switch__6353__auto__.call(null, state_10247);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6356__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6356__auto__;
                      }
                      break;
                    }
                  } catch (e10270) {
                    if (e10270 instanceof Object) {
                      var ex__6357__auto__ = e10270;
                      var statearr_10271_10287 = state_10247;
                      statearr_10271_10287[5] = ex__6357__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10247);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10270;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6355__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10288 = state_10247;
                  state_10247 = G__10288;
                  continue;
                } else {
                  return ret_value__6355__auto__;
                }
                break;
              }
            };
            state_machine__6354__auto__ = function(state_10247) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6354__auto____0.call(this);
                case 1:
                  return state_machine__6354__auto____1.call(this, state_10247);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6354__auto____0;
            state_machine__6354__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6354__auto____1;
            return state_machine__6354__auto__;
          }();
        }(switch__6353__auto__, c__6368__auto__, ws);
      }();
      var state__6370__auto__ = function() {
        var statearr_10272 = f__6369__auto__.call(null);
        statearr_10272[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6368__auto__;
        return statearr_10272;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6370__auto__);
    };
  }(c__6368__auto__, ws));
  return c__6368__auto__;
};
testdrive.core.init = function init() {
  om.core.root.call(null, testdrive.core.dashboard, testdrive.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(testdrive.core.config.call(null, new cljs.core.Keyword(null, "app-container-id", "app-container-id", -899827362)))], null));
  if (cljs.core.not.call(null, testdrive.core.config.call(null, new cljs.core.Keyword(null, "simulation", "simulation", -1001480470)))) {
    return testdrive.core.init_websocket.call(null);
  } else {
    testdrive.core.simulate_events.call(null);
    return cljs.core.println.call(null, "Simulation mode enabled. All data displayed is generated.");
  }
};
window.onload = testdrive.core.init;
